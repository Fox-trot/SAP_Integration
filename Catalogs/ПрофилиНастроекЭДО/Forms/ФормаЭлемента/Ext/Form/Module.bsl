
&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФорму();
	КонецЕсли;
	
	ЭлектронныеДокументыСлужебный.УстановитьУсловноеОформлениеФорматов(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПодготовитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.КодМестонахожденияОрганизации = КодМестонахождения;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПометитьНеДействующиеСертификатыВСписке();
	Оповестить("ОбновитьСостояниеЭД");
	
	Если КонтролироватьСодержимоеНастроекЭД Тогда
		Оповестить("ОбновитьИсходящиеЭД", Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ТипВыбЗначения = ТипЗнч(ВыбранноеЗначение);
		Если ТипВыбЗначения = Тип("СправочникСсылка.СертификатыЭЦП") Тогда
			
			// Сначала нужно проверить, что выбранный сертификат уже не содержится в списке
			МассивСтрок = Объект.СертификатыПодписейОрганизации.НайтиСтроки(Новый Структура("Сертификат", ВыбранноеЗначение));
			Если МассивСтрок.Количество() > 0 Тогда
				ТекстПредупреждения = НСтр("ru = 'Выбранный сертификат уже зарегистрирован в профиле настроек ЭДО'");
				ПоказатьПредупреждение(, ТекстПредупреждения, 30);
				Возврат;
			КонецЕсли;
			
			ДобавитьСертификатПодписиВСписок(ВыбранноеЗначение);
			Элементы.СертификатыПодписейОрганизации.Обновить();
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОповещениеОПолученииУникальногоИдентификатораУчастникаОбменаЭД" Тогда
		
		Если ЗначениеЗаполнено(Источник) И Источник <> ЭтаФорма.УникальныйИдентификатор Тогда
			Возврат;
		КонецЕсли;
		
		ДанныеИзменены = Ложь;
		ИдОрганизации = СокрЛП(Параметр);
		Если СокрЛП(Объект.ИдентификаторОрганизации) <> ИдОрганизации Тогда
			ДанныеИзменены = Истина;
			Объект.ИдентификаторОрганизации = ИдОрганизации;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДобавляемыйСертификат) Тогда
			ДанныеИзменены = Истина;
			ДобавитьСертификатПодписиВСписок(ДобавляемыйСертификат);
			Элементы.СертификатыПодписейОрганизации.Обновить();
			ДобавляемыйСертификат = Неопределено;
		КонецЕсли;
		
		ЭтаФорма.Модифицированность = ДанныеИзменены;
	КонецЕсли;
	
	Если ИмяСобытия = "ИзменениеПароля" Тогда
		ЭтаФорма.Прочитать();
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ



////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ДобавитьСертификат(Команда)
	
	Если Не ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции(
		"ИспользоватьЭлектронныеЦифровыеПодписи") Тогда
		
		ТекстСообщения = ЭлектронныеДокументыСлужебныйВызовСервера.ТекстСообщенияОНеобходимостиНастройкиСистемы("ПодписаниеЭД");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуВыбораСертификатаЭП();
	
КонецПроцедуры

&НаКлиенте
Процедура НачальнаяДатаЗапросаДанныхУОператора(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПрофильНастроекЭДО", Объект.Ссылка);
	ПараметрыФормы.Вставить("РежимОткрытияОкна", РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ОткрытьФорму("РегистрСведений.СостоянияОбменовЭДЧерезОператоровЭДО.Форма.ФормаРедактирования",
		ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ТАБЛИЦЫ Сертификаты подписей организации

&НаКлиенте
Процедура СертификатыПодписейОрганизацииПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ОткрытьФорму("Справочник.СертификатыЭЦП.ФормаОбъекта", Новый Структура("Ключ", Элемент.ТекущиеДанные.Сертификат));
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатыПодписейОрганизацииВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.СертификатыЭЦП.ФормаОбъекта", Новый Структура("Ключ", Элемент.ТекущиеДанные.Сертификат));
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатыПодписейОрганизацииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ПодготовитьФорму()
	
	КодМестонахождения = Объект.КодМестонахожденияОрганизации;
	
	ПометитьНеДействующиеСертификатыВСписке();
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.НачальнаяДатаЗапросаДанныхУОператора.Видимость = Ложь;
	
	ПодключениеВыполнено = Не ПустаяСтрока(Объект.Пароль);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСертификатПодписиВСписок(СертификатЭЦП)
	
	Строка = Объект.СертификатыПодписейОрганизации.Добавить();
	Строка.Сертификат = СертификатЭЦП;
	Модифицированность = Истина;
	ПометитьНеДействующиеСертификатыВСписке();
	
КонецПроцедуры

&НаСервере
Процедура ПометитьНеДействующиеСертификатыВСписке()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СертификатыЭЦП.Ссылка,
	|	ВЫБОР
	|		КОГДА НЕ СертификатыЭЦП.ПометкаУдаления
	|				И НЕ СертификатыЭЦП.Отозван
	|				И СертификатыЭЦП.ДатаОкончания >= &ТекущаяДата
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Действует
	|ИЗ
	|	Справочник.СертификатыЭЦП КАК СертификатыЭЦП
	|ГДЕ
	|	СертификатыЭЦП.Ссылка В(&СписокСертификатов)";
	
	Запрос.УстановитьПараметр("СписокСертификатов", Объект.СертификатыПодписейОрганизации.Выгрузить().ВыгрузитьКолонку("Сертификат"));
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строка Из Объект.СертификатыПодписейОрганизации Цикл
		СтрокиРезультата = ТаблицаРезультата.НайтиСтроки(Новый Структура("Ссылка", Строка.Сертификат));
		Если СтрокиРезультата.Количество() = 1 Тогда
			Строка.Действует = СтрокиРезультата[0].Действует;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСертификатаЭП()
	
	Если Объект.ПометкаУдаления Тогда
		ТекстСообщения = НСтр("ru='Для выполнения действия необходимо снять пометку удаления.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СписокИсключения", СписокСертификатовИсключения());
	ПараметрыФормы.Вставить("Организация", Объект.Организация);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ОткрытьФорму("Справочник.СертификатыЭЦП.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция СписокСертификатовИсключения()
	
	МассивИсключения = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СертификатыЭЦП.Ссылка
		|ИЗ
		|	Справочник.СертификатыЭЦП КАК СертификатыЭЦП
		|ГДЕ
		|	СертификатыЭЦП.Организация = &Организация
		|	И (СертификатыЭЦП.ПометкаУдаления
		|			ИЛИ СертификатыЭЦП.Отозван)";
		
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 0 Тогда
		МассивИсключения = Результат.ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	ТЗ = Объект.СертификатыПодписейОрганизации.Выгрузить(, "Сертификат");
	МассивСертификатов = ТЗ.ВыгрузитьКолонку("Сертификат");
	Для Каждого Элемент Из МассивСертификатов Цикл
		МассивИсключения.Добавить(Элемент);
	КонецЦикла;
	
	Возврат МассивИсключения;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////

// Методы работы с сервисом 1СЭДО

&НаКлиенте
Процедура ИзменитьПароль(Команда)
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПрофильНастроекЭДО", Объект.Ссылка);
	
	ОткрытьФорму("Справочник.ПрофилиНастроекЭДО.Форма.ФормаСменыПароля", 
		СтруктураПараметров, 
		ЭтаФорма, 
		УникальныйИдентификатор, 
		ВариантОткрытияОкна.ОтдельноеОкно, 
		, 
		, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КодМестонахожденияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПолучитьФорму("ОбщаяФорма.ФормаПодбораИзКлассификатораРегионовИРайоновУправляемая", , ЭтаФорма).Открыть();
КонецПроцедуры
