

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	Макет = Справочники.ПрофилиНастроекЭДО.ПолучитьМакет("ТекстОферты82");
	// Проверка версии конфигурации
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ТекущаяВерсия = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрокЭД(СистемнаяИнформация.ВерсияПриложения, ".");
	Если ТекущаяВерсия[1] = "3" Тогда
		Макет = Справочники.ПрофилиНастроекЭДО.ПолучитьМакет("ТекстОферты83");
	КонецЕсли;
	ДокументHTML = Макет.ПолучитьДокументHTML();
	
	СтруктураВложений = Новый Структура;
	Для Каждого Картинка Из ДокументHTML.Картинки Цикл
		СтруктураВложений.Вставить(Картинка.Имя, Картинка); 
	КонецЦикла;
	
	ТекстОферты.УстановитьHTML(Макет.ПолучитьТекст(), СтруктураВложений);
	
	УстановитьЗначенияПоУмолчанию();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаПодключенияКVenkonЭДО;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	// Задаем вопрос только в случае досрочного закрытия помощника.
	Если Не ЗначениеЗаполнено(СсылкаНаПрофильНастроек) Тогда
		
		ТекстВопроса = НСтр("ru = 'Введенные данные не будут сохранены.
							|Прервать работу помощника?'");
							
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтаФорма, ЭтаФорма);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да);
		
	Иначе
		ПередЗакрытиемЗавершение(КодВозвратаДиалога.Да, ЭтаФорма);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Форма) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Отказ = Истина;
	КонецЕсли;
		
	Если Не Отказ И ЭтоАдресВременногоХранилища(АдресВременногоХранилища) Тогда
		УдалитьИзВременногоХранилища(АдресВременногоХранилища);
	КонецЕсли;
	
	Форма.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
		
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияПоУмолчанию()
	
	ИспользоватьЭП = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции("ИспользоватьЭлектронныеЦифровыеПодписи");
	СертификатКриптографии = Справочники.СертификатыЭЦП.ПустаяСсылка();
	
	Если ИспользоватьЭП Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СертификатыЭЦП.Ссылка
		|ИЗ
		|	Справочник.СертификатыЭЦП КАК СертификатыЭЦП
		|ГДЕ
		|	СертификатыЭЦП.Организация = &Организация
		|	И НЕ СертификатыЭЦП.ПометкаУдаления
		|	И НЕ СертификатыЭЦП.Отозван";
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 1 И Выборка.Следующий() Тогда
			СертификатКриптографии = Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	ЗначениеФОИспользоватьЭП = ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции("ИспользоватьЭлектронныеЦифровыеПодписи");
	Элементы.ГруппаВыбораСертификатаЭПЧерезЭДО.Видимость = ЗначениеФОИспользоватьЭП;
	
	Элементы.Далее.Доступность = Форма.СОфертойОзнакомлен;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодсказкуПоЭП(Команда)
	
	ОткрытьФорму("Справочник.ПрофилиНастроекЭДО.Форма.ФормаПодсказкиПоЭП");
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашениеСОфертойПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	ОчиститьСообщения();
	
	Если ИспользоватьЭП Тогда
		Если СертификатКриптографии.Пустая() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан сертификат ЭЦП!");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПустаяСтрока(Пароль) Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ДалееПроверитьГотовностьСистемы", ЭтаФорма);
		ТекстВопроса = "Не заполнено поле ""Пароль"". Он будет сгенерирован автоматически. Продолжить?";
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да);
		
	Иначе
		ДалееПроверитьГотовностьСистемы(КодВозвратаДиалога.Да, Неопределено);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ДалееПроверитьГотовностьСистемы(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаФоновая;
	Элементы.Готово.Доступность 	= Ложь;
	Элементы.Назад.Доступность 		= Ложь;
	Элементы.Декорация5.Заголовок 	= "";
	Элементы.КартинкаПроверкиКомпоненты.Картинка 	= БиблиотекаКартинок.ВосклицательныйЗнакКрасный;
	Элементы.КартинкаПодключенияКЭДО.Картинка 		= БиблиотекаКартинок.ВосклицательныйЗнакКрасный;
	Элементы.Декорация2.Видимость = Истина;
	
	ПодключитьОбработчикОжидания("ДалееПроверитьПодключениеКомпонентыDIDOX", 0.1, Истина); 
		
КонецПроцедуры

&НаКлиенте
Процедура ДалееПроверитьПодключениеКомпонентыDIDOX()
	
	Элементы.КартинкаПроверкиКомпоненты.Картинка 	= БиблиотекаКартинок.Сформировать;
	
	СтатусПодключенияDLL = ОбработчикиDidoxEImzo.ПроверитьРегистрациюКомпонентыЭО();
	Если СтатусПодключенияDLL = 0 Тогда
		ОбработчикиDidoxEImzoСервер.ПодключитьФайлКомпонентыVenkonЭДО(СтатусПодключенияDLL);
	КонецЕсли;
	
	Если СтатусПодключенияDLL <> 2 Тогда
		
		ТекстЗаголовка = "Возникли ошибки при прооверки подключения компоненты Didox. Статус подключения DLL = " + СтатусПодключенияDLL;
		ДействияПриОшибкеПодключения(ТекстЗаголовка);
		
		Элементы.КартинкаПроверкиКомпоненты.Картинка = БиблиотекаКартинок.Ошибка32;
		Возврат;
		
	Иначе
		
		Элементы.КартинкаПроверкиКомпоненты.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДанныеПолучены;
		
	КонецЕсли;

	ПодключитьОбработчикОжидания("ДалееЗарегистрироватьПрофильНаСервереDIDOX", 0.1, Истина); 
		
КонецПроцедуры

&НаКлиенте
Процедура ДалееЗарегистрироватьПрофильНаСервереDIDOX()
	
	Элементы.КартинкаПодключенияКЭДО.Картинка = БиблиотекаКартинок.Сформировать;
	
	Если ТестПрофиляНастроекЭДО() И СтатусПодключенияDLL = 2 Тогда
		
		// Подписываем оферту
		ДвоичныеДанныеОферты = ПолучитьДвоичныеДанныеОфертыНаСервере();
		ПодписаннаяСтрока = ЭлектронныеДокументыСлужебныйКлиент.venkonПодписатьСтроку(ДвоичныеДанныеОферты, СертификатКриптографии); 
		Если ПодписаннаяСтрока = Неопределено ИЛИ ПодписаннаяСтрока = "" Тогда
			ДалееЗавершение();
			Возврат;
		КонецЕсли;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("Организация", Организация);
		СтруктураПараметров.Вставить("Пароль", Пароль);
		СтруктураПараметров.Вставить("СертификатКриптографии", СертификатКриптографии);
		СтруктураПараметров.Вставить("СтруктураОтветаСервера", СтруктураОтветаСервера);
		СтруктураПараметров.Вставить("ФайлОферты", ПодписаннаяСтрока);
		
		СоздатьНовыйПрофиль(СтруктураПараметров);
		ПодключитьОбработчикОжидания("ДалееЗавершение", 0.1, Истина); 
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДалееЗавершение()
	
	СтруктураОтветаСервера = Неопределено;
	Если ЭтоАдресВременногоХранилища(АдресВременногоХранилища) Тогда
		СтруктураОтветаСервера = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	КонецЕсли;
				
	Если ТипЗнч(СтруктураОтветаСервера) = Тип("Структура") И СтруктураОтветаСервера.Подключено Тогда
		
		СтруктураОтветаСервера.Свойство("ПрофильНастроекЭДО", СсылкаНаПрофильНастроек);
		
		ДействияПриУспешномПодключении("Подключение успешно выполнено!");
		
		Элементы.КартинкаПодключенияКЭДО.Картинка = БиблиотекаКартинок.СинхронизацияДанныхДанныеПолучены;
		
	Иначе
		
		Если ТипЗнч(СтруктураОтветаСервера) = Тип("Структура") Тогда		
			
			Если Не ПустаяСтрока(СтруктураОтветаСервера.СообщитьПользователю) Тогда
				Ошибки = Неопределено;
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Организация", СтруктураОтветаСервера.СообщитьПользователю);
				Для Каждого ТекстОшибки Из СтруктураОтветаСервера.Ошибки Цикл
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "Организация", ТекстОшибки);
				КонецЦикла;
				ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки);
			КонецЕсли;
			
			ДействияПриОшибкеПодключения(СтруктураОтветаСервера.СообщитьПользователю);
			
		Иначе
			ДействияПриОшибкеПодключения();
		КонецЕсли;
		
		Элементы.КартинкаПодключенияКЭДО.Картинка = БиблиотекаКартинок.Ошибка32;
				
	КонецЕсли;
	
	Оповестить("ОбновитьСостояниеЭД");
		
КонецПроцедуры

&НаСервере
Процедура СоздатьНовыйПрофиль(СтруктураПараметров)
	
	СсылкаНаПрофильНастроек = Справочники.ПрофилиНастроекЭДО.СоздатьНовыйПрофильНастроекЭДО(СтруктураПараметров, АдресВременногоХранилища, УникальныйИдентификатор);
		
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция ТестПрофиляНастроекЭДО()
	
	Отказ = Ложь;
	// Тестируем заполненность формы
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ЭлектронныеДокументыКлиентСервер.ПолучитьТекстСообщения("Поле", "Заполнение", "Организация"),
			,
			"Организация",
			,
			Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура Назад(Команда)
	
	Элементы.СтраницыПомощника.ТекущаяСтраница = Элементы.СтраницаПодключенияКVenkonЭДО;
	
КонецПроцедуры

&НаКлиенте
Процедура Готово(Команда)
	
	ПоказатьЗначение(, СсылкаНаПрофильНастроек);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияПриОшибкеПодключения(ТекстЗаголовка = "")
	
	Элементы.Назад.Доступность 		= Истина;
	Элементы.Готово.Доступность 	= Ложь;
	
	Элементы.Декорация2.Видимость 	= Ложь;
	
	Если ПустаяСтрока(ТекстЗаголовка) Тогда
		ЗаголовокПодключения = "Возникли ошибки во время регистрации нового профиля ЭДО!";
	Иначе
		ЗаголовокПодключения = ТекстЗаголовка;
	КонецЕсли;
	
	Элементы.Декорация5.Заголовок 	= ЗаголовокПодключения;
	Элементы.Декорация5.ЦветТекста 	= Новый Цвет(255, 0, 0);

КонецПроцедуры

&НаКлиенте
Процедура ДействияПриУспешномПодключении(ТекстЗаголовка = "")
	
	Элементы.Назад.Доступность 		= Ложь;
	Элементы.Готово.Доступность 	= Истина;
	
	Элементы.Декорация2.Видимость 	= Ложь;
	
	Если ПустаяСтрока(ТекстЗаголовка) Тогда
		ЗаголовокПодключения = "Подключение успешно выполнено!";
	Иначе
		ЗаголовокПодключения = ТекстЗаголовка;
	КонецЕсли;
	
	Элементы.Декорация5.Заголовок 	= ЗаголовокПодключения;
	Элементы.Декорация5.ЦветТекста 	= Новый Цвет(50, 205, 50);

КонецПроцедуры

&НаСервереБезКонтекста
Функция СгенерироватьПарольНаСервере(ДлинаПароля = 20)
	Возврат Справочники.ПрофилиНастроекЭДО.СгенерироватьНовыйПароль(ДлинаПароля);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДвоичныеДанныеОфертыНаСервере()
	
	Возврат Справочники.ПрофилиНастроекЭДО.ПолучитьДвоичныеДанныеОферты();
	
КонецФункции

&НаКлиенте
Процедура СгенерироватьПароль(Команда)
	Пароль = СгенерироватьПарольНаСервере();
КонецПроцедуры
