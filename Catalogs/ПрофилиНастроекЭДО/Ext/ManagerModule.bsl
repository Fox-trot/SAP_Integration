#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Функция СоздатьНовыйПрофильНастроекЭДО(СтруктураПараметров, АдресВременногоХранилища = "", УникальныйИдентификатор = Неопределено) Экспорт
			
	Если УникальныйИдентификатор = Неопределено Тогда
		УникальныйИдентификатор = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	СтруктураОтветаСервера 	= Неопределено;
	Организация 			= СтруктураПараметров.Организация;
	Пароль 					= СтруктураПараметров.Пароль;
	СертификатКриптографии 	= СтруктураПараметров.СертификатКриптографии;
	ФайлОферты 				= Новый ХранилищеЗначения(СтруктураПараметров.ФайлОферты, Новый СжатиеДанных(9));

	ИспользоватьЭП = ЗначениеЗаполнено(СертификатКриптографии);
	СсылкаНаПрофильНастроек = Справочники.ПрофилиНастроекЭДО.ПустаяСсылка();
	
	Попытка
		
		НачатьТранзакцию();
		НовыйПрофильНастроек = Справочники.ПрофилиНастроекЭДО.СоздатьЭлемент();
		
		ШаблонНаименование = НСтр("ru = '%1 - %2'");
		НовыйПрофильНастроек.Наименование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонНаименование,
			"Didox", Организация);
			
		НовыйПрофильНастроек.Организация = Организация;
		НовыйПрофильНастроек.Пароль = Пароль;
		НовыйПрофильНастроек.ИдентификаторОрганизации = СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ИНН"));
		НовыйПрофильНастроек.ФайлОферты = ФайлОферты;
		
		// Настройки сертификатов
		Если ЭлектронныеДокументыСлужебныйВызовСервера.ПолучитьЗначениеФункциональнойОпции("ИспользоватьЭлектронныеЦифровыеПодписи") Тогда
			Если ИспользоватьЭП Тогда
				
				НоваяСтрока = НовыйПрофильНастроек.СертификатыПодписейОрганизации.Добавить();
				НоваяСтрока.Сертификат = СертификатКриптографии;
				
			КонецЕсли;
		КонецЕсли;
		
		
		Если НовыйПрофильНастроек.ПрофильНастроекЭДОУникален() Тогда
			
			НовыйПрофильНастроек.Записать();
			
		Иначе
			
			АдресВременногоХранилища = ПоместитьВоВременноеХранилище(СтруктураОтветаСервера, УникальныйИдентификатор);
			ОтменитьТранзакцию();
			Возврат СсылкаНаПрофильНастроек;
			
		КонецЕсли;
		
		СсылкаНаПрофильНастроек = НовыйПрофильНастроек.Ссылка;
		
		СтруктураОтветаСервера = ЭлектронноеВзаимодействиеССерверомDidox.ПодключитьсяКЭДО(СсылкаНаПрофильНастроек, СертификатКриптографии);
		
		СтруктураОтветаСервера.Вставить("ПрофильНастроекЭДО");
		ОтветСервера = "";
		Если СтруктураОтветаСервера.Подключено Тогда
			
			СтруктураОтветаСервера.Вставить("ПрофильНастроекЭДО", СсылкаНаПрофильНастроек);
			
			ЗафиксироватьТранзакцию();
			
			УстановитьДатуСостоянияОбмена(СсылкаНаПрофильНастроек);
			
		Иначе
			
			АдресВременногоХранилища = ПоместитьВоВременноеХранилище(СтруктураОтветаСервера, УникальныйИдентификатор);
			ОтменитьТранзакцию();
			Возврат Справочники.ПрофилиНастроекЭДО.ПустаяСсылка();
			
		КонецЕсли;
		
		АдресВременногоХранилища = ПоместитьВоВременноеХранилище(СтруктураОтветаСервера, УникальныйИдентификатор);
		
		ОбновитьПовторноИспользуемыеЗначения();
		
	Исключение
		
		ЗаписьЖурналаРегистрации("Регистрация профиля настроек ЭДО", УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.ПрофилиНастроекЭДО, , ОписаниеОшибки());
			
		АдресВременногоХранилища = ПоместитьВоВременноеХранилище(СтруктураОтветаСервера, УникальныйИдентификатор);
		ОтменитьТранзакцию();
		
	КонецПопытки;
	
	Возврат СсылкаНаПрофильНастроек;	
	
КонецФункции

Процедура УстановитьДатуСостоянияОбмена(СсылкаНаПрофильНастроек)
	
	НаборЗаписей = РегистрыСведений.СостоянияОбменовЭДЧерезОператоровЭДО.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ПрофильНастроекЭДО.Установить(СсылкаНаПрофильНастроек);
	НаборЗаписей.Прочитать();
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ДатаПолученияЭД = НачалоДня(ТекущаяДатаСеанса());
	НоваяЗапись.ПрофильНастроекЭДО = СсылкаНаПрофильНастроек;
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция ПолучитьДвоичныеДанныеОферты() Экспорт
	
	ДвоичныеДанныеОферты = Справочники.ПрофилиНастроекЭДО.ПолучитьМакет("ФайлОферты");
	
	Возврат ДвоичныеДанныеОферты;
	
КонецФункции

#КонецЕсли

Функция СгенерироватьНовыйПароль(МаксимальнаяДлинаПароля = 20) Экспорт
	СтрокаПароля = "";
	Регистр = Строка(новый УникальныйИдентификатор) + Строка(новый УникальныйИдентификатор) + Строка(новый УникальныйИдентификатор);
	СимволыРегистра = "0,1,2,3,4,5,6,7,8,9";
	ИзменениеРегистра = "";
	МассивРегистра = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрокЭД(СимволыРегистра);
	Для А = 1 По СтрДлина(Регистр) Цикл
		Если Не МассивРегистра.Найти(Сред(Регистр, А, 1)) = Неопределено Тогда
			ИзменениеРегистра = ИзменениеРегистра + Сред(Регистр, А, 1);
		КонецЕсли;
	КонецЦикла;
	
	Основа = Строка(новый УникальныйИдентификатор);
	ЗапрещенныеСимволы = "-,l,I,О,0";
	МассивЗапрещенныхСимволов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрокЭД(ЗапрещенныеСимволы, ",", Истина);
	
	Для А = 1 По СтрДлина(Основа) Цикл
		Если МассивЗапрещенныхСимволов.Найти(Сред(Основа, А, 1)) = Неопределено Тогда
			Попытка
				РегистрСимвола = Число(Сред(ИзменениеРегистра, А, 1)) % 2;
			Исключение
				РегистрСимвола = 0;
			КонецПопытки;
			СтрокаПароля = СтрокаПароля + ?(РегистрСимвола = 0, НРег(Сред(Регистр, А, 1)), ВРЕГ(Сред(Регистр, А, 1)));
			Если СтрДлина(СтрокаПароля) >= МаксимальнаяДлинаПароля Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Лев(СтрокаПароля, МаксимальнаяДлинаПароля);
КонецФункции
