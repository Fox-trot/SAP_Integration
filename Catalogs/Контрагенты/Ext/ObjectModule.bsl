Перем мОснование;

// Функция возвращает результат запроса по справочнику контрагентов с заданным головным контрагентом
//
// Параметры:
//  ГоловнойКонтрагент - заданный головной контрагент
//
// Возвращаемое значение:
//  Результат - результат работы запроса
// 
Функция ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту(ГоловнойКонтрагент) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ГоловнойКонтрагент", ГоловнойКонтрагент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|
	|ГДЕ
	|	Контрагенты.ГоловнойКонтрагент = &ГоловнойКонтрагент
	|   и Контрагенты.ГоловнойКонтрагент <> Контрагенты.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент";
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции // ПолучитьКонтрагентовПоЗаданномуГоловномуКонтрагенту()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПриКопировании
//
Процедура ПриКопировании(ОбъектКопирования)

	Если НЕ ЭтотОбъект.ЭтоГруппа Тогда
		ЭтотОбъект.ОсновнойДоговорКонтрагента = Неопределено;
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПередЗаписью
//
Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если не ЭтоГруппа и ЮрФизЛицо<>Перечисления.ЮрФизЛицо.ФизЛицо Тогда  
		
		Если ГоловнойКонтрагент=Ссылка Тогда
			ГоловнойКонтрагент="";
		КонецЕсли;	
		
		
		Если не ЗначениеНеЗаполнено(ГоловнойКонтрагент) и ГоловнойКонтрагент.ИНН<>ИНН Тогда
			Отказ=Истина;
			СообщенияПользователю.ВывестиСообщениеПользователю("Не верно задан ИНН!", ЭтотОбъект, "ИНН");
		КонецЕсли; 
		
		Если Не Инопартнер и СтрДлина(ИНН)<>9 Тогда
			Отказ=Истина;
			СообщенияПользователю.ВывестиСообщениеПользователю("Не верно задан ИНН!", ЭтотОбъект, "ИНН");
		КонецЕсли;	
		
		Если (Сокрлп(ИНН)<>"")и (ЗначениеНеЗаполнено(ГоловнойКонтрагент)) Тогда
			
			Запрос=новый запрос;
			Запрос.Текст=
			"ВЫБРАТЬ
			|	Контрагенты.Ссылка КАК Количество
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.ГоловнойКонтрагент.Ссылка = &ГоловнойКонтрагент";
			
			Запрос.УстановитьПараметр("ГоловнойКонтрагент",ссылка);
			Список=Запрос.Выполнить().Выгрузить();
			
			Запрос=новый запрос();
			Запрос.Текст= 
			"ВЫБРАТЬ
			|	Контрагенты.ИНН,
			|	Контрагенты.Наименование,
			|	Контрагенты.Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.ИНН = &ИНН
			|	И (НЕ Контрагенты.Ссылка В (&Список))";
			
			Запрос.УстановитьПараметр("ИНН",ИНН);
			Запрос.УстановитьПараметр("Список",Список);
			Контрагенты=Запрос.Выполнить().Выгрузить();
			
			ЕстьСТакимИНН=Ложь;
			
			СообщениеОПовторяющемсяИНН="Найдены контрагенты c ИНН "+строка(инн)+Символы.ПС;
			Если Контрагенты.Количество()>0 Тогда
				Для Каждого Контрагент из Контрагенты  Цикл
					Если Контрагент.Ссылка=Ссылка Тогда
						Продолжить;
					КонецЕсли; 		
					
					СообщениеОПовторяющемсяИНН=СообщениеОПовторяющемсяИНН+Контрагент.Наименование+Символы.ПС;
					ЕстьСТакимИНН=Истина;
				КонецЦикла; 
			КонецЕсли; 
			
			Если ЕстьСТакимИНН Тогда
				
				СообщенияПользователю.ВывестиСообщениеПользователю(СообщениеОПовторяющемсяИНН, ЭтотОбъект, "ИНН");
				
				Отказ=Истина;
				
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(Основание)

	Если ТипЗнч(Основание) = Тип("СправочникСсылка.Организации") Тогда

		Наименование           = Основание.Наименование;
		ЮрФизЛицо              = Перечисления.ЮрФизЛицо.ЮрЛицо;
		НаименованиеПолное     = Основание.НаименованиеПолное;
		ОсновнойБанковскийСчет = Основание.ОсновнойБанковскийСчет;
		ИНН                    = Основание.ИНН;
		КодОКОНХ               = Основание.КодОКОНХ;
		КодПоОКПО              = Основание.КодПоОКПО;
		мОснование             = Основание;

	КонецЕсли;

КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры