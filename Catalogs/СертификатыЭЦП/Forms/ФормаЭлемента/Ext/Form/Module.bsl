////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ЗаполнитьТабличнуюЧастьПоВидамДокументов()
	
	АктуальныеЭД = ЭлектронныеДокументыПовтИсп.ПолучитьАктуальныеВидыЭД();
	
	Для Каждого ЗначениеПеречисления Из АктуальныеЭД Цикл
		Если ЗначениеПеречисления = Перечисления.ВидыЭД.Ошибка
				ИЛИ ЗначениеПеречисления = Перечисления.ВидыЭД.Подтверждение
				ИЛИ ЗначениеПеречисления = Перечисления.ВидыЭД.ДопДанные
				ИЛИ ЗначениеПеречисления = Перечисления.ВидыЭД.ВыпискаБанка
				ИЛИ ЗначениеПеречисления = Перечисления.ВидыЭД.Квитанция Тогда
			Продолжить;
		КонецЕсли;
		
		МассивСтрок = Объект.ВидыДокументов.НайтиСтроки(Новый Структура("ВидДокумента", ЗначениеПеречисления));
		Если МассивСтрок.Количество() = 0 Тогда
			НоваяСтрокаТЧ = Объект.ВидыДокументов.Добавить();
			НоваяСтрокаТЧ.ВидДокумента = ЗначениеПеречисления;
			НоваяСтрокаТЧ.ИспользоватьДляПодписи = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьДоступностьСоставаИсполнителей()
	
	Элементы.СоставИсполнителей.Доступность = Объект.ПроверятьСоставИсполнителей;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьВидимость()
	
	Элементы.ГруппаШапка.Доступность 				= Не Объект.Отозван;
	Элементы.ВидыДокументовИИсполнители.Доступность = Не Объект.Отозван;
	Элементы.ФормаКнопкаОтозван.Пометка 			= Объект.Отозван;
	Элементы.СписокПользователей.Доступность		= Объект.ОграничитьДоступКСертификату;
	Элементы.СписокПользователей.АвтоОтметкаНезаполненного = Объект.ОграничитьДоступКСертификату;
	ОпределитьДоступностьСоставаИсполнителей();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ВыделитьВсе(Команда)
	
	Для Каждого ЭлементТаблицы Из Объект.ВидыДокументов Цикл
		ЭлементТаблицы.ИспользоватьДляПодписи = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	Для Каждого ЭлементТаблицы Из Объект.ВидыДокументов Цикл
		ЭлементТаблицы.ИспользоватьДляПодписи = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СертификатОтозван(Команда)
	
	Объект.Отозван = НЕ Объект.Отозван;
	УстановитьДоступностьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничитьДоступКСертификатуПриИзменении(Элемент)
	
	УстановитьДоступностьВидимость();
	
	Если НЕ Объект.ОграничитьДоступКСертификату И ЗначениеЗаполнено(Объект.СписокПользователей) Тогда
		Объект.СписокПользователей.Очистить();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ПроверятьСоставИсполнителейПриИзменении(Элемент)
	
	ОпределитьДоступностьСоставаИсполнителей();
	
КонецПроцедуры

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	
	Объект.Фамилия = СокрЛП(Объект.Фамилия);
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	Объект.Имя = СокрЛП(Объект.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	
	Объект.Отчество = СокрЛП(Объект.Отчество);
	
КонецПроцедуры

&НаКлиенте
Процедура ДолжностьПоСертификатуПриИзменении(Элемент)
	
	Объект.ДолжностьПоСертификату = СокрЛП(Объект.ДолжностьПоСертификату);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьПарольКСертификатуПриИзменении(Элемент)

	Если НЕ Объект.ЗапомнитьПарольКСертификату Тогда
		Объект.ПарольПользователя = Неопределено;
	КонецЕсли;
	
	УстановитьДоступностьВидимость();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТабличнуюЧастьПоВидамДокументов();
	ОпределитьДоступностьСоставаИсполнителей();
		
	// Перенесем из объекта копирования двоичные данные сертификата
	Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ДвоичныеДанныеСертификата = Параметры.ЗначениеКопирования.ФайлСертификата.Получить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УстановитьДоступностьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.ОграничитьДоступКСертификату И НЕ ЗначениеЗаполнено(Объект.СписокПользователей) Тогда
		
		ТекстСообщения = НСтр("ru = 'Не указаны пользователи, которым доступен сертификат!
									|Укажите хотя бы одного пользователя, либо снимите ограничение доступа.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "СписокПользователей", "Объект", Отказ);

		//Отказ = Истина;
		//Предупреждение(НСтр("ru = 'Не указаны пользователи, котором доступен сертификат!
		//|Укажите хотя бы одного пользователя, либо снимите ограничение доступа.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновитьСостояниеЭД", Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(ДвоичныеДанныеСертификата) Тогда
		ТекущийОбъект.ФайлСертификата = Новый ХранилищеЗначения(ДвоичныеДанныеСертификата,
			Новый СжатиеДанных(9));
	КонецЕсли;
	
	ОграничитьДоступКСертификату = ТекущийОбъект.СписокПользователей.Количество() > 0;
	
КонецПроцедуры
