#Если Клиент Тогда

Функция ПечатьОС6_2003(ДатаСведений, Организация) 
	
	Макет = ПолучитьМакет("ОС6");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ШапкаРазделов1и2  = Макет.ПолучитьОбласть("ШапкаРазделов1и2");
	ШапкаРаздела3     = Макет.ПолучитьОбласть("ШапкаРаздела3");
	СтрокиРаздела3    = Макет.ПолучитьОбласть("СтрокиРаздела3");
	ШапкаРаздела4     = Макет.ПолучитьОбласть("ШапкаРаздела4");
	СтрокаРаздела4    = Макет.ПолучитьОбласть("СтрокаРаздела4");
	ПодвалСтраницы1   = Макет.ПолучитьОбласть("ПодвалСтраницы1");
	ШапкаРазделов5и6  = Макет.ПолучитьОбласть("ШапкаРазделов5и6");
	СтрокаРазделов5и6 = Макет.ПолучитьОбласть("СтрокаРазделов5и6");
	ШапкаРаздела7_1   = Макет.ПолучитьОбласть("ШапкаРаздела7_1");
	ШапкаРаздела7_2   = Макет.ПолучитьОбласть("ШапкаРаздела7_2");
	ПодвалСтраницы2   = Макет.ПолучитьОбласть("ПодвалСтраницы2");
	
	ТабДок = Новый ТабличныйДокумент();
	
	//Последние сведения об ОС
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
	Запрос.УстановитьПараметр("ОсновноеСредство", Ссылка);
	Запрос.УстановитьПараметр("СубконтоОС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.Период,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетУчета,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетНачисленияАмортизации,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ПервоначальнаяСтоимость,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение.Наименование,
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Организация = &Организация И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Организация = &Организация И ОсновноеСредство = &ОсновноеСредство) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство = ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&ДатаСведений, Организация = &Организация И ОсновноеСредство = &ОсновноеСредство) КАК СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство = СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаСведений, Организация = &Организация И ОсновноеСредство = &ОсновноеСредство) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|
	|ГДЕ
	|	ПервоначальныеСведенияОбОсновныхСредствахОрганизацийСрезПоследних.Организация = &Организация";
	ТекущиеСведенияОС = Запрос.Выполнить().Выбрать();
	ТекущиеСведенияОС.Следующий();
	
	Если ЗначениеНеЗаполнено(ТекущиеСведенияОС.ОсновноеСредство) Тогда
		Сообщить("На момент формирования отчета основное средство не принималось к учету в указанной организации."+Символы.ПС+
		"Нельзя сформировать инвентарную карточку объекта!",СтатусСообщения.Внимание);
		Возврат неопределено;
	КонецЕсли; 
	
	СчетУчетаСтоимостиБУ = ТекущиеСведенияОС.СчетУчета;
	//СрокИспользования   = ТекущиеСведенияОС.СрокПолезногоИспользования;
	
	Отбор  = Новый Структура( "ОсновноеСредство", Ссылка);
	Подразделение  = ТекущиеСведенияОС.МестонахождениеНаименование;
	
	Шапка.Параметры.Организация       = Организация;
	Шапка.Параметры.Подразделение     = Подразделение;
	Шапка.Параметры.НаименованиОС     = ?(ЗначениеНеЗаполнено(НаименованиеПолное),Наименование,НаименованиеПолное);
	Шапка.Параметры.НомерДок          = ИнвентарныйНомер;
	Шапка.Параметры.ДатаДок           = Формат(ДатаСведений,"ДФ=dd.MM.yyyy");
	Шапка.Параметры.МестоНахождениеОС = Подразделение;
	Шапка.Параметры.ИзготовительОС    = Изготовитель;
	//Шапка.Параметры.КодПоОКОФ         = КодПоОКОФ.Код;
	//Шапка.Параметры.НомерГруппы       = АмортизационнаяГруппа;
	Шапка.Параметры.НомерПаспорта     = НомерПаспорта;
	Шапка.Параметры.ЗаводскойНомер    = ЗаводскойНомер;
	Шапка.Параметры.ИнвентарныйНомер  = ИнвентарныйНомер;
	Шапка.Параметры.СубСчет           = Строка(СчетУчетаСтоимостиБУ);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостоянияОСОрганизацийБухгалтерскийУчет.Состояние,
		|	СостоянияОСОрганизацийБухгалтерскийУчет.ДатаСостояния,
		|	СобытияОСОрганизацийБухгалтерскийУчет.НазваниеДокумента,
		|	СобытияОСОрганизацийБухгалтерскийУчет.НомерДокумента,
		|	СобытияОСОрганизацийБухгалтерскийУчет.Событие,
		|	СостоянияОСОрганизацийБухгалтерскийУчет.Регистратор
		|ИЗ
		|	РегистрСведений.СобытияОСОрганизацийБухгалтерскийУчет КАК СобытияОСОрганизацийБухгалтерскийУчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизацийБухгалтерскийУчет КАК СостоянияОСОрганизацийБухгалтерскийУчет
		|		ПО СобытияОСОрганизацийБухгалтерскийУчет.Период = СостоянияОСОрганизацийБухгалтерскийУчет.ДатаСостояния И СобытияОСОрганизацийБухгалтерскийУчет.Регистратор = СостоянияОСОрганизацийБухгалтерскийУчет.Регистратор
		|
		|ГДЕ
		|	СобытияОСОрганизацийБухгалтерскийУчет.Организация = &Организация И
		|	СостоянияОСОрганизацийБухгалтерскийУчет.Организация = &Организация И
		|	СобытияОСОрганизацийБухгалтерскийУчет.ОсновноеСредство = &ОсновноеСредство И
		|	СостоянияОСОрганизацийБухгалтерскийУчет.ОсновноеСредство = &ОсновноеСредство
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	СобытияОСОрганизацийБухгалтерскийУчетСрезПоследних.Период,
		|	СобытияОСОрганизацийБухгалтерскийУчетСрезПоследних.НазваниеДокумента,
		|	СобытияОСОрганизацийБухгалтерскийУчетСрезПоследних.НомерДокумента,
		|	СобытияОСОрганизацийБухгалтерскийУчетСрезПоследних.Событие,
		|	СобытияОСОрганизацийБухгалтерскийУчетСрезПоследних.Регистратор
		|ИЗ
		|	РегистрСведений.СобытияОСОрганизацийБухгалтерскийУчет.СрезПоследних(&ДатаСведений, ОсновноеСредство = &ОсновноеСредство И Организация = &Организация И Событие.ВидСобытияОС В (&МедернизацияИКапРемонт)) КАК СобытияОСОрганизацийБухгалтерскийУчетСрезПоследних";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", Ссылка);
	Запрос.УстановитьПараметр("ДатаСведений", ДатаСведений);
	
	ВидыСобытий = Новый СписокЗначений;
	ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.Модернизация);
	ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.Достройка);
	ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.Дооборудование);
	ВидыСобытий.Добавить(Перечисления.ВидыСобытийОС.КапитальныйРемонт);

	
	Запрос.УстановитьПараметр("МедернизацияИКапРемонт", ВидыСобытий);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДатаПринятия     = '00010101';
	ДокументПринятия = "";
	
	ДатаВвода     = '00010101';
	ДокументВвода = "";
	ДокументВводаНомер = "";
	
	ДатаСписания       = '00010101';
	ДокументСписания   = "";
	РегистраторСписания = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Состояние   = Перечисления.СостоянияОС.ПринятоКУчету Тогда
			 ДатаПринятия        = Выборка.ДатаСостояния;
			 ДокументПринятия    = Выборка.НазваниеДокумента;
		ИначеЕсли Выборка.Состояние = Перечисления.СостоянияОС.ВведеноВЭксплуатацию Тогда
			 ДатаВвода           = Выборка.ДатаСостояния;
			 ДокументВвода       = Выборка.НазваниеДокумента;
			 ДокументВводаНомер  = Выборка.НомерДокумента;
		ИначеЕсли Выборка.Состояние = Перечисления.СостоянияОС.СнятоСУчета Тогда
			 ДатаСписания        = Выборка.ДатаСостояния;
			 ДокументСписания    = Выборка.НазваниеДокумента;
			 РегистраторСписания = Выборка.Регистратор;
		Иначе
			ДатаПоследнейМодернизации     = Выборка.ДатаСостояния;
			ДокументПоследнейМодернизации = Выборка.НазваниеДокумента;
		КонецЕсли; 
	КонецЦикла;

	Шапка.Параметры.ДатаВвода    = ДатаПринятия;
	Шапка.Параметры.ДатаСписания = ДатаСписания;

	ТабДок.Вывести(Шапка);

	// Сведения об объекте ОС на дату передачи	
	Если не ЗначениеНеЗаполнено(ДатаСписания) Тогда

		ШапкаРазделов1и2.Параметры.ДатаВыпуска        = ДатаВыпуска;
		ШапкаРазделов1и2.Параметры.ДатаКапремонта     = ДатаПоследнейМодернизации;
		ШапкаРазделов1и2.Параметры.ДокументВвода      = ДокументВвода; 
		ШапкаРазделов1и2.Параметры.ДокументВводаНомер = ДокументВводаНомер;
		ШапкаРазделов1и2.Параметры.ДокументВводаДата  = ДатаВвода;
		
		Если ТипЗнч(РегистраторСписания) = Тип("ДокументСсылка.ПередачаОС") Тогда
			ШапкаРазделов1и2.Параметры.СрокЭксплуатации = Цел((ДатаСписания - ДатаВвода) / 2592000);
			
			// Износ и остаточная стоимость ОС  на момент передачи
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОС_БУ.ОсновноеСредство КАК ОС_БУ,
			|	ВЫБОР КОГДА (СтоимостьОС_БУ.Субконто1) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ СтоимостьОС_БУ.СуммаОборотКт КОНЕЦ КАК СтоимостьБУ,
			|	ВЫБОР КОГДА (АмортизацияОС_БУ.Субконто1) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ АмортизацияОС_БУ.СуммаОборотДт КОНЕЦ КАК АмортизацияБУ
			|ИЗ
			|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&МоментВыбытия, Организация = &Организация И ОсновноеСредство = &ОС) КАК ОС_БУ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&МоментВыбытия, &МоментВыбытия, Период, , &ВидСубконтоОС, Организация = &Организация И Субконто1 = &ОС) КАК СтоимостьОС_БУ
			|		ПО ОС_БУ.СчетУчета = СтоимостьОС_БУ.Счет
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&МоментВыбытия, &МоментВыбытия, Период, , &ВидСубконтоОС, Организация = &Организация И Субконто1 = &ОС) КАК АмортизацияОС_БУ
			|		ПО ОС_БУ.СчетНачисленияАмортизации = АмортизацияОС_БУ.Счет";
			
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("ВидСубконтоОС",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
			Запрос.УстановитьПараметр("ОС",   Ссылка);
			
			Если ЗначениеНеЗаполнено(РегистраторСписания.ДокПодготовкаКПередачеОС) Тогда
				Запрос.УстановитьПараметр("МоментВыбытия", Новый МоментВремени(ДатаСписания,РегистраторСписания));
			Иначе
				//Производилась подготовка к передаче.
				//Накопленную амортизацию и остаточную стоимость необходимо определять при проведения документа подготовки к передаче.
				Запрос.УстановитьПараметр("МоментВыбытия", Новый МоментВремени(РегистраторСписания.ДокПодготовкаКПередачеОС.Дата,РегистраторСписания.ДокПодготовкаКПередачеОС));
			КонецЕсли;	
			СостояниеНаМоментПередачи = Запрос.Выполнить().Выгрузить();
			
			Если СостояниеНаМоментПередачи.Количество()>0 Тогда
				ШапкаРазделов1и2.Параметры.СуммаНачисленнойАммортизации = СостояниеНаМоментПередачи[0].АмортизацияБУ;
				ШапкаРазделов1и2.Параметры.ОстаточнаяСтоимость          = СостояниеНаМоментПередачи[0].СтоимостьБУ-СостояниеНаМоментПередачи[0].АмортизацияБУ;
			Иначе
				ШапкаРазделов1и2.Параметры.СуммаНачисленнойАммортизации = "";
				ШапкаРазделов1и2.Параметры.ОстаточнаяСтоимость          = "";
			КонецЕсли; 
		Иначе
			
			ШапкаРазделов1и2.Параметры.СуммаНачисленнойАммортизации = "";
			ШапкаРазделов1и2.Параметры.ОстаточнаяСтоимость          = "";
		КонецЕсли;
	КонецЕсли;

	//ШапкаРазделов1и2.Параметры.СрокПолезногоИспользования = СрокИспользования;

	// Балансовая стоимость ОС на момент поступления
	ШапкаРазделов1и2.Параметры.ПервоначальнаяСтоимость = ТекущиеСведенияОС.ПервоначальнаяСтоимость;

	ТабДок.Вывести(ШапкаРазделов1и2);
	ТабДок.Вывести(ШапкаРаздела3);
	ТабДок.Вывести(СтрокиРаздела3);

	// Сведения о приемке, внутренних перемещениях и выбытии	
	ТабДок.Вывести(ШапкаРаздела4);

	ВыборкаЗаписей = РегистрыСведений.СобытияОСОрганизацийБухгалтерскийУчет.Выбрать(,ДатаСведений,Новый Структура("ОсновноеСредство",Ссылка));
	Пока ВыборкаЗаписей.Следующий() Цикл

		Если ВыборкаЗаписей.Организация <> Организация Тогда
			Продолжить;
		КонецЕсли;

		ТекущаяОперация = ВыборкаЗаписей.Событие;

		Если (ТекущаяОперация.ВидСобытияОС <> Перечисления.ВидыСобытийОС.ПринятиеКУчету)
			И (ТекущаяОперация.ВидСобытияОС <> Перечисления.ВидыСобытийОС.ПринятиеКУчетуСВводомВЭксплуатацию)
			И (ТекущаяОперация.ВидСобытияОС <> Перечисления.ВидыСобытийОС.ВнутреннееПеремещение)
			И (ТекущаяОперация.ВидСобытияОС <> Перечисления.ВидыСобытийОС.Списание) 
			И (ТекущаяОперация.ВидСобытияОС <> Перечисления.ВидыСобытийОС.Передача) 
			Тогда
			Продолжить;
		КонецЕсли;

		СтрокаРаздела4.Параметры.ДатаНомерДокумента = ВыборкаЗаписей.НазваниеДокумента + " № "+ВыборкаЗаписей.НомерДокумента+" от "+Формат(ВыборкаЗаписей.Период,"ДФ=dd.MM.yyyy");
		СтрокаРаздела4.Параметры.ВидОперации        = ТекущаяОперация;
		СтрокаРаздела4.Параметры.ФИОМОЛДвижения     = "";
		СтрокаРаздела4.Параметры.Подразделение      = "";

		ВыборкаЗаписейМОЛ = РегистрыСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(ВыборкаЗаписей.Регистратор.Ссылка.Дата,Отбор);

		Если НЕ (ВыборкаЗаписейМОЛ = Неопределено) Тогда

			Если ВыборкаЗаписейМОЛ.Количество() > 0 Тогда;

				ВыборкаЗаписейМОЛ.Сортировать("Период Убыв");

				Для каждого СтрокаМОЛ Из ВыборкаЗаписейМОЛ Цикл

					Если СтрокаМОЛ.Организация <> Организация Тогда
						Продолжить;
					КонецЕсли;

					СтрокаРаздела4.Параметры.ФИОМОЛДвижения = СтрокаМОЛ.МОЛ;
					СтрокаРаздела4.Параметры.Подразделение = СтрокаМОЛ .Местонахождение;
					Прервать;

				КонецЦикла;

			КонецЕсли;

		КонецЕсли;

		Если ТекущаяОперация.ВидСобытияОС = Перечисления.ВидыСобытийОС.Списание или ТекущаяОперация.ВидСобытияОС = Перечисления.ВидыСобытийОС.Передача Тогда

			Если ТипЗнч(РегистраторСписания) = Тип("ДокументСсылка.ПередачаОС") Тогда
				//Параметры выбытия уже определены в таблице СостояниеНаМоментПередачи
			Иначе
				// Износ и остаточная стоимость ОС  на момент выбытия
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ОС_БУ.ОсновноеСредство КАК ОС_БУ,
				|	ВЫБОР КОГДА (СтоимостьОС_БУ.Субконто1) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ СтоимостьОС_БУ.СуммаОборотКт КОНЕЦ КАК СтоимостьБУ,
				|	ВЫБОР КОГДА (АмортизацияОС_БУ.Субконто1) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ АмортизацияОС_БУ.СуммаОборотДт КОНЕЦ КАК АмортизацияБУ
				|ИЗ
				|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(&МоментВыбытия, Организация = &Организация И ОсновноеСредство = &ОС) КАК ОС_БУ
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&МоментВыбытия, &МоментВыбытия, Период, , &ВидСубконтоОС, Организация = &Организация И Субконто1 = &ОС) КАК СтоимостьОС_БУ
				|		ПО ОС_БУ.СчетУчета = СтоимостьОС_БУ.Счет
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты(&МоментВыбытия, &МоментВыбытия, Период, , &ВидСубконтоОС, Организация = &Организация И Субконто1 = &ОС) КАК АмортизацияОС_БУ
				|		ПО ОС_БУ.СчетНачисленияАмортизации = АмортизацияОС_БУ.Счет";

				Запрос.УстановитьПараметр("Организация", Организация);
				Запрос.УстановитьПараметр("ВидСубконтоОС",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
				Запрос.УстановитьПараметр("ОС",   Ссылка);

				Запрос.УстановитьПараметр("МоментВыбытия", Новый МоментВремени(ВыборкаЗаписей.Период,ВыборкаЗаписей.Регистратор));

				СостояниеНаМоментПередачи = Запрос.Выполнить().Выгрузить();

			КонецЕсли; 

			ОстаточнаяСтоимость = 0;

			Если СостояниеНаМоментПередачи.количество()>0 тогда
				ОстаточнаяСтоимость = СостояниеНаМоментПередачи[0].СтоимостьБУ - СостояниеНаМоментПередачи[0].АмортизацияБУ;
			КонецЕсли;

			СтрокаРаздела4.Параметры.ОстаточнаяСтоимость = ОстаточнаяСтоимость;

		КонецЕсли;

		ТабДок.Вывести(СтрокаРаздела4);

	КонецЦикла;

	ТабДок.Вывести(ПодвалСтраницы1);

	// модернизация ос и ремонт
	ТаблицаМодернизаций = Новый ТаблицаЗначений;
	ТаблицаМодернизаций.Колонки.Добавить("ВидОперации");
	ТаблицаМодернизаций.Колонки.Добавить("Название");
	ТаблицаМодернизаций.Колонки.Добавить("Дата");
	ТаблицаМодернизаций.Колонки.Добавить("Номер");
	ТаблицаМодернизаций.Колонки.Добавить("Сумма");

	ТаблицаРемонтов = Новый ТаблицаЗначений;
	ТаблицаРемонтов.Колонки.Добавить("ВидОперации");
	ТаблицаРемонтов.Колонки.Добавить("Название");
	ТаблицаРемонтов.Колонки.Добавить("Дата");
	ТаблицаРемонтов.Колонки.Добавить("Номер");
	ТаблицаРемонтов.Колонки.Добавить("Сумма");

	//ШапкаРазделов5и6.Параметры.Валюта = ВалютаПечати;
	ТабДок.Вывести(ШапкаРазделов5и6);

	СписокМодернизаций = Новый Массив;
	СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Модернизация);
	СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Достройка);
	СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Реконструкция);
	СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.Дооборудование);
	СписокМодернизаций.Добавить(Перечисления.ВидыСобытийОС.ЧастичнаяЛиквидация);

	СписокРемонтов = Новый Массив;
	СписокРемонтов.Добавить(Перечисления.ВидыСобытийОС.СреднийРемонт);
	СписокРемонтов.Добавить(Перечисления.ВидыСобытийОС.ТекущийРемонт);
	СписокРемонтов.Добавить(Перечисления.ВидыСобытийОС.КапитальныйРемонт);
	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("Организация",  Организация);
	//Запрос.УстановитьПараметр("ОсновноеСредство",  Ссылка);
	//Запрос.УстановитьПараметр("УсловиеМодернизаций",СписокМодернизаций);
	//Запрос.УстановитьПараметр("УсловиеРемонтов",СписокРемонтов);
	//Запрос.УстановитьПараметр("ВидСобытияОС",Перечисления.ВидыСобытийОС.ПринятиеКУчету);

	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ВЫБОР КОГДА СобытияОСОрганизацийБухгалтерскийУчет.Событие.ВидСобытияОС В (&УсловиеМодернизаций) ТОГДА СобытияОСОрганизацийБухгалтерскийУчет.СуммаЗатратБУ ИНАЧЕ 0 КОНЕЦ КАК СуммаЗатратБУМодернизаций,
	//|	ВЫБОР КОГДА СобытияОСОрганизацийБухгалтерскийУчет.Событие.ВидСобытияОС В (&УсловиеРемонтов) ТОГДА СобытияОСОрганизацийБухгалтерскийУчет.СуммаЗатратБУ ИНАЧЕ 0 КОНЕЦ КАК СуммаЗатратБУРемонтов,
	//|	СобытияОСОрганизацийБухгалтерскийУчет.Регистратор КАК Регистратор,
	//|	СобытияОСОрганизацийБухгалтерскийУчет.Период КАК Период,
	//|	СобытияОСОрганизацийБухгалтерскийУчет.Событие КАК Операция,
	//|	СобытияОСОрганизацийБухгалтерскийУчет.НомерДокумента КАК НомерДокумента,
	//|	ВЫРАЗИТЬ(СобытияОСОрганизацийБухгалтерскийУчет.НазваниеДокумента КАК СТРОКА(200)) КАК НазваниеДокумента
	//|ИЗ
	//|	РегистрСведений.СобытияОСОрганизацийБухгалтерскийУчет КАК СобытияОСОрганизацийБухгалтерскийУчет
	//|
	//|ГДЕ
	//|	СобытияОСОрганизацийБухгалтерскийУчет.Организация = &Организация И
	//|	СобытияОСОрганизацийБухгалтерскийУчет.Событие.ВидСобытияОС <> &ВидСобытияОС И
	//|	СобытияОСОрганизацийБухгалтерскийУчет.ОсновноеСредство = &ОсновноеСредство
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Период,
	//|	Регистратор";

	//Результат = Запрос.Выполнить();

	//СпособВыборки = ОбходРезультатаЗапроса.Прямой;
	//ВыборкаРегистраторов = Результат.Выбрать(СпособВыборки);
	//Пока ВыборкаРегистраторов.Следующий() Цикл

	//	СуммаМодернизаций = ?(ВыборкаРегистраторов.СуммаЗатратБУМодернизаций = NULL, 0, ВыборкаРегистраторов.СуммаЗатратБУМодернизаций);
	//	СуммаРемонтов = ?(ВыборкаРегистраторов.СуммаЗатратБУРемонтов = NULL, 0, ВыборкаРегистраторов.СуммаЗатратБУРемонтов);

	//	Если СуммаМодернизаций <> 0 Тогда
	//		СтрокаТаблицыМодернизаций = ТаблицаМодернизаций.Добавить();
	//		СтрокаТаблицыМодернизаций.ВидОперации = ВыборкаРегистраторов.Операция;
	//		СтрокаТаблицыМодернизаций.Название    = ВыборкаРегистраторов.НазваниеДокумента;
	//		СтрокаТаблицыМодернизаций.Номер       = ВыборкаРегистраторов.НомерДокумента;
	//		СтрокаТаблицыМодернизаций.Дата        = ВыборкаРегистраторов.Период;
	//		СтрокаТаблицыМодернизаций.Сумма       = СуммаМодернизаций;
	//	КонецЕсли;

	//	Если СуммаРемонтов <> 0 Тогда
	//		СтрокаТаблицыРемонтов = ТаблицаРемонтов.Добавить();
	//		СтрокаТаблицыРемонтов.ВидОперации      = ВыборкаРегистраторов.Операция;
	//		СтрокаТаблицыРемонтов.Название         = ВыборкаРегистраторов.НазваниеДокумента;
	//		СтрокаТаблицыРемонтов.Номер            = ВыборкаРегистраторов.НомерДокумента;
	//		СтрокаТаблицыРемонтов.Дата             = ВыборкаРегистраторов.Период;
	//		СтрокаТаблицыРемонтов.Сумма            = СуммаРемонтов;
	//	КонецЕсли;

	//КонецЦикла;
	//
	//КоличествоСтрок = Макс(ТаблицаМодернизаций.Количество(),ТаблицаРемонтов.Количество(),1); 
	//Для СчетСтрок = 1 По КоличествоСтрок Цикл
	//	Если СчетСтрок <= ТаблицаМодернизаций.Количество() Тогда
	//		СтрокаТаблицы = ТаблицаМодернизаций.Получить(СчетСтрок - 1);
	//		СтрокаРазделов5и6.Параметры.Модернизация          = СтрокаТаблицы.ВидОперации;
	//		СтрокаРазделов5и6.Параметры.ДокМодернизации       = СтрокаТаблицы.Название;
	//		СтрокаРазделов5и6.Параметры.ДокМодернизацииДата   = СтрокаТаблицы.Дата;
	//		СтрокаРазделов5и6.Параметры.ДокМодернизацииНомер  = СтрокаТаблицы.Номер;
	//		СтрокаРазделов5и6.Параметры.ЗатратыНаМодернизацию = СтрокаТаблицы.Сумма; 
	//	Иначе
	//		СтрокаРазделов5и6.Параметры.Модернизация          = "";
	//		СтрокаРазделов5и6.Параметры.ДокМодернизации       = "";
	//		СтрокаРазделов5и6.Параметры.ДокМодернизацииДата   = "";
	//		СтрокаРазделов5и6.Параметры.ДокМодернизацииНомер  = "";
	//		СтрокаРазделов5и6.Параметры.ЗатратыНаМодернизацию = ""; 
	//	КонецЕсли;
	//	
	//	СтрокаРазделов5и6.Параметры.Ремонт          = "";
	//	СтрокаРазделов5и6.Параметры.ДокРемонта      = "";
	//	СтрокаРазделов5и6.Параметры.ДокРемонтаДата  = "";
	//	СтрокаРазделов5и6.Параметры.ДокРемонтаНомер = "";
	//	СтрокаРазделов5и6.Параметры.ЗатратыНаРемонт = "";
	//	ТабДок.Вывести(СтрокаРазделов5и6);
	//КонецЦикла;
	
	ТабДок.Вывести(ШапкаРаздела7_1);
	ТабДок.Вывести(ШапкаРаздела7_2);
	ТабДок.Вывести(ПодвалСтраницы2);
	
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.ПолеСверху = 0;
	ТабДок.ПолеСнизу = 0;
	
	Возврат ТабДок;
	
КонецФункции // ПечатьОС6_2003(ДатаСведений) 

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура осуществляет печать справочника. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
// Параметры:
//  НазваниеМакета - строка, название макета.
// Возвращаемое значение:
//  Нет.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь,Организация,ДатаСведений) Экспорт
	
	Если ИмяМакета = "ОС6_2003" тогда
		ТабДокумент = ПечатьОС6_2003(ДатаСведений,Организация);
	КонецЕсли;

	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Инвентарная карточка ОС (Форма ОС-6)", НепосредственнаяПечать);

КонецПроцедуры // Печать()

// Возвращает доступные варианты печати справочника.
//
// Вовращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати.
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ОС6_2003","Форма ОС-6");

КонецФункции // ПолучитьСписокПечатныхФорм()

#КонецЕсли

Процедура ПриУстановкеНовогоКода(СтандартнаяОбработка, Префикс)
	ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
КонецПроцедуры

