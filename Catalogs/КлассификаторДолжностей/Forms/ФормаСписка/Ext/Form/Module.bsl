
&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервереСлужащие();
	ЗагрузитьНаСервереРабочие();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервереСлужащие()
	МакетСлужащие = Справочники.КлассификаторДолжностей.ПолучитьМакет("Служащие");
	НачатьТранзакцию();
	Для к=4 По 3472 Цикл
		НСКЗ = МакетСлужащие.Область(к,3,к,3).Текст;
		Если ЗначениеЗаполнено(НСКЗ) Тогда
			НоваяДолжность=Истина;
			Код			 = МакетСлужащие.Область(к,1,к,1).Текст;
			Наименование = МакетСлужащие.Область(к,2,к,2).Текст;
			Категория	 = МакетСлужащие.Область(к,4,к,4).Текст;
			Образование	 = МакетСлужащие.Область(к,5,к,5).Текст;
			Направление	 = МакетСлужащие.Область(к,6,к,6).Текст;
		Иначе	
			НоваяДолжность=Ложь;
			Направление	 = МакетСлужащие.Область(к,1,к,1).Текст;
		КонецЕсли;
		
		//Состояние(Наименование);
		
		Если НЕ НоваяДолжность Тогда
			Код = СокрЛП(СтрЗаменить(Код,".",""));
			КДСсылка = Справочники.КлассификаторДолжностей.НайтиПоКоду(Код,,Справочники.КлассификаторДолжностей.Служащие);
			КДОбъект = КДСсылка.ПолучитьОбъект();
			КДОбъект.КНОССПО = КДОбъект.КНОССПО+СокрЛП(Направление);
			КДОбъект.ОбменДанными.Загрузка = Истина;
			КДОбъект.Записать();
			Продолжить;
		КонецЕсли;
		
		Код = СокрЛП(СтрЗаменить(Код,".",""));
		КДСсылка = Справочники.КлассификаторДолжностей.НайтиПоКоду(Код,,Справочники.КлассификаторДолжностей.Служащие);
		Если КДСсылка.Пустая() Тогда
			КДОбъект = Справочники.КлассификаторДолжностей.СоздатьЭлемент();
			КДОбъект.Код = Код;
			КДОбъект.Родитель = Справочники.КлассификаторДолжностей.Служащие;
		Иначе	
			КДОбъект = КДСсылка.ПолучитьОбъект();
		КонецЕсли;	
		КДОбъект.Наименование = СокрЛП(Наименование);
		КДОбъект.КодНСКЗ = СокрЛП(НСКЗ);
		КДОбъект.КНОССПО = СокрЛП(Направление);
		//
		Если Лев(Категория,1)="У" Тогда
			КДОбъект.КатегорияПерсонала = Перечисления.КатегорииПерсонала.УправленческийПерсонал;
		ИначеЕсли Лев(Категория,1)="С" Тогда
			КДОбъект.КатегорияПерсонала = Перечисления.КатегорииПерсонала.Специалисты;
		ИначеЕсли Лев(Категория,1)="Т" Тогда
			КДОбъект.КатегорияПерсонала = Перечисления.КатегорииПерсонала.ТехническийПерсонал;
		ИначеЕсли Лев(Категория,1)="О" Тогда
			КДОбъект.КатегорияПерсонала = Перечисления.КатегорииПерсонала.ОбслуживающийПерсонал;
		ИначеЕсли Лев(Категория,1)="П" Тогда
			КДОбъект.КатегорияПерсонала = Перечисления.КатегорииПерсонала.ПроизводственныйПерсонал;
		КонецЕсли;
		//
		Если СокрЛП(Образование)="ВО" Тогда
			КДОбъект.УровеньОбразования = Перечисления.УровниОбразования.ВО;
		ИначеЕсли СокрЛП(Образование)="В/О" Тогда
			КДОбъект.УровеньОбразования = Перечисления.УровниОбразования.ВО;
		ИначеЕсли СокрЛП(Образование)="ССПО" Тогда
			КДОбъект.УровеньОбразования = Перечисления.УровниОбразования.ССПО;
		ИначеЕсли СокрЛП(Образование)="НТ" Тогда
			КДОбъект.УровеньОбразования = Перечисления.УровниОбразования.НТ;
		ИначеЕсли СокрЛП(Образование)="Н/Т" Тогда
			КДОбъект.УровеньОбразования = Перечисления.УровниОбразования.НТ;
		КонецЕсли;	
		//
		КДОбъект.ОбменДанными.Загрузка = Истина;
		КДОбъект.Записать();	
	КонецЦикла;
	ЗафиксироватьТранзакцию();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервереРабочие()
	МакетРабочие = Справочники.КлассификаторДолжностей.ПолучитьМакет("Рабочие");
	НачатьТранзакцию();
	Для к=4 По 7814 Цикл
		НСКЗ = МакетРабочие.Область(к,3,к,3).Текст;
		Если ЗначениеЗаполнено(НСКЗ) Тогда
			НоваяДолжность=Истина;
			Код			 = МакетРабочие.Область(к,1,к,1).Текст;
			Наименование = МакетРабочие.Область(к,2,к,2).Текст;
			Категория	 = МакетРабочие.Область(к,4,к,4).Текст;
			Диапазон	 = МакетРабочие.Область(к,5,к,5).Текст;
			Образование	 = МакетРабочие.Область(к,6,к,6).Текст;
			Направление	 = МакетРабочие.Область(к,7,к,7).Текст;
		Иначе	
			НоваяДолжность=Ложь;
			Направление	 = МакетРабочие.Область(к,1,к,1).Текст;
		КонецЕсли;
		
		//Состояние(Наименование);
		
		Если НЕ НоваяДолжность Тогда
			Код = СокрЛП(СтрЗаменить(Код,".",""));
			КДСсылка = Справочники.КлассификаторДолжностей.НайтиПоКоду(Код,,Справочники.КлассификаторДолжностей.Рабочие);
			КДОбъект = КДСсылка.ПолучитьОбъект();
			КДОбъект.КНОССПО = КДОбъект.КНОССПО+СокрЛП(Направление);
			КДОбъект.ОбменДанными.Загрузка = Истина;
			КДОбъект.Записать();
			Продолжить;
		КонецЕсли;
		
		Код = СокрЛП(СтрЗаменить(Код,".",""));
		КДСсылка = Справочники.КлассификаторДолжностей.НайтиПоКоду(Код,,Справочники.КлассификаторДолжностей.Рабочие);
		Если КДСсылка.Пустая() Тогда
			КДОбъект = Справочники.КлассификаторДолжностей.СоздатьЭлемент();
			КДОбъект.Код = Код;
			КДОбъект.Родитель = Справочники.КлассификаторДолжностей.Рабочие;
		Иначе	
			КДОбъект = КДСсылка.ПолучитьОбъект();
		КонецЕсли;	
		КДОбъект.Наименование = СокрЛП(Наименование);
		КДОбъект.КодНСКЗ = СокрЛП(НСКЗ);
		КДОбъект.ДиапазонРазрядов = СокрЛП(Диапазон);
		Направление = СокрЛП(СтрЗаменить(Направление,Символы.ПС,""));
		КДОбъект.КНОССПО = СокрЛП(Направление);
		//
		Если Лев(Категория,1)="У" Тогда
			КДОбъект.КатегорияПерсонала = Перечисления.КатегорииПерсонала.УправленческийПерсонал;
		ИначеЕсли Лев(Категория,1)="С" Тогда
			КДОбъект.КатегорияПерсонала = Перечисления.КатегорииПерсонала.Специалисты;
		ИначеЕсли Лев(Категория,1)="Т" Тогда
			КДОбъект.КатегорияПерсонала = Перечисления.КатегорииПерсонала.ТехническийПерсонал;
		ИначеЕсли Лев(Категория,1)="О" Тогда
			КДОбъект.КатегорияПерсонала = Перечисления.КатегорииПерсонала.ОбслуживающийПерсонал;
		ИначеЕсли Лев(Категория,1)="П" Тогда
			КДОбъект.КатегорияПерсонала = Перечисления.КатегорииПерсонала.ПроизводственныйПерсонал;
		КонецЕсли;
		//
		Если СокрЛП(Образование)="ВО" Тогда
			КДОбъект.УровеньОбразования = Перечисления.УровниОбразования.ВО;
		ИначеЕсли СокрЛП(Образование)="В/О" Тогда
			КДОбъект.УровеньОбразования = Перечисления.УровниОбразования.ВО;
		ИначеЕсли СокрЛП(Образование)="ССПО" Тогда
			КДОбъект.УровеньОбразования = Перечисления.УровниОбразования.ССПО;
		ИначеЕсли СокрЛП(Образование)="НТ" Тогда
			КДОбъект.УровеньОбразования = Перечисления.УровниОбразования.НТ;
		ИначеЕсли СокрЛП(Образование)="Н/Т" Тогда
			КДОбъект.УровеньОбразования = Перечисления.УровниОбразования.НТ;
		КонецЕсли;	
		//
		КДОбъект.ОбменДанными.Загрузка = Истина;
		КДОбъект.Записать();	
	КонецЦикла;
	ЗафиксироватьТранзакцию();
КонецПроцедуры
