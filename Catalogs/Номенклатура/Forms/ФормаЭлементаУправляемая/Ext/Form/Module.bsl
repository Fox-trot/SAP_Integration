
&НаКлиенте
Процедура ВидНоменклатурыПриИзменении(Элемент)
	
	ВидНоменклатуры=Объект.ВидНоменклатуры;
	
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		СчетаУчета=ПолучитьСписокСчетовУчета(ВидНоменклатуры);
	Иначе
		Объект.СчетУчетаБУ="";
		Возврат;
	КонецЕсли;	          
	
	Элементы.СчетУчетаБУ.СписокВыбора.Очистить();
	
	Для Каждого СчетУчета Из СчетаУчета Цикл
		Элементы.СчетУчетаБУ.СписокВыбора.Добавить(СчетУчета.Значение,СчетУчета.Представление);
	КонецЦикла;	
	
	Если Элементы.СчетУчетаБУ.СписокВыбора.НайтиПоЗначению(Объект.СчетУчетаБУ)=Неопределено Тогда
		Объект.СчетУчетаБУ="";
	Иначе
		Элементы.СчетУчетаБУ.ВыделенныйТекст=Элементы.СчетУчетаБУ.СписокВыбора.НайтиПоЗначению(Объект.СчетУчетаБУ).Представление;	
	КонецЕсли;	
	
	Если СчетаУчета.Количество()=1 Тогда
		Если Объект.СчетУчетаБУ<>СчетаУчета[0].Значение Тогда
			Объект.СчетУчетаБУ=СчетаУчета[0].Значение;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокСчетовУчета(ВидНоменклатуры)

	
	СчетГруппа=ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	СчетУчета=ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	
	Если НЕ ВидНоменклатуры.Пустая() Тогда
		
		Если ВидНоменклатуры=Перечисления.ВидыНоменклатуры.Материалы Тогда
			
			СчетГруппа = ПланыСчетов.Хозрасчетный.А1000;
		
		ИначеЕсли ВидНоменклатуры=Перечисления.ВидыНоменклатуры.Оборудование Тогда
			
			СчетГруппа = ПланыСчетов.Хозрасчетный.А0700;
			
		ИначеЕсли ВидНоменклатуры=Перечисления.ВидыНоменклатуры.ПриобретенныеОсновныеСредства Тогда
			
			СчетУчета = ПланыСчетов.Хозрасчетный.А0820;
			
		ИначеЕсли ВидНоменклатуры=Перечисления.ВидыНоменклатуры.ПриобретенныеНематериальныеАктивы Тогда
			
			СчетУчета = ПланыСчетов.Хозрасчетный.А0830;
			
		//ИначеЕсли ВидНоменклатуры=Перечисления.ВидыНоменклатуры.Полуфабрикаты Тогда
		//	
		//	СчетГруппа = ПланыСчетов.Хозрасчетный.А2100;
			
		КонецЕсли; 
		
	КонецЕсли; 	
	
	
	СписокСчетов=Новый СписокЗначений;

	Если ЗначениеЗаполнено(СчетУчета) Тогда
		
		СписокСчетов.Добавить(СчетУчета.Ссылка,СчетУчета.Код+" ("+СчетУчета.Наименование+")");
		Возврат СписокСчетов;
		
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет,
	|	Хозрасчетный.Код КАК Код,
	|	Хозрасчетный.Наименование КАК Наименование
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|
	|ГДЕ
	|	(Хозрасчетный.Ссылка В ИЕРАРХИИ(&Счет))
	|  И
	|	(НЕ(Хозрасчетный.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ 	СчетРодитель.Родитель ИЗ ПланСчетов.Хозрасчетный КАК СчетРодитель ГДЕ 	НЕ(СчетРодитель.Родитель = НЕОПРЕДЕЛЕНО) ))) 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	
	Запрос.УстановитьПараметр("Счет",СчетГруппа);
	Результат=Запрос.Выполнить().Выбрать();
	
	
	Пока Результат.Следующий() Цикл
		СписокСчетов.Добавить(Результат.Счет,Результат.Код+" ("+Результат.Наименование+")");
	КонецЦикла;
	
	Возврат СписокСчетов;

КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		//ВидНоменклатурыПриИзменении("");
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидНоменклатуры=Объект.ВидНоменклатуры;
	
	Если ЗначениеЗаполнено(ВидНоменклатуры) Тогда
		СчетаУчета=ПолучитьСписокСчетовУчета(ВидНоменклатуры);
		Для Каждого СчетУчета Из СчетаУчета Цикл
			Элементы.СчетУчетаБУ.СписокВыбора.Добавить(СчетУчета.Значение,СчетУчета.Представление);
		КонецЦикла;	
	КонецЕсли;	          
	
КонецПроцедуры
