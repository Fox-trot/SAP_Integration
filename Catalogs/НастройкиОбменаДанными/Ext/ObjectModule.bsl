
//Функция определяет есть ли для данной настройки Автоматический обмен данными
Функция ЭтоНастройкаАвтоматическогоОбменаДанными() Экспорт
	
	Возврат КаждыйЗапускПрограммы 
		ИЛИ КаждоеЗавершениеРаботыСПрограммой
		ИЛИ ВыполнятьАвтоматически
		ИЛИ Не ПустаяСтрока(КаталогПроверкиДоступности);
	
КонецФункции
	
//Функция по настройке определяет нужно ли для нее периодически определять необходимость обмена данными
Функция ОпределитьНеобходимостьПериодическогоОпределенияВыполненияОбменаДанными() Экспорт
	
	Возврат ВыполнятьАвтоматически
		ИЛИ Не ПустаяСтрока(КаталогПроверкиДоступности);
	
КонецФункции

// процедура производит работу с параметрами обмена данными
Процедура ОбработатьНаборЗаписейНастроек()
	
	Если Не ЗначениеНеЗаполнено(Ссылка) 
		И ((ПроизводитьОтправкуСообщений <> Ссылка.ПроизводитьОтправкуСообщений)
		ИЛИ (ПроизводитьПриемСообщений <> Ссылка.ПроизводитьОтправкуСообщений)) Тогда
		
		// если изменились флажки выгрузки и загрузки данных, то надо очищать информацию по последнему действию
		НаборЗаписейПараметров = РегистрыСведений.ПараметрыОбменаДанными.СоздатьНаборЗаписей();
		
		НаборЗаписейПараметров.Отбор.НастройкаОбменаДанными.Значение = Ссылка;	
		НаборЗаписейПараметров.Отбор.НастройкаОбменаДанными.Использование = Истина;
		НаборЗаписейПараметров.Отбор.НастройкаОбменаДанными.ВидСравнения = ВидСравнения.Равно;
		
		НаборЗаписейПараметров.Прочитать();
		
		Если НаборЗаписейПараметров.Количество() = 1 Тогда
			
			ЗаписьПараметров = НаборЗаписейПараметров[0];
			
			Если ПроизводитьПриемСообщений <> Ссылка.ПроизводитьПриемСообщений Тогда
				
				ЗаписьПараметров.ДатаПоследнейЗагрузки = Неопределено;	
				ЗаписьПараметров.РезультатПоследнейЗагрузки = Ложь;
				
			КонецЕсли;
			
			Если ПроизводитьОтправкуСообщений <> Ссылка.ПроизводитьОтправкуСообщений Тогда
				
				ЗаписьПараметров.ДатаПоследнейВыгрузки = Неопределено;	
				ЗаписьПараметров.РезультатПоследнейВыгрузки = Ложь;
				
			КонецЕсли;
			
			Попытка
				НаборЗаписейПараметров.Записать();
			Исключение
				#Если Клиент Тогда
					Сообщить("Ошибка при записи изменений в настройку обмена """ + Ссылка + """ : " + ОписаниеОшибки(), СтатусСообщения.Важное);
				#КонецЕсли
			КонецПопытки;
		
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

// при записи
Процедура ПриЗаписи(Отказ) 
	
	// надо проверить наличие одной записи в регистре сведений
	НаборЗаписейПараметров = РегистрыСведений.ПараметрыОбменаДанными.СоздатьНаборЗаписей();
		
	НаборЗаписейПараметров.Отбор.НастройкаОбменаДанными.Значение = Ссылка;	
	НаборЗаписейПараметров.Отбор.НастройкаОбменаДанными.Использование = Истина;
	НаборЗаписейПараметров.Отбор.НастройкаОбменаДанными.ВидСравнения = ВидСравнения.Равно;
		
	НаборЗаписейПараметров.Прочитать();
		
	Если НаборЗаписейПараметров.Количество() = 1 Тогда
		// запись есть, ничего делать не надо
		Возврат;
	КонецЕсли;
	
	// добавляем только одну запись и все
	ЗаписьДатПараметров = НаборЗаписейПараметров.Добавить();
	ЗаписьДатПараметров.НастройкаОбменаДанными = Ссылка;
		
	Попытка
		НаборЗаписейПараметров.Записать();
	Исключение
		#Если Клиент Тогда
			Сообщить("Ошибка при записи изменений в настройку обмена """ + Ссылка + """ : " + ОписаниеОшибки(), СтатусСообщения.Важное);
		#КонецЕсли
	КонецПопытки;
	
КонецПроцедуры


// Перед записью
Процедура ПередЗаписью(Отказ)
	
	Если (КоличествоМинутМеждуОбменами > 10080) Тогда
		СообщитьОбОшибке("Значение поля ""Количество минут между обменами"" не может превышать 10 080.", Отказ);
	КонецЕсли;
	
	Если ЗначениеНеЗаполнено(ТипНастройки) Тогда
		СообщитьОбОшибке("Не заполнено поле ""Тип настройки""", Отказ);
	КонецЕсли;
	
	Если ЗначениеНеЗаполнено(УзелИнформационнойБазы) Тогда
		СообщитьОбОшибке("Не заполнено поле ""Узел""", Отказ);
	КонецЕсли;
	
	Если ЭтоНастройкаАвтоматическогоОбменаДанными() Тогда
		
		Если ЗначениеНеЗаполнено(Ответственный) Тогда
			СообщитьОбОшибке("Не заполнено поле ""Пользователь"". Автоматический обмен по такой настройке невозможен.", Отказ);	
		КонецЕсли;
		
		// проверяем есть ли один день недели в который нужно обмен производить
		Если ВыполнятьАвтоматически И НЕ (Понедельник ИЛИ Вторник ИЛИ Среда ИЛИ Четверг ИЛИ Пятница ИЛИ Суббота ИЛИ Воскресенье) Тогда
			
			СообщитьОбОшибке("Не выбран ни один из дней недели для проведения автоматического периодического обмена данными.", Отказ);
			
		КонецЕсли;

	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьНаборЗаписейНастроек();
	
	// в зависимости от типа настройки очищаем настройки остальных типов
	Если ТипНастройки = Перечисления.ТипыАвтоматическогоОбменаДанными.ОбменЧерезФайловыйРесурс Тогда
		
		КаталогОбменаИнформацией = СокрЛП(КаталогОбменаИнформацией);
		
		FTPАдресОбмена = "";
		ПользовательFTPСоединения = "";
		ПарольFTPСоединения = "";
		
		УчетнаяЗаписьПриемаОтправкиСообщений = ""; 
		ПочтовыйАдресПолучателя = "";
		АвтоматическиЗакачиватьПочтуПриОбмене = Ложь;
		
	ИначеЕсли ТипНастройки = Перечисления.ТипыАвтоматическогоОбменаДанными.ОбменЧерезFTPРесурс Тогда
		
		Если ПустаяСтрока(ПользовательFTPСоединения) Тогда
			ПарольFTPСоединения = "";	
		КонецЕсли;
		
		Если ЗначениеНеЗаполнено(ПортFTPСоединения) Тогда
			ПортFTPСоединения = 21;	
		КонецЕсли;
		
		КаталогОбменаИнформацией = "";
		
		УчетнаяЗаписьПриемаОтправкиСообщений = "";
		ПочтовыйАдресПолучателя = "";
		АвтоматическиЗакачиватьПочтуПриОбмене = Ложь;
		
	КонецЕсли;
	
	Если КоличествоМинутМеждуОбменами = 0 Тогда
		
		// не задан интервал обменов данными - до конечного времени нет дела
		КонечноеВремяОбменов = Дата("00010101");	
			
	КонецЕсли;
	
	КаталогПроверкиДоступности = СокрЛП(КаталогПроверкиДоступности);
			
КонецПроцедуры
