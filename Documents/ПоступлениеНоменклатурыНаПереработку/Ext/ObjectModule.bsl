Перем ТаблицаЗачетаНДС;

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры
 
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ПриемныйАкт","Приходый акт");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	
	СуммаПоДокументу= Номенклатура.Итог("Сумма")+Номенклатура.Итог("СуммаНДС");
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеНоменклатурыНаСклад.ОтПоставщика Тогда
		СуммаПоДокументу= СуммаПоДокументу;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	//ЗаписатьЦеныВСправочник();
	
	ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента);

	
КонецПроцедуры

Функция ПечатьПриемныйАкт()
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ПриемныйАкт");
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Организация = Организация;
	Область.Параметры.ИННПереработчика = Организация.ИНН;
	АдресПереработчика = ПолучитьАдресИзКонтактнойИнформации(Организация,"Фактический");
	Область.Параметры.АдресПереработчика = АдресПереработчика;
	Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Дата = Формат(Дата,"ДЛФ=DD");
	//Область.Параметры.ПриходныйДокумент = ПриходныйДокумент;
	//Область.Параметры.Доверенность = "№ "+ПолучитьНомерНаПечать(Доверенность.Ссылка)+" от "+формат(Доверенность.Дата,"ДФ=dd.MM.yyyy");
	//Область.Параметры.Через = ФИОСотрудника(Доверенность.Сотрудник,Дата);
	Область.Параметры.Поставщик = Поставщик;
	Область.Параметры.ИННПоставщика = Поставщик.ИНН;
	АдресПоставщика = ПолучитьАдресИзКонтактнойИнформации(Поставщик,"Фактический");
	Область.Параметры.АдресПоставщика = АдресПоставщика;
	//Область.Параметры.ДоговорПоставщика = ДоговорПоставщика;
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка");
	ОбластьИтого = Макет.ПолучитьОбласть("Итог");
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ПоступлениеНоменклатурыНаПереработку.Номенклатура,
	|	ПоступлениеНоменклатурыНаПереработку.Количество,
	|	ПоступлениеНоменклатурыНаПереработку.Сумма КАК Сумма,
	|	ПоступлениеНоменклатурыНаПереработку.СчетУчетаБУ,
	|	ПоступлениеНоменклатурыНаПереработку.Цена,
	|	ПоступлениеНоменклатурыНаПереработку.НомерСтроки КАК НомерСтроки,
	|	ПоступлениеНоменклатурыНаПереработку.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПоступлениеНоменклатурыНаПереработку.Номенклатура.Код КАК Код
	|ИЗ
	|	Документ.ПоступлениеНоменклатурыНаПереработку.Номенклатура КАК ПоступлениеНоменклатурыНаПереработку
	|ГДЕ
	|	ПоступлениеНоменклатурыНаПереработку.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	ВыборкаОбщие=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщие.Следующий();
	ОбластьИтого.Параметры.Заполнить(ВыборкаОбщие);	
	ОбластьИтого.Параметры.Должность=ДанныеФизЛица(Организация,Склад.МОЛ.ФизическоеЛицо,Дата).Представление;
	
	ОбластьИтого.Параметры.Завскладом=ДанныеФизЛица(Организация,Склад.МОЛ.ФизическоеЛицо,Дата).Представление;
	Выборка=ВыборкаОбщие.Выбрать();
	Пока Выборка.Следующий() Цикл
		Область.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Область);
	КонецЦикла; 
	
	ТабДок.Вывести(ОбластьИтого);
	
	ТабДок.ФиксацияСверху=0;
	ТабДок.ФиксацияСлева=0;
	ТабДок.ЭкземпляровНаСтранице=0;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабДок;
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	
	Если ИмяМакета="ПриемныйАкт" Тогда
		ТабДокумент = ПечатьПриемныйАкт();
	//ИначеЕсли ИмяМакета="РасчетСтоимостиНоменклатуры" Тогда
	//	ТабДокумент = ПечатьРасчетаСтоимостиНоменклатуры();
	КонецЕсли; 
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Приемный Акт");
	
КонецПроцедуры // Печать()

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	//Проверяем заполнение шапки
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("Склад","Не выбран склад.");
	
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеНоменклатурыНаСклад.ОтПоставщика Тогда
		СтруктураОбязательныхПолей.Вставить("Поставщик","Не выбран поставщик.");
		СтруктураОбязательныхПолей.Вставить("ДоговорПоставщика","Не указан договор с поставщиком.");
		СтруктураОбязательныхПолей.Вставить("СчетУчетаРасчетовСКонтрагентом","Не указан счет учета расчетов с поставщиком.");
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНоменклатурыНаСклад.Внутренний Тогда
		СтруктураОбязательныхПолей.Вставить("СкладСдатчик","Не выбран склад - сдатчик.");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеНоменклатурыНаСклад.СПереработки Тогда
		СтруктураОбязательныхПолей.Вставить("ПодразделениеСдатчик","Не выбрано подразделение - сдатчик.");
	КонецЕсли; 
	
	
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	//Проверяем заполнение табличной части 
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	СтруктураПолей.Вставить("СчетУчетаБУ","Не указан счет учета номенклатуры (таблица ""Номенклатура"")");
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Номенклатура", СтруктураПолей, Отказ, Заголовок);
	
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("СчетКредит","Не указан счет кредита (таблица ""Дополнительные расходы"")");
	
	
КонецПроцедуры

Функция СформироватьТаблицуНоменклатуры()
	
	//ТаблицаНоменклатуры=Номенклатура.Выгрузить();
	//
	////ТаблицаНоменклатуры.Колонки.Добавить("РасходыВключаемыеВСтоимость",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(18,2)));
	////Для Каждого Строка из РасходыВключаемыеВСтоимость Цикл
	////	ТаблицаНоменклатуры.Колонки.Добавить("РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(18,2)));
	////КонецЦикла;	
	//
	//Если ТаблицаНоменклатуры.Итог("Сумма")<>0 Тогда
	//	Для Каждого Строка из РасходыВключаемыеВСтоимость Цикл
	//		СуммаКРаспределению=Строка.Сумма;
	//		Остаток=СуммаКРаспределению;
	//		
	//		Для Каждого СтрокаТаблицаНоменклатуры из ТаблицаНоменклатуры Цикл
	//			Сумма=Окр(СуммаКРаспределению*СтрокаТаблицаНоменклатуры.Сумма/ТаблицаНоменклатуры.Итог("Сумма"),2);
	//			СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)]=СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)]+Сумма;
	//			СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимость"]=СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимость"]+Сумма;
	//			Остаток=Остаток-Сумма;
	//		КонецЦикла;	
	//		
	//		Если Остаток<>0 Тогда
	//			ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)]=ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)]+Остаток;	
	//			ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимость"]=ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимость"]+Остаток;	
	//		КонецЕсли;	
	//		
	//	КонецЦикла;	
	//КонецЕсли;
	//
	//Возврат ТаблицаНоменклатуры;
	
КонецФункции	

Функция СформироватьОписаниеПервичногоДокумента(ПервичныйДокумент)
	
	ПервичныйДокументСтр=сокрлп(ПервичныйДокумент);	
    Если лев(ПервичныйДокументСтр,1)="№" или ЭтоЦифра(лев(ПервичныйДокументСтр,1)) Тогда
		Возврат "Сч.фак. "+ПервичныйДокументСтр;	
	Иначе
		Возврат ПервичныйДокументСтр;
	КонецЕсли; 
	
КонецФункции // ()

Процедура ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
		
	ПроводкиБУ = Движения.Хозрасчетный;
	
	Для Каждого СтрокаНоменклатуры Из Номенклатура Цикл
		Если НЕ СтрокаНоменклатуры.СчетУчетаБУ.Забалансовый тогда
			Сообщить("Счет учета должен быть  003 Материалы, принятые в переработку");
			Продолжить
		КонецЕсли;
		//Основная стоимость
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Материалы, принятые в переработку";     
		
		Проводка.СчетДт      = СтрокаНоменклатуры.СчетУчетаБУ;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Поставщик);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорПоставщика);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаНоменклатуры.Номенклатура);
		
		Проводка.КоличествоДт = СтрокаНоменклатуры.Количество;
		Проводка.Сумма = СтрокаНоменклатуры.Сумма;
		
		//Движение по регистру
		
		Движение = Движения.УчетДавальческогоСырья.ДобавитьПриход();
		
		Движение.Период = Дата;
		Движение.Организация= Организация;
		Движение.Давалец = Поставщик;
		Движение.ДоговорДавальца = ДоговорПоставщика;
		Движение.ДавальческоеСырье = СтрокаНоменклатуры.Номенклатура;
		Движение.Количество = СтрокаНоменклатуры.Количество;
		Движение.Сумма = СтрокаНоменклатуры.Сумма;
		Движение.Содержание = "Материалы, принятые в переработку";

		
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьДвижениеПоУчетуНДС(СчетДт,Получатель,СчетКт,Сумма,СуммаНДС,СуммаНДСПоУслугам,Поставщик,Договор,ПриходныйДокумент,ЗачетНДС)
	
	//Движение = ТаблицаЗачетаНДС.Добавить();
	//Движение.Период = Дата;
	//Движение.Организация = Организация;
	//Движение.СчетДт =  СчетДт;
	//Движение.Получатель = Получатель;
	//Движение.СчетКт = СчетКт;
	//Движение.Сумма = Сумма;
	//Движение.СуммаНДС = СуммаНДС;
	//Движение.СуммаНДСПоУслугам = СуммаНДСПоУслугам;
	//
	//Движение.Поставщик         = Поставщик;
	//Движение.Договор           = Договор;
	//Движение.ПриходныйДокумент = ПриходныйДокумент;
	//Движение.ЗачетНДС          = ЗачетНДС;
	
КонецПроцедуры
