
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("","");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ДвиженияПоБУ(Режим, Отказ, Заголовок,СтруктураШапкиДокумента);
	
КонецПроцедуры

Процедура ДвиженияПоБУ(Режим, Отказ, Заголовок,СтруктураШапкиДокумента)
	
	//Отбор = Новый Структура("Организация", ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация") );
	
	спр = Справочники.РасходыБудущихПериодов.Выбрать();//,,Отбор);
	
	Запрос = Новый Запрос;
	
	Пока спр.Следующий() Цикл
		
		Если не ЗначениеЗаполнено(спр.СчетБУ) Тогда
			Продолжить;
		КонецЕсли; 
		
		Если Не НачалоМесяца(спр.ДатаНачалаСписания) < КонецМесяца(Дата) Тогда
			Продолжить;
		КонецЕсли; 
		
		Если спр.СпособСписания = Перечисления.СпособыСписанияРасходовБП.ЗаПериод Тогда
			
			Запрос.Текст=
			"ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
			|	ХозрасчетныйОстаткиИОбороты.Субконто1,
			|	ХозрасчетныйОстаткиИОбороты.Счет
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
			|			&НачДата,
			|			&КонДата,
			|			,
			|			,
			|			Счет В ИЕРАРХИИ (&Счет),
			|			&Субконто,
			|			Организация = &Организация
			|				И Субконто1 = &Субконто1) КАК ХозрасчетныйОстаткиИОбороты";
			
			Запрос.УстановитьПараметр("НачДата",НачалоМесяца(спр.ДатаНачалаСписания));
			Запрос.УстановитьПараметр("КонДата",КонецМесяца(Дата));
			Запрос.УстановитьПараметр("Организация",Организация);
			Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.НайтиПоКоду("3100"));
			Запрос.УстановитьПараметр("Субконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
			Запрос.УстановитьПараметр("Субконто1",спр.Ссылка);
			
			Результат=Запрос.Выполнить().Выбрать();
			Если Результат.Следующий() Тогда
				
				
				Если НачалоМесяца(спр.ДатаНачалаСписания) < КонецМесяца(Дата) Тогда
					Если Результат.СуммаКонечныйОстатокДт > 0 Тогда
						ОстатокРасхода = Результат.СуммаНачальныйОстатокДт + Результат.СуммаОборотДт;
						
						Если КонецМесяца(Дата) >= КонецМесяца(спр.ДатаОкончанияСписания) Тогда
							ДолжноБытьСписано = Результат.СуммаНачальныйОстатокДт + Результат.СуммаОборотДт;
						Иначе   
							КонМесяцаНачала = КонецМесяца(Спр.ДатаНачалаСписания);
							ВсегоМесяцев = 0;  МесяцевДоТекущейДаты = 0;
							Пока КонМесяцаНачала <= Спр.ДатаОкончанияСписания Цикл
								ВсегоМесяцев = ВсегоМесяцев + 1;
								Если КонМесяцаНачала <= КонецДня(Дата) Тогда
									МесяцевДоТекущейДаты = МесяцевДоТекущейДаты + 1;
								КонецЕсли;
								КонМесяцаНачала = ДобавитьМесяц(КонМесяцаНачала, 1);
							КонецЦикла;
							Если ВсегоМесяцев > 0 Тогда
								ДолжноБытьСписано = (Результат.СуммаНачальныйОстатокДт + Результат.СуммаОборотДт) * МесяцевДоТекущейДаты / ВсегоМесяцев ;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					Запрос.УстановитьПараметр("НачДата",НачалоМесяца(Дата));
					Запрос.УстановитьПараметр("КонДата",КонецМесяца(Дата));
					
					Результат=Запрос.Выполнить().Выбрать();
					Если Результат.Следующий() Тогда
						
						КонечныйОстаток = Результат.СуммаКонечныйОстатокДт;
						УжеСписано = ОстатокРасхода - КонечныйОстаток;
						
						Если ДолжноБытьСписано-УжеСписано>0 тогда
							
							Проводка = Движения.Хозрасчетный.Добавить();
							Проводка.Период      = Дата;
							Проводка.Организация = Организация;
							Проводка.Содержание = "";     
							
							Проводка.СчетДт      = спр.СчетБУ;
							УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,спр.СубконтоБУ1);
							УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,спр.СубконтоБУ2);
							УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,спр.СубконтоБУ3);
							
							Проводка.СчетКт     =  Результат.Счет;
							УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,спр.Ссылка);
							
							Проводка.Сумма = ДолжноБытьСписано-УжеСписано; 
							
						КонецЕсли;	
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли спр.СпособСписания = Перечисления.СпособыСписанияРасходовБП.Суммой Тогда	
			
			Запрос.Текст=
			"ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
			|	ХозрасчетныйОстаткиИОбороты.Субконто1,
			|	ХозрасчетныйОстаткиИОбороты.Счет
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
			|			&НачДата,
			|			&КонДата,
			|			,
			|			,
			|			Счет В ИЕРАРХИИ (&Счет),
			|			&Субконто,
			|			Организация = &Организация
			|				И Субконто1 = &Субконто1) КАК ХозрасчетныйОстаткиИОбороты";
			
			Запрос.УстановитьПараметр("НачДата",НачалоМесяца(Дата));
			//Запрос.УстановитьПараметр("НачДата",НачалоМесяца(спр.ДатаНачалаСписания));
			Запрос.УстановитьПараметр("КонДата",КонецМесяца(Дата));
			Запрос.УстановитьПараметр("Организация",Организация);
			Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.НайтиПоКоду("3100"));
			Запрос.УстановитьПараметр("Субконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
			Запрос.УстановитьПараметр("Субконто1",спр.Ссылка);
			
			Результат=Запрос.Выполнить().Выбрать();
			Если Результат.Следующий() Тогда
				
					ДолжноБытьСписано = спр.Сумма;
					
					ОстатокРасхода = Результат.СуммаНачальныйОстатокДт + Результат.СуммаОборотДт;
					
					СуммаКСписанию = Мин(ОстатокРасхода, спр.Сумма);
					
					Если СуммаКСписанию>0 тогда
						
						Проводка = Движения.Хозрасчетный.Добавить();
						Проводка.Период      = Дата;
						Проводка.Организация = Организация;
						Проводка.Содержание = "";     
						
						Проводка.СчетДт      = спр.СчетБУ;
						УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,спр.СубконтоБУ1);
						УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,спр.СубконтоБУ2);
						УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,спр.СубконтоБУ3);
						
						Проводка.СчетКт     =  Результат.Счет;
						УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,спр.Ссылка);
						
						Проводка.Сумма = СуммаКСписанию; 
						
					КонецЕсли;	
						
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записать();
	
КонецПроцедуры	

Процедура ДвиженияПоБУОптимизация(Режим, Отказ, Заголовок,СтруктураШапкиДокумента)
	
	Отбор = Новый Структура("Организация", ПолучитьЗначениеПоУмолчанию(глТекущийПользователь, "ОсновнаяОрганизация") );
	
	спр = Справочники.РасходыБудущихПериодов.Выбрать(,,Отбор);
	
	Запрос = Новый Запрос;
	
	Пока спр.Следующий() Цикл
		
		Если спр.ПометкаУдаления Тогда
			Продолжить;
		КонецЕсли; 
		
		Если спр.СчетБУ.Пустая() Тогда
			Продолжить;
		КонецЕсли; 
		
		Если НачалоМесяца(спр.ДатаНачалаСписания) > КонецМесяца(Дата) Тогда
			Продолжить;
		КонецЕсли; 
		
		Если спр.СпособСписания = Перечисления.СпособыСписанияРасходовБП.ЗаПериод Тогда
			
			Запрос.Текст=
			"ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
			|	ХозрасчетныйОстаткиИОбороты.Субконто1,
			|	ХозрасчетныйОстаткиИОбороты.Счет
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
			|			&НачДата,
			|			&КонДата,
			|			,
			|			,
			|			Счет В ИЕРАРХИИ (&Счет),
			|			&Субконто,
			|			Организация = &Организация
			|				И Субконто1 = &Субконто1) КАК ХозрасчетныйОстаткиИОбороты";
			
			Запрос.УстановитьПараметр("НачДата",НачалоМесяца(Дата));
			Запрос.УстановитьПараметр("КонДата",КонецМесяца(Дата));
			Запрос.УстановитьПараметр("Организация",Организация);
			Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.НайтиПоКоду("3100"));
			Запрос.УстановитьПараметр("Субконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
			Запрос.УстановитьПараметр("Субконто1",спр.Ссылка);
			
			Результат=Запрос.Выполнить().Выбрать();
			Если Результат.Следующий() Тогда
				
				ОстатокРасхода = Результат.СуммаНачальныйОстатокДт + Результат.СуммаОборотДт;
				
				ОсталосьМесяцев = Месяц(спр.ДатаОкончанияСписания) - Месяц(Дата) + 1;
				ОсталосьМесяцев = ОсталосьМесяцев + (Год(спр.ДатаОкончанияСписания) - Год(Дата))*12;
				
				СуммаКСписанию = ОстатокРасхода/ОсталосьМесяцев;
				
				Проводка = Движения.Хозрасчетный.Добавить();
				Проводка.Период      = Дата;
				Проводка.Организация = Организация;
				Проводка.Содержание = "";     
				
				Проводка.СчетДт      = спр.СчетБУ;
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,спр.СубконтоБУ1);
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,спр.СубконтоБУ2);
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,спр.СубконтоБУ3);
				
				Проводка.СчетКт     =  Результат.Счет;
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,спр.Ссылка);
				
				Проводка.Сумма = СуммаКСписанию; 
				
			КонецЕсли;
			
		ИначеЕсли спр.СпособСписания = Перечисления.СпособыСписанияРасходовБП.Суммой Тогда	
			
			Запрос.Текст=
			"ВЫБРАТЬ
			|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт,
			|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт,
			|	ХозрасчетныйОстаткиИОбороты.Субконто1,
			|	ХозрасчетныйОстаткиИОбороты.Счет
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
			|			&НачДата,
			|			&КонДата,
			|			,
			|			,
			|			Счет В ИЕРАРХИИ (&Счет),
			|			&Субконто,
			|			Организация = &Организация
			|				И Субконто1 = &Субконто1) КАК ХозрасчетныйОстаткиИОбороты";
			
			Запрос.УстановитьПараметр("НачДата",НачалоМесяца(Дата));
			Запрос.УстановитьПараметр("КонДата",КонецМесяца(Дата));
			Запрос.УстановитьПараметр("Организация",Организация);
			Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.НайтиПоКоду("3100"));
			Запрос.УстановитьПараметр("Субконто",ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
			Запрос.УстановитьПараметр("Субконто1",спр.Ссылка);
			
			Результат=Запрос.Выполнить().Выбрать();
			Если Результат.Следующий() Тогда
				
					ДолжноБытьСписано = спр.Сумма;
					
					ОстатокРасхода = Результат.СуммаНачальныйОстатокДт + Результат.СуммаОборотДт;
					
					СуммаКСписанию = Мин(ОстатокРасхода, спр.Сумма);
					
					Если СуммаКСписанию>0 тогда
						
						Проводка = Движения.Хозрасчетный.Добавить();
						Проводка.Период      = Дата;
						Проводка.Организация = Организация;
						Проводка.Содержание = "";     
						
						Проводка.СчетДт      = спр.СчетБУ;
						УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,спр.СубконтоБУ1);
						УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,спр.СубконтоБУ2);
						УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,спр.СубконтоБУ3);
						
						Проводка.СчетКт     =  Результат.Счет;
						УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,спр.Ссылка);
						
						Проводка.Сумма = СуммаКСписанию; 
						
					КонецЕсли;	
						
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла;
	
	Движения.Хозрасчетный.Записать();
	
КонецПроцедуры	

Функция ПечатьДокумента(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	
	//Макет = ПолучитьОбщийМакет(ИмяМакета);
	
	//Руководители = ОтветственныеЛица(Организация, Дата);	
	//Область.Параметры.Заполнить(Руководители);
	//Область = Макет.ПолучитьОбласть("ПП");
	//Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	
	//ТабДок.Вывести(Область);
	//ТабДок.ФиксацияСверху=0;
	//ТабДок.ФиксацияСлева=0;
	//ТабДок.ЭкземпляровНаСтранице=0;
	//ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	
	ТабДокумент = ПечатьДокумента(ИмяМакета);
	
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "");
	
КонецПроцедуры // Печать()

