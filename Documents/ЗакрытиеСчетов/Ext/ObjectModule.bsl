
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("","");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьСчетаПоДокументу();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	//
	//КурсДокумента        = СтруктураШапкиДокумента.КурсДокумента;
	//КратностьДокумента   = СтруктураШапкиДокумента.КратностьДокумента;
	//
	//
	//ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	ДвиженияПоБУ(Режим, Отказ, Заголовок,СтруктураШапкиДокумента);
		
КонецПроцедуры

//// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Процедура ДвиженияПоБУ(РежимПроведения, Отказ, Заголовок,СтруктураШапкиДокумента)


	Проводки = Движения.Хозрасчетный;
	
	Для каждого СтрокаСчета из Счета  Цикл
		ЭтоСчетГруппа=Ложь;
		ВыборкаСчетов=ПланыСчетов.Хозрасчетный.Выбрать(СтрокаСчета.СчетИсточник);
		Если ВыборкаСчетов.Следующий() Тогда
			ЭтоСчетГруппа=Истина;
		КонецЕсли; 
		Если ЭтоСчетГруппа Тогда
			ЗакрытьГруппуСчетов(СтруктураШапкиДокумента,Проводки,СтрокаСчета);
		Иначе	
			ЗакрытьСчетСФильтром(СтруктураШапкиДокумента,Проводки,СтрокаСчета.СчетИсточник,СтрокаСчета.СубконтоИсточник1,СтрокаСчета.СубконтоИсточник2,СтрокаСчета.СубконтоИсточник3,СтрокаСчета.СчетПриемник,СтрокаСчета.СубконтоПриемник1,СтрокаСчета.СубконтоПриемник2,СтрокаСчета.СубконтоПриемник3,КонецДня(Дата)+1,Дата);
		КонецЕсли; 
	КонецЦикла; 
	
	
КонецПроцедуры	

Процедура ЗакрытьГруппуСчетов(СтруктураШапкиДокумента,Проводки,СтрокаСчета)
	
	Выборка=ПланыСчетов.Хозрасчетный.Выбрать(СтрокаСчета.СчетИсточник);
	Пока Выборка.Следующий() Цикл
		
		ЭтоСчетГруппа=Ложь;
		Выборка2=ПланыСчетов.Хозрасчетный.Выбрать(Выборка.Ссылка);
		Пока Выборка2.Следующий() Цикл
			ЭтоСчетГруппа=Истина;
		КонецЦикла; 
		Если ЭтоСчетГруппа Тогда
			ЗакрытьГруппуСчетов(СтруктураШапкиДокумента,Проводки,СтрокаСчета);
		Иначе	
			ЗакрытьСчетСФильтром(СтруктураШапкиДокумента,Проводки,Выборка.Ссылка,СтрокаСчета.СубконтоИсточник1,СтрокаСчета.СубконтоИсточник2,СтрокаСчета.СубконтоИсточник3,СтрокаСчета.СчетПриемник,СтрокаСчета.СубконтоПриемник1,СтрокаСчета.СубконтоПриемник2,СтрокаСчета.СубконтоПриемник3,КонецДня(Дата)+1,Дата);
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры



Функция ПечатьДокумента(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	
	//Макет = ПолучитьОбщийМакет(ИмяМакета);
	
	//Руководители = ОтветственныеЛица(Организация, Дата);	
	//Область.Параметры.Заполнить(Руководители);
	//Область = Макет.ПолучитьОбласть("ПП");
	//Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	
	//ТабДок.Вывести(Область);
	//ТабДок.ФиксацияСверху=0;
	//ТабДок.ФиксацияСлева=0;
	//ТабДок.ЭкземпляровНаСтранице=0;
	//ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	
	ТабДокумент = ПечатьДокумента(ИмяМакета);
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "");
	
КонецПроцедуры // Печать()


Процедура ПровестиСФильтром(СтруктураШапкиДокумента,Проводки,Выборка,СчетПриемник,СубконтоПриемник1,СубконтоПриемник2,СубконтоПриемник3,Дата) Экспорт
	КоличествоСубконто=Выборка.Счет.ВидыСубконто.Количество();
	
	Если не СтруктураШапкиДокумента.Сторно Тогда
		Если Выборка.Счет.Валютный Тогда
			ВыборкаВалюта = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаВалюта.Следующий() Цикл
				
				Если ВыборкаВалюта.Счет.Вид=ВидСчета.Активный Тогда
					Проводка = Проводки.Добавить();
					Проводка.Период = Дата;
					Проводка.Организация = СтруктураШапкиДокумента.Организация;
					Проводка.Активность = Истина;
					Проводка.СчетДт = СчетПриемник;
					Если ЗначениеНеЗаполнено(СубконтоПриемник1) Тогда
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Выборка.Получить(1));
					Иначе
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СубконтоПриемник1);
					КонецЕсли; 
					Если ЗначениеНеЗаполнено(СубконтоПриемник2) Тогда
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, Выборка.Получить(2));
					Иначе
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СубконтоПриемник2);
					КонецЕсли; 
					Если ЗначениеНеЗаполнено(СубконтоПриемник3) Тогда
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, Выборка.Получить(3));
					Иначе
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СубконтоПриемник3);
					КонецЕсли; 
					
					Если СчетПриемник.Валютный Тогда
						Проводка.ВалютаДТ = ВыборкаВалюта.Валюта;
						Проводка.ВалютнаяСуммаДТ = ВыборкаВалюта.ВалютнаяСуммаДт-ВыборкаВалюта.ВалютнаяСуммаКт;
					КонецЕсли; 
					
					Проводка.СчетКт = ВыборкаВалюта.Счет;
					Для н=1 По КоличествоСубконто Цикл
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, н, ВыборкаВалюта.Получить(н));
					КонецЦикла; 
					Проводка.ВалютаКТ = ВыборкаВалюта.Валюта;
					Проводка.ВалютнаяСуммаКТ = ВыборкаВалюта.ВалютнаяСуммаДт-ВыборкаВалюта.ВалютнаяСуммаКт;
					Проводка.Сумма = Выборка.СуммаДт - Выборка.СуммаКт;
				Иначе
					Проводка = Проводки.Добавить();
					Проводка.Период = Дата;
					Проводка.Организация = СтруктураШапкиДокумента.Организация;
					Проводка.Активность = Истина;
					Проводка.СчетКт = СчетПриемник;
					Если ЗначениеНеЗаполнено(СубконтоПриемник1) Тогда
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Выборка.Получить(1));
					Иначе
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СубконтоПриемник1);
					КонецЕсли; 
					Если ЗначениеНеЗаполнено(СубконтоПриемник2) Тогда
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, Выборка.Получить(2));
					Иначе
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СубконтоПриемник2);
					КонецЕсли; 
					Если ЗначениеНеЗаполнено(СубконтоПриемник3) Тогда
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, Выборка.Получить(3));
					Иначе
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СубконтоПриемник3);
					КонецЕсли; 
					
					Если СчетПриемник.Валютный Тогда
						Проводка.ВалютаКТ = ВыборкаВалюта.Валюта;
						Проводка.ВалютнаяСуммаКТ = ВыборкаВалюта.ВалютнаяСуммаКт-ВыборкаВалюта.ВалютнаяСуммаДт;
					КонецЕсли; 
					
					Проводка.СчетДт = ВыборкаВалюта.Счет;
					Для н=1 По КоличествоСубконто Цикл
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, н, ВыборкаВалюта.Получить(н));
					КонецЦикла; 
					Проводка.ВалютаДТ = ВыборкаВалюта.Валюта;
					Проводка.ВалютнаяСуммаДТ = ВыборкаВалюта.ВалютнаяСуммаКт-ВыборкаВалюта.ВалютнаяСуммаДт;
					Проводка.Сумма = Выборка.СуммаКт - Выборка.СуммаДт;
				КонецЕсли; 
				
			КонецЦикла;	
		Иначе
			
			Если Выборка.Счет.Вид=ВидСчета.Активный Тогда
				Проводка = Проводки.Добавить();
				Проводка.Период = Дата;
				Проводка.Организация = СтруктураШапкиДокумента.Организация;
				Проводка.Активность = Истина;
				Проводка.СчетДт = СчетПриемник;
				
				Если СчетПриемник.Количественный Тогда
					Проводка.КоличествоДт = Выборка.КоличествоДт - Выборка.КоличествоКт;
				КонецЕсли; 
				
				Если ЗначениеНеЗаполнено(СубконтоПриемник1) Тогда
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Выборка.Получить(1));
				Иначе
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СубконтоПриемник1);
				КонецЕсли; 
				Если ЗначениеНеЗаполнено(СубконтоПриемник2) Тогда
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, Выборка.Получить(2));
				Иначе
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СубконтоПриемник2);
				КонецЕсли; 
				Если ЗначениеНеЗаполнено(СубконтоПриемник3) Тогда
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, Выборка.Получить(3));
				Иначе
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СубконтоПриемник3);
				КонецЕсли; 
				
				
				Проводка.СчетКт = Выборка.Счет;
				Для н=1 По КоличествоСубконто Цикл
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, н, Выборка.Получить(н));
				КонецЦикла; 
				
				Если Выборка.Счет.Количественный Тогда
					Проводка.КоличествоКт = Выборка.КоличествоДт - Выборка.КоличествоКт;
				КонецЕсли; 
				Если Выборка.Счет.КоличественныйСЗ Тогда
					Проводка.КоличествоСЗКт = Выборка.КоличествоСЗДт - Выборка.КоличествоСЗКт;
				КонецЕсли; 
				
				Проводка.Сумма = Выборка.СуммаДт - Выборка.СуммаКт;
			Иначе
				Проводка = Проводки.Добавить();
				Проводка.Период = Дата;
				Проводка.Организация = СтруктураШапкиДокумента.Организация;
				Проводка.Активность = Истина;
				Проводка.СчетКт = СчетПриемник;
				
				Если СчетПриемник.Количественный Тогда
					Проводка.КоличествоКт = Выборка.КоличествоКт - Выборка.КоличествоДт;
				КонецЕсли; 
				
				Если ЗначениеНеЗаполнено(СубконтоПриемник1) Тогда
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Выборка.Получить(1));
				Иначе
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СубконтоПриемник1);
				КонецЕсли; 
				Если ЗначениеНеЗаполнено(СубконтоПриемник2) Тогда
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, Выборка.Получить(2));
				Иначе
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СубконтоПриемник2);
				КонецЕсли; 
				Если ЗначениеНеЗаполнено(СубконтоПриемник3) Тогда
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, Выборка.Получить(3));
				Иначе
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СубконтоПриемник3);
				КонецЕсли; 
				
				
				Проводка.СчетДт = Выборка.Счет;
				Для н=1 По КоличествоСубконто Цикл
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, н, Выборка.Получить(н));
				КонецЦикла; 
				
				Если Выборка.Счет.Количественный Тогда
					Проводка.КоличествоДт = Выборка.КоличествоКт - Выборка.КоличествоДт;
				КонецЕсли; 
				Если Выборка.Счет.КоличественныйСЗ Тогда
					Проводка.КоличествоСЗДт = Выборка.КоличествоСЗКт - Выборка.КоличествоСЗДт;
				КонецЕсли; 
				
				Проводка.Сумма = Выборка.СуммаКт - Выборка.СуммаДт;
			КонецЕсли; 
			
		КонецЕсли; 
	Иначе
		
		Если Выборка.Счет.Валютный Тогда
			ВыборкаВалюта = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаВалюта.Следующий() Цикл
				
				Если ВыборкаВалюта.Счет.Вид=ВидСчета.Пассивный Тогда
					Проводка = Проводки.Добавить();
					Проводка.Период = Дата;
					Проводка.Организация = СтруктураШапкиДокумента.Организация;
					Проводка.Активность = Истина;
					Проводка.СчетДт = СчетПриемник;
					Если ЗначениеНеЗаполнено(СубконтоПриемник1) Тогда
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Выборка.Получить(1));
					Иначе
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СубконтоПриемник1);
					КонецЕсли; 
					Если ЗначениеНеЗаполнено(СубконтоПриемник2) Тогда
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, Выборка.Получить(2));
					Иначе
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СубконтоПриемник2);
					КонецЕсли; 
					Если ЗначениеНеЗаполнено(СубконтоПриемник3) Тогда
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, Выборка.Получить(3));
					Иначе
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СубконтоПриемник3);
					КонецЕсли; 
					
					Если СчетПриемник.Валютный Тогда
						Проводка.ВалютаДТ = ВыборкаВалюта.Валюта;
						Проводка.ВалютнаяСуммаДТ = ВыборкаВалюта.ВалютнаяСуммаДт-ВыборкаВалюта.ВалютнаяСуммаКт;
					КонецЕсли; 
					
					Проводка.СчетКт = ВыборкаВалюта.Счет;
					Для н=1 По КоличествоСубконто Цикл
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, н, ВыборкаВалюта.Получить(н));
					КонецЦикла; 
					Проводка.ВалютаКТ = ВыборкаВалюта.Валюта;
					Проводка.ВалютнаяСуммаКТ = ВыборкаВалюта.ВалютнаяСуммаДт-ВыборкаВалюта.ВалютнаяСуммаКт;
					Проводка.Сумма = Выборка.СуммаДт - Выборка.СуммаКт;
				Иначе
					Проводка = Проводки.Добавить();
					Проводка.Период = Дата;
					Проводка.Организация = СтруктураШапкиДокумента.Организация;
					Проводка.Активность = Истина;
					Проводка.СчетКт = СчетПриемник;
					Если ЗначениеНеЗаполнено(СубконтоПриемник1) Тогда
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Выборка.Получить(1));
					Иначе
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СубконтоПриемник1);
					КонецЕсли; 
					Если ЗначениеНеЗаполнено(СубконтоПриемник2) Тогда
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, Выборка.Получить(2));
					Иначе
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СубконтоПриемник2);
					КонецЕсли; 
					Если ЗначениеНеЗаполнено(СубконтоПриемник3) Тогда
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, Выборка.Получить(3));
					Иначе
						УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СубконтоПриемник3);
					КонецЕсли; 
				
					Если СчетПриемник.Валютный Тогда
						Проводка.ВалютаКТ = ВыборкаВалюта.Валюта;
						Проводка.ВалютнаяСуммаКТ = ВыборкаВалюта.ВалютнаяСуммаКт-ВыборкаВалюта.ВалютнаяСуммаДт;
					КонецЕсли; 
					
					Проводка.СчетДт = ВыборкаВалюта.Счет;
					Для н=1 По КоличествоСубконто Цикл
						УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, н, ВыборкаВалюта.Получить(н));
					КонецЦикла; 
					Проводка.ВалютаДТ = ВыборкаВалюта.Валюта;
					Проводка.ВалютнаяСуммаДТ = ВыборкаВалюта.ВалютнаяСуммаКт-ВыборкаВалюта.ВалютнаяСуммаДт;
					Проводка.Сумма = Выборка.СуммаКт - Выборка.СуммаДт;
				КонецЕсли; 
				
			КонецЦикла;	
		Иначе
			
			Если Выборка.Счет.Вид=ВидСчета.Пассивный Тогда
				Проводка = Проводки.Добавить();
				Проводка.Период = Дата;
				Проводка.Организация = СтруктураШапкиДокумента.Организация;
				Проводка.Активность = Истина;
				Проводка.СчетДт = СчетПриемник;
				Если Выборка.Счет.Количественный Тогда
					Проводка.КоличествоДт = Выборка.КоличествоДт - Выборка.КоличествоКт;
				КонецЕсли; 
				Если ЗначениеНеЗаполнено(СубконтоПриемник1) Тогда
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Выборка.Получить(1));
				Иначе
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СубконтоПриемник1);
				КонецЕсли; 
				Если ЗначениеНеЗаполнено(СубконтоПриемник2) Тогда
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, Выборка.Получить(2));
				Иначе
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СубконтоПриемник2);
				КонецЕсли; 
				Если ЗначениеНеЗаполнено(СубконтоПриемник3) Тогда
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, Выборка.Получить(3));
				Иначе
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СубконтоПриемник3);
				КонецЕсли; 
				
				Проводка.СчетКт = Выборка.Счет;
				Для н=1 По КоличествоСубконто Цикл
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, н, Выборка.Получить(н));
				КонецЦикла; 
				Если Выборка.Счет.Количественный Тогда
					Проводка.КоличествоКт = Выборка.КоличествоДт - Выборка.КоличествоКт;
				КонецЕсли; 
				Если Выборка.Счет.КоличественныйСЗ Тогда
					Проводка.КоличествоСЗКт = Выборка.КоличествоСЗДт - Выборка.КоличествоСЗКт;
				КонецЕсли; 
				Проводка.Сумма = Выборка.СуммаДт - Выборка.СуммаКт;
			Иначе
				Проводка = Проводки.Добавить();
				Проводка.Период = Дата;
				Проводка.Организация = СтруктураШапкиДокумента.Организация;
				Проводка.Активность = Истина;
				Проводка.СчетКт = СчетПриемник;
				
				Если СчетПриемник.Количественный Тогда
					Проводка.КоличествоКт = Выборка.КоличествоКт - Выборка.КоличествоДт;
				КонецЕсли; 
				
				Если ЗначениеНеЗаполнено(СубконтоПриемник1) Тогда
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Выборка.Получить(1));
				Иначе
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СубконтоПриемник1);
				КонецЕсли; 
				Если ЗначениеНеЗаполнено(СубконтоПриемник2) Тогда
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, Выборка.Получить(2));
				Иначе
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СубконтоПриемник2);
				КонецЕсли; 
				Если ЗначениеНеЗаполнено(СубконтоПриемник3) Тогда
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, Выборка.Получить(3));
				Иначе
					УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СубконтоПриемник3);
				КонецЕсли; 
				
				
				Проводка.СчетДт = Выборка.Счет;
				Для н=1 По КоличествоСубконто Цикл
					УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, н, Выборка.Получить(н));
				КонецЦикла;
				
								
				Если  Выборка.Счет.Количественный Тогда
					Проводка.КоличествоДт = Выборка.КоличествоКт - Выборка.КоличествоДт;
				КонецЕсли; 
				Если  Выборка.Счет.КоличественныйСЗ Тогда
					Проводка.КоличествоСЗДт = Выборка.КоличествоСЗКт - Выборка.КоличествоСЗДт;
				КонецЕсли; 

				Проводка.Сумма = Выборка.СуммаКт - Выборка.СуммаДт;
			КонецЕсли; 
			
		КонецЕсли; 
		
	КонецЕсли; 
КонецПроцедуры	

Процедура ЗакрытьСчетСФильтром(СтруктураШапкиДокумента,Проводки,СчетИсточник,СубконтоИсточник1,СубконтоИсточник2,СубконтоИсточник3,СчетПриемник,СубконтоПриемник1,СубконтоПриемник2,СубконтоПриемник3,ДатаОстатков,ДатаПроводки) Экспорт
	
	//КоличествоСубконто=СчетИсточник.ВидыСубконто.Количество();
	КоличествоСубконто=0;
	
	Запрос = Новый Запрос;
	
	ФильтрПоСубконто="";
	
	Если не ЗначениеНезаполнено(СубконтоИсточник1) Тогда
		ФильтрПоСубконто=ФильтрПоСубконто+" и Субконто1=&Субконто1";
		Запрос.УстановитьПараметр("Субконто1",СубконтоИсточник1);
	КонецЕсли; 
	
	
	Если не ЗначениеНезаполнено(СубконтоИсточник2) Тогда
		ФильтрПоСубконто=ФильтрПоСубконто+" и Субконто2=&Субконто2";
		Запрос.УстановитьПараметр("Субконто2",СубконтоИсточник2);
	КонецЕсли; 
	
	
	Если не ЗначениеНезаполнено(СубконтоИсточник3) Тогда
		ФильтрПоСубконто=ФильтрПоСубконто+" и Субконто3=&Субконто3";
		Запрос.УстановитьПараметр("Субконто3",СубконтоИсточник3);
	КонецЕсли; 
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,";
	
	сс="";
	Для н=1 По СчетИсточник.ВидыСубконто.Количество() Цикл
		
		Если СчетИсточник.ВидыСубконто[н-1].ТолькоОбороты Тогда
			Продолжить;
		КонецЕсли; 
		
		Запрос.Текст = Запрос.Текст+"ХозрасчетныйОстатки.Субконто"+строка(н)+" КАК Субконто"+строка(н)+",";
		сс=сс+"Субконто"+строка(н)+",";
		КоличествоСубконто=КоличествоСубконто+1;
	КонецЦикла; 
	
	УсловиеСчета="Счет=&Счет";
	//ВыборкаСчетов=ПланыСчетов.Хозрасчетный.Выбрать(СчетИсточник);
	//Если ВыборкаСчетов.Следующий() Тогда
	//	
	//	УсловиеСчета="Счет в ИЕРАРХИИ (&Счет)";
	//
	//КонецЕсли; 
	
	
	Запрос.Текст = Запрос.Текст+
	"	ХозрасчетныйОстатки.Валюта КАК Валюта,
	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокДт) КАК СуммаДт,
	|	СУММА(ХозрасчетныйОстатки.СуммаОстатокКт) КАК СуммаКт,
	|	СУММА(ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт) КАК ВалютнаяСуммаДт,
	|	СУММА(ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт) КАК ВалютнаяСуммаКт,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстатокДт) КАК КоличествоДт,
	|	СУММА(ХозрасчетныйОстатки.КоличествоОстатокКт) КАК КоличествоКт,
	|	СУММА(ХозрасчетныйОстатки.КоличествоСЗОстатокДт) КАК КоличествоСЗДт,
	|	СУММА(ХозрасчетныйОстатки.КоличествоСЗОстатокКт) КАК КоличествоСЗКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата,"+УсловиеСчета+",,Организация=&Организация "+ФильтрПоСубконто+") КАК ХозрасчетныйОстатки
	|СГРУППИРОВАТЬ ПО Счет,"+сс+"Валюта
	|ИТОГИ
	|	СУММА(СуммаДт),
	|	СУММА(СуммаКт),
	|	СУММА(ВалютнаяСуммаДт),
	|	СУММА(ВалютнаяСуммаКт),
	|	СУММА(КоличествоДт),
	|	СУММА(КоличествоКт),
	|	СУММА(КоличествоСЗДт),
	|	СУММА(КоличествоСЗКт)
	|ПО
	|	Счет,"+сс+"Валюта";

	Запрос.УстановитьПараметр("Дата",ДатаОстатков);
	Запрос.УстановитьПараметр("Счет",СчетИсточник);
	Запрос.УстановитьПараметр("Организация",СтруктураШапкиДокумента.Организация);
	Результат = Запрос.Выполнить();

	ВыборкаСчет = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСчет.Следующий() Цикл
		Если КоличествоСубконто>0 Тогда
			ВыборкаСубконто1 = ВыборкаСчет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСубконто1.Следующий() Цикл
				Если КоличествоСубконто>1 Тогда
					ВыборкаСубконто2 = ВыборкаСубконто1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаСубконто2.Следующий() Цикл
						Если КоличествоСубконто>2 Тогда
							ВыборкаСубконто3 = ВыборкаСубконто2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаСубконто3.Следующий() Цикл
								ПровестиСФильтром(СтруктураШапкиДокумента,Проводки,ВыборкаСубконто3,СчетПриемник,СубконтоПриемник1,СубконтоПриемник2,СубконтоПриемник3,ДатаПроводки);
							КонецЦикла;
						Иначе
							ПровестиСФильтром(СтруктураШапкиДокумента,Проводки,ВыборкаСубконто2,СчетПриемник,СубконтоПриемник1,СубконтоПриемник2,СубконтоПриемник3,ДатаПроводки);
						КонецЕсли; 
					КонецЦикла;
				Иначе
					ПровестиСФильтром(СтруктураШапкиДокумента,Проводки,ВыборкаСубконто1,СчетПриемник,СубконтоПриемник1,СубконтоПриемник2,СубконтоПриемник3,ДатаПроводки);
				КонецЕсли; 
			КонецЦикла;
		Иначе
			ПровестиСФильтром(СтруктураШапкиДокумента,Проводки,ВыборкаСчет,СчетПриемник,СубконтоПриемник1,СубконтоПриемник2,СубконтоПриемник3,ДатаПроводки);
		КонецЕсли; 
	КонецЦикла;


КонецПроцедуры
 
Процедура ЗаписатьСчетаПоДокументу()
	
	СимволЗапятой = "";
	
	СчетаПоДокументу = "";
	
	Для каждого СтрокаДокумента Из Счета Цикл
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + Строка(СтрокаДокумента.СчетИсточник) + "-" + Строка(СтрокаДокумента.СчетПриемник);
		СимволЗапятой = ", ";
	КонецЦикла; 
	
КонецПроцедуры
