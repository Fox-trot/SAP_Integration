
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("","");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ДвиженияПоБУ(Режим, Отказ, Заголовок,СтруктураШапкиДокумента);
		
КонецПроцедуры

Функция ПечатьДокумента(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	
	//Макет = ПолучитьОбщийМакет(ИмяМакета);
	
	//Руководители = ОтветственныеЛица(Организация, Дата);	
	//Область.Параметры.Заполнить(Руководители);
	//Область = Макет.ПолучитьОбласть("ПП");
	//Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	
	//ТабДок.Вывести(Область);
	//ТабДок.ФиксацияСверху=0;
	//ТабДок.ФиксацияСлева=0;
	//ТабДок.ЭкземпляровНаСтранице=0;
	//ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	
	ТабДокумент = ПечатьДокумента(ИмяМакета);
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "");
	
КонецПроцедуры // Печать()

Процедура ДвиженияПоБУ(Режим, Отказ, Заголовок, СтруктураШапкиДокумента)	

	ПроводкиБУ = Движения.Хозрасчетный;
	
	Для каждого СтрокаДокумента Из ОсновныеСредства Цикл
		
		// Списание стоимости
		//
		Если Не СтрокаДокумента.Стоимость = 0 Тогда
		
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "Списание стоимости";     
			
			Проводка.СчетДт      = СтрокаДокумента.СчетЗатрат;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаДокумента.Субконто1);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаДокумента.Субконто2);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаДокумента.Субконто3);
			
			Проводка.СчетКт     =  СтрокаДокумента.СчетУчета;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаДокумента.ОсновноеСредство);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
			
			Проводка.КоличествоКт = 1;
			
			Проводка.Сумма = СтрокаДокумента.Стоимость;
		
		КонецЕсли; 
		
		// Списание переоценки
		//
		Если Не СтрокаДокумента.Переоценка = 0 Тогда
		
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "Списание переоценки";     
			
			Проводка.СчетДт      = СтрокаДокумента.СчетПереоценки;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаДокумента.ОсновноеСредство);
			
			Проводка.СчетКт     =  СтрокаДокумента.СчетЗатрат;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаДокумента.Субконто1);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,СтрокаДокумента.Субконто2);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаДокумента.Субконто3);
			
			Проводка.Сумма = СтрокаДокумента.Переоценка;
		
		КонецЕсли;       		
		
	КонецЦикла; 
	
КонецПроцедуры
 