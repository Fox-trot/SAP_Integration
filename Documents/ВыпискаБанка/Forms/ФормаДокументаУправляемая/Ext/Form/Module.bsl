
&НаКлиенте
Перем СведенияОСчетах;

&НаКлиенте
Процедура БанковскийСчетПриИзменении(Элемент)
	
	ЗаполнитьСчетИВалюту();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСчетИВалюту()
	
	Объект.ВалютаДокумента=Объект.БанковскийСчет.ВалютаДенежныхСредств;
	Объект.СчетБанк=Объект.БанковскийСчет.СчетУчета;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.Организация.ТолькоПросмотр = не УчетПоВсемОрганизациям;
	Элементы.Ответственный.ТолькоПросмотр = не ПроцедурыСервера.РольДоступна_Сервер("ПолныеПрава");
	
	СведенияОСчетах=ПолучитьСведенияОСчетах();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСведенияОСчетах()

	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Хозрасчетный.Код,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ХозрасчетныйВидыСубконто.ВидСубконто) КАК КоличествоСубконто,
	|	Хозрасчетный.Валютный
	|ИЗ
	|	ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|		ПО ХозрасчетныйВидыСубконто.Ссылка = Хозрасчетный.Ссылка
	|ГДЕ
	|	(НЕ Хозрасчетный.ЗапретитьИспользоватьВПроводках)
	|
	|СГРУППИРОВАТЬ ПО
	|	Хозрасчетный.Код,
	|	Хозрасчетный.Валютный";
	
	СведенияОСчетах="";
	
	ТаблицаСчетов=Запрос.Выполнить().Выгрузить();
	
	Для каждого Строка Из ТаблицаСчетов Цикл
	
		СведенияОСчетах=СведенияОСчетах+"//"+Строка.Код+"/"+Строка(Строка.КоличествоСубконто)+"/"+?(Строка.Валютный,"+","-");
	
	КонецЦикла; 
	
	Возврат СведенияОСчетах;
	
КонецФункции // ПолучитьСведенияОСчетах()()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПроцедурыСервера.ЗаполнитьШапкуДокумента_Сервер(Объект, Объект.Ссылка);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежиКоррСчетПриИзменении(Элемент)
	
	//Счет=Элементы.Платежи.ТекущиеДанные.КоррСчет;
	//
	//КоличествоСубконтоПоСчету=КоличествоСубконтоПоСчету(Строка(Счет));
	
КонецПроцедуры

&НаСервере
Функция КоличествоСубконтоПоСчету(КодСчета)
	
	Перем Счет;
	
	Счет=ПланыСчетов.Хозрасчетный.НайтиПоКоду(КодСчета);
	
	Если Счет.Пустая() Тогда
		Возврат 0;
	Иначе	
		Возврат Счет.ВидыСубконто.Количество();
	КонецЕсли;
	
КонецФункции	

&НаКлиенте
Процедура ПлатежиПриИзменении(Элемент)
	
    УстановитьДоступностьПолейСтроки();
	РассчитатьИтоги();
	
КонецПроцедуры


&НаКлиенте
Процедура РассчитатьИтоги()

	Объект.ПриходДокумента=Объект.Платежи.Итог("Приход");
	Объект.РасходДокумента=Объект.Платежи.Итог("Расход");
	Объект.ПриходДокументаВВалюте=Объект.Платежи.Итог("ПриходВВалюте");
	Объект.РасходДокументаВВалюте=Объект.Платежи.Итог("РасходВВалюте");

КонецПроцедуры // РассчитатьИтоги()


&НаКлиенте
Функция СведенияОСчете(КодСчета)
	
	ПозицияСчета = Найти(СведенияОСчетах,"//"+КодСчета+"/");
	
	КоррСчетВалютный=Ложь;
	КоррСчетКоличествоСубконто=0;
	
	Если ПозицияСчета>0 Тогда
	
		СведенияОСчете=Сред(СведенияОСчетах,ПозицияСчета+3+СтрДлина(КодСчета),3);
		КоррСчетВалютный=?(Прав(СведенияОСчете,1)="+",истина,ложь);
		
		Попытка
			КоррСчетКоличествоСубконто=Число(Лев(СведенияОСчете,1));
		Исключение
		КонецПопытки;	
	
	КонецЕсли;
	
	Возврат новый Структура("Валютный,КоличествоСубконто",КоррСчетВалютный,КоррСчетКоличествоСубконто);

КонецФункции // ПолучитьСведенияОСчете()

&НаКлиенте
Процедура УстановитьДоступностьПолейСтроки()
	
	ТекущиеДанные=Элементы.Платежи.ТекущиеДанные;
	
	Если ТекущиеДанные=Неопределено Тогда
	
		Возврат;
	
	КонецЕсли; 
	
	ВидДвижения=ТекущиеДанные.ВидДвижения;
	
	
	КоррСчетСтрокой=Строка(ТекущиеДанные.КоррСчет);
	
	СведенияОКоррСчете = СведенияОСчете(КоррСчетСтрокой);
	СведенияОСчетБанк  = СведенияОСчете(Строка(Объект.СчетБанк));
	
	УказыватьВалюту = СведенияОСчетБанк.Валютный ИЛИ СведенияОКоррСчете.Валютный;
	
	Элементы.ПлатежиВалюта.ТолькоПросмотр = ?((СведенияОКоррСчете.Валютный) И НЕ СведенияОСчетБанк.Валютный,Ложь,Истина);
	
	Элементы.ПлатежиКурс.ТолькоПросмотр   = ?(УказыватьВалюту,Ложь,Истина);

	Для н=1 По 3 Цикл
	
		Элементы["ПлатежиСубконто"+Строка(н)].ТолькоПросмотр = ?(н<=СведенияОКоррСчете.КоличествоСубконто,ложь,истина);
	
	КонецЦикла; 
	
	
	ВидДвиженияСтрокой=Строка(ВидДвижения);
	
	Если (ВидДвиженияСтрокой="Поступление") или (ВидДвиженияСтрокой="ПоступлениеИзКассы") Тогда
		
		Элементы.ПлатежиПриход.ТолькоПросмотр        = Ложь;
		Элементы.ПлатежиРасход.ТолькоПросмотр        = Истина;
		
		Элементы.ПлатежиПриходВВалюте.ТолькоПросмотр = Элементы.ПлатежиВалюта.ТолькоПросмотр;
		Элементы.ПлатежиРасходВВалюте.ТолькоПросмотр = Истина;
		
	ИначеЕсли (ВидДвиженияСтрокой="Списание") или (ВидДвиженияСтрокой="СписаниеВКассу") Тогда
		
		Элементы.ПлатежиПриход.ТолькоПросмотр        = Истина;
		Элементы.ПлатежиРасход.ТолькоПросмотр        = Ложь;
		
		Элементы.ПлатежиПриходВВалюте.ТолькоПросмотр = Истина;
		Элементы.ПлатежиРасходВВалюте.ТолькоПросмотр = Элементы.ПлатежиВалюта.ТолькоПросмотр;
		
	Иначе
		Элементы.ПлатежиПриход.ТолькоПросмотр        = Истина;
		Элементы.ПлатежиРасход.ТолькоПросмотр        = Истина;
		
		Элементы.ПлатежиПриходВВалюте.ТолькоПросмотр = Истина;
		Элементы.ПлатежиРасходВВалюте.ТолькоПросмотр = Истина;
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура ПлатежиПриАктивизацииСтроки(Элемент)
	
    УстановитьДоступностьПолейСтроки();
	
КонецПроцедуры


&НаКлиенте
Процедура ПлатежиВидДвиженияПриИзменении(Элемент)
	
	ТекущиеДанные=Элементы.Платежи.ТекущиеДанные;
	ВидДвиженияСтрокой=Строка(ТекущиеДанные.ВидДвижения);
	
	Если (ВидДвиженияСтрокой="Поступление") или (ВидДвиженияСтрокой="ПоступлениеИзКассы") Тогда
		
		ТекущиеДанные.Приход = ?(ТекущиеДанные.Приход=0,ТекущиеДанные.Расход,ТекущиеДанные.Приход);
		ТекущиеДанные.Расход = 0;
		
		ТекущиеДанные.ПриходВВалюте = ?(ТекущиеДанные.ПриходВВалюте=0,ТекущиеДанные.РасходВВалюте,ТекущиеДанные.ПриходВВалюте);
		ТекущиеДанные.РасходВВалюте = 0;
		
	ИначеЕсли (ВидДвиженияСтрокой="Списание") или (ВидДвиженияСтрокой="СписаниеВКассу") Тогда
		
		ТекущиеДанные.Расход = ?(ТекущиеДанные.Расход=0,ТекущиеДанные.Приход,ТекущиеДанные.Расход);
		ТекущиеДанные.Приход = 0;
		
		ТекущиеДанные.РасходВВалюте = ?(ТекущиеДанные.РасходВВалюте=0,ТекущиеДанные.ПриходВВалюте,ТекущиеДанные.РасходВВалюте);
		ТекущиеДанные.ПриходВВалюте = 0;
		
	Иначе
		
		ТекущиеДанные.Приход = 0;
		ТекущиеДанные.Расход = 0;
		
		ТекущиеДанные.ПриходВВалюте = 0;
		ТекущиеДанные.РасходВВалюте = 0;
		
	КонецЕсли;	
	
	
КонецПроцедуры


&НаКлиенте
Процедура ПлатежиПриходПриИзменении(Элемент)
	
	ПересчитатьСуммыПоКурсу();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммыПоКурсу(СтрокаПлатежи = неопределено)
	
	Если СтрокаПлатежи = неопределено Тогда
		СтрокаПлатежи = Элементы.Платежи.ТекущиеДанные;
	КонецЕсли; 
	
	СведенияОКоррСчете = СведенияОСчете(Строка(СтрокаПлатежи.КоррСчет));
	СведенияОСчетБанк  = СведенияОСчете(Строка(Объект.СчетБанк));
	
	ВидДвиженияСтрокой=Строка(СтрокаПлатежи.ВидДвижения);
	
	Пересчитывать=Ложь;
	ПересчитыватьОтСумовогоЭквивалента=Ложь;
	
	Пересчитывать = ?(СведенияОСчетБанк.Валютный или СведенияОКоррСчете.Валютный,Истина,Ложь);
	ПересчитыватьОтСумовогоЭквивалента = ?(СведенияОСчетБанк.Валютный и не СведенияОКоррСчете.Валютный,Истина,Ложь);
	
	Если Пересчитывать Тогда
		Если (ВидДвиженияСтрокой="Поступление") или
			(ВидДвиженияСтрокой="ПоступлениеИзКассы") Тогда
			
			Если ПересчитыватьОтСумовогоЭквивалента Тогда
				Если СтрокаПлатежи.Курс <> 0 Тогда
					СтрокаПлатежи.ПриходВВалюте=СтрокаПлатежи.Приход/СтрокаПлатежи.Курс;			
				КонецЕсли; 
			Иначе
				СтрокаПлатежи.Приход=СтрокаПлатежи.ПриходВВалюте*СтрокаПлатежи.Курс;			
			КонецЕсли; 
			
		ИначеЕсли (ВидДвиженияСтрокой="Списание") или
			(ВидДвиженияСтрокой="СписаниеВКассу") Тогда
			
			Если ПересчитыватьОтСумовогоЭквивалента Тогда
				Если Не СтрокаПлатежи.Курс = 0 Тогда
					СтрокаПлатежи.РасходВВалюте=СтрокаПлатежи.Расход/СтрокаПлатежи.Курс;	
				КонецЕсли; 
			Иначе
				СтрокаПлатежи.Расход=СтрокаПлатежи.РасходВВалюте*СтрокаПлатежи.Курс;	
			КонецЕсли; 
			
		КонецЕсли; 	 
	Иначе
		СтрокаПлатежи.ПриходВВалюте=0;		
		СтрокаПлатежи.РасходВВалюте=0;
	КонецЕсли; 
	
КонецПроцедуры	 


&НаКлиенте
Процедура ПлатежиПриходВВалютеПриИзменении(Элемент)
	
	ПересчитатьСуммыПоКурсу();
	
КонецПроцедуры


&НаКлиенте
Процедура ПлатежиРасходПриИзменении(Элемент)
	
	ПересчитатьСуммыПоКурсу();
	
КонецПроцедуры


&НаКлиенте
Процедура ПлатежиРасходВВалютеПриИзменении(Элемент)
	
	ПересчитатьСуммыПоКурсу();
	
КонецПроцедуры


&НаКлиенте
Процедура ПлатежиКурсПриИзменении(Элемент)
	
	ПересчитатьСуммыПоКурсу();
	
КонецПроцедуры


&НаКлиенте
Процедура РассчитатьОстатки(Команда)
	
	ОстаткиПоСчету=ПолучитьОстаток(Объект.Организация,Объект.СчетБанк,Объект.ВалютаДокумента,НачалоДня(Объект.Дата));
	
	ОстатокНаНачало=ОстаткиПоСчету.Сумма;
	ОстатокНаКонец=ОстатокНаНачало+Объект.Платежи.Итог("Приход")-Объект.Платежи.Итог("Расход");
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОстаток(Организация,СчетБанк,Валюта,ДатаОстатка)
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокДт
	|	"+?(СчетБанк.Валютный,",ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт",",0 КАК ВалютнаяСуммаОстатокДт")+"
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаОстатка,
	|			Счет = &СчетБанк,
	|			,
	|			Организация = &Организация
	|				"+?(СчетБанк.Валютный," И Валюта = &Валюта","")+") КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("СчетБанк",СчетБанк);
	Запрос.УстановитьПараметр("Валюта",Валюта);
	Запрос.УстановитьПараметр("ДатаОстатка",ДатаОстатка);
	Выборка=Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда
		
		Возврат Новый Структура("Сумма,ВалютнаяСумма",Выборка.СуммаОстатокДт,Выборка.ВалютнаяСуммаОстатокДт);
	
	КонецЕсли; 
	
	Возврат Новый Структура("Сумма,ВалютнаяСумма",0,0);
	
КонецФункции // ПолучитьОстаток()


