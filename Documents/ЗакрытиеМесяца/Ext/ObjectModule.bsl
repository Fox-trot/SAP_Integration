
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("","");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьСчетаПоДокументу();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ДвиженияПоБУ(Режим, Отказ, Заголовок,СтруктураШапкиДокумента);
	
КонецПроцедуры

Функция ПечатьДокумента(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	
	//Макет = ПолучитьОбщийМакет(ИмяМакета);
	
	//Руководители = ОтветственныеЛица(Организация, Дата);	
	//Область.Параметры.Заполнить(Руководители);
	//Область = Макет.ПолучитьОбласть("ПП");
	//Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	
	//ТабДок.Вывести(Область);
	//ТабДок.ФиксацияСверху=0;
	//ТабДок.ФиксацияСлева=0;
	//ТабДок.ЭкземпляровНаСтранице=0;
	//ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	
	ТабДокумент = ПечатьДокумента(ИмяМакета);
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "");
	
КонецПроцедуры // Печать()

Процедура ДвиженияПоБУ(РежимПроведения, Отказ, Заголовок,СтруктураШапкиДокумента)


	ПроводкиБУ = Движения.Хозрасчетный;
	
	Если Константы.МетодПереоценкиВалютныхДенежныхСредств.Получить() = Перечисления.МетодыПереоценкиВалютныхДенежныхСредств.МетодОтсроченногоСписания Тогда
		СписаниеНакопленнойКурсовойРазницы(ПроводкиБУ);
		ПроводкиБУ.Записать();
	КонецЕсли;	
	
	Если Закрыть20счет Тогда
		ЗакрытьСчет(СтруктураШапкиДокумента,ПроводкиБУ,ПланыСчетов.Хозрасчетный.НайтиПоКоду("2010"),ПланыСчетов.Хозрасчетный.НайтиПоКоду("9130"),КонецМесяца(Дата)+1,КонецМесяца(Дата));
		ЗакрытьСчет(СтруктураШапкиДокумента,ПроводкиБУ,ПланыСчетов.Хозрасчетный.НайтиПоКоду("2020"),ПланыСчетов.Хозрасчетный.НайтиПоКоду("9130"),КонецМесяца(Дата)+1,КонецМесяца(Дата));
		ПроводкиБУ.Записать();
	КонецЕсли;	
	
	Если СписатьТорговуюНаценку и не Константы.УчетТоваровВРозницеПоНаименованиям.Получить() Тогда
		СформироватьПроводкиПоРознице();
		ПроводкиБУ.Записать();
	КонецЕсли;	
	
	Если Константы.УчетГотовойПродукцииПоПлановойСебестоимости.Получить() Тогда
		СписатьОтклонениеПоСебестоимостиГотовойПродукции();
		ПроводкиБУ.Записать();
	КонецЕсли;	
	
	Если Закрыть92счет Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.СуммаОстаток КАК Остаток,
		|	ХозрасчетныйОстатки.Счет
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаОстатка, Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки";
		
		Запрос.УстановитьПараметр("ДатаОстатка",КонецМесяца(Дата)+1);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.НайтиПоКоду("9200"));
		
		Остатки=Запрос.Выполнить().Выбрать();
		
		Пока Остатки.Следующий() Цикл
			
			Если Остатки.Остаток>0 Тогда
				Проводка = ПроводкиБУ.Добавить();
				Проводка.Период = Дата;
				Проводка.Организация = Организация;
				
				Проводка.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9430");
				УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, Справочники.РасходыПериода.УбыткиОтВыбытияОСиИногоИмущества);
				
				Проводка.СчетКт = Остатки.Счет;
				Проводка.Сумма = Остатки.Остаток;
			Иначе
				Проводка = ПроводкиБУ.Добавить();
				Проводка.Период = Дата;
				Проводка.Организация = Организация;
				
				Проводка.СчетДт = Остатки.Счет;
				
				Если Остатки.Счет.Код="9210" Тогда
					Проводка.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9310");
				Иначе
					Проводка.СчетКт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9320");
				КонецЕсли;
				Проводка.Сумма =- Остатки.Остаток;
			КонецЕсли;
			
		КонецЦикла;	
		
		ПроводкиБУ.Записать();
	КонецЕсли;	
	

	
	Если Закрыть90счет Тогда
		ЗакрытьГруппуСчетовБУ(СтруктураШапкиДокумента,ПроводкиБУ,ПланыСчетов.Хозрасчетный.НайтиПоКоду("9000"),ПланыСчетов.Хозрасчетный.НайтиПоКоду("9910"));
	КонецЕсли;	
	Если Закрыть91счет Тогда
		ЗакрытьГруппуСчетовБУ(СтруктураШапкиДокумента,ПроводкиБУ,ПланыСчетов.Хозрасчетный.НайтиПоКоду("9100"),ПланыСчетов.Хозрасчетный.НайтиПоКоду("9910"));
	КонецЕсли;	
	
	Если Закрыть93счет Тогда
		ЗакрытьГруппуСчетовБУ(СтруктураШапкиДокумента,ПроводкиБУ,ПланыСчетов.Хозрасчетный.НайтиПоКоду("9300"),ПланыСчетов.Хозрасчетный.НайтиПоКоду("9910"));
	КонецЕсли;	
	Если Закрыть94счет Тогда
		ЗакрытьГруппуСчетовБУ(СтруктураШапкиДокумента,ПроводкиБУ,ПланыСчетов.Хозрасчетный.НайтиПоКоду("9400"),ПланыСчетов.Хозрасчетный.НайтиПоКоду("9910"));
	КонецЕсли;	
	Если Закрыть95счет Тогда
		ЗакрытьГруппуСчетовБУ(СтруктураШапкиДокумента,ПроводкиБУ,ПланыСчетов.Хозрасчетный.НайтиПоКоду("9500"),ПланыСчетов.Хозрасчетный.НайтиПоКоду("9910"));
	КонецЕсли;	
	Если Закрыть96счет Тогда
		ЗакрытьГруппуСчетовБУ(СтруктураШапкиДокумента,ПроводкиБУ,ПланыСчетов.Хозрасчетный.НайтиПоКоду("9600"),ПланыСчетов.Хозрасчетный.НайтиПоКоду("9910"));
	КонецЕсли;	
	Если Закрыть97счет Тогда
		ЗакрытьГруппуСчетовБУ(СтруктураШапкиДокумента,ПроводкиБУ,ПланыСчетов.Хозрасчетный.НайтиПоКоду("9700"),ПланыСчетов.Хозрасчетный.НайтиПоКоду("9910"));
	КонецЕсли;	
	Если Закрыть98счет Тогда
		ЗакрытьГруппуСчетовБУ(СтруктураШапкиДокумента,ПроводкиБУ,ПланыСчетов.Хозрасчетный.НайтиПоКоду("9800"),ПланыСчетов.Хозрасчетный.НайтиПоКоду("9910"));
	КонецЕсли;	
	Если Закрыть99счет Тогда
		ПроводкиБУ.Записать();
		Закрыть99(СтруктураШапкиДокумента,ПроводкиБУ);
	КонецЕсли;	
	ПроводкиБУ.Записать();
	
КонецПроцедуры	
 
Процедура Закрыть99(СтруктураШапкиДокумента,ПроводкиБУ)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаДт,
		|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаОстатка, счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а9900)), , Организация = &Организация) КАК ХозрасчетныйОстатки";

	Запрос.УстановитьПараметр("ДатаОстатка", КонецМесяца(Дата)+1);
 	Запрос.УстановитьПараметр("Организация", Организация);

	Результат = Запрос.Выполнить();

	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СуммаДт<>0 Тогда
			
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Организация = Организация;
			Проводка.Период = Дата;
			
			Проводка.СчетДт = ПланыСчетов.Хозрасчетный.А8710;
			
			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.А9910;
			
			Проводка.Сумма = Выборка.СуммаДт;
			
		КонецЕсли;
		
		Если Выборка.СуммаКт<>0 Тогда
			
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Организация = Организация;
			Проводка.Период = Дата;
			
			Проводка.СчетДт = ПланыСчетов.Хозрасчетный.А9910;
			
			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.А8710;
			
			Проводка.Сумма = Выборка.СуммаКт;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры	

Процедура СписатьОтклонениеПоСебестоимостиГотовойПродукции()
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК Отклонение
	|ПОМЕСТИТЬ СуммыОтклонений
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаОстатка, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а2840), , Организация = &Организация) КАК ХозрасчетныйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК Остаток,
	|	NULL КАК Реализовано
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаОстатка,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а2800))
	|				И Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а2840),
	|			,
	|			Организация = &Организация) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1,
	|	ХозрасчетныйОбороты.КоличествоОборотКт,
	|	ХозрасчетныйОбороты.КоличествоОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а2800))
	|				И Счет <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а2840),
	|			,
	|			Организация = &Организация,
	|			КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а9100)),
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Остатки.Остаток) КАК Остаток,
	|	СУММА(Остатки.Реализовано) КАК Реализовано,
	|	Остатки.Номенклатура
	|ПОМЕСТИТЬ ОстаткиСгруппированные
	|ИЗ
	|	Остатки КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиСгруппированные.Номенклатура,
	|	ОстаткиСгруппированные.Остаток,
	|	ОстаткиСгруппированные.Реализовано,
	|	СуммыОтклонений.Отклонение,
	|	ВЫБОР
	|		КОГДА ОстаткиСгруппированные.Остаток <> 0
	|			ТОГДА ЕСТЬNULL(СуммыОтклонений.Отклонение, 0) / ОстаткиСгруппированные.Остаток * ОстаткиСгруппированные.Реализовано
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОтклонениеКСписанию
	|ИЗ
	|	ОстаткиСгруппированные КАК ОстаткиСгруппированные
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыОтклонений КАК СуммыОтклонений
	|		ПО ОстаткиСгруппированные.Номенклатура = СуммыОтклонений.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СуммыОтклонений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Остатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиСгруппированные";
	
	Запрос.УстановитьПараметр("ДатаОстатка",КонецМесяца(Дата)+1);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация",Организация);
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	Счет9110=ПланыСчетов.Хозрасчетный.НайтиПоКоду("9110");
	Счет2840=ПланыСчетов.Хозрасчетный.НайтиПоКоду("2840");
	
	Пока Выборка.Следующий() Цикл
		
		Если не ЗначениеЗаполнено(Выборка.ОтклонениеКСписанию) Тогда
			
			Продолжить;
			
		КонецЕсли;	
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Списание отклонений по себестомости г/п";
		
		Проводка.СчетДт      = Счет9110;
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Выборка.Номенклатура);
		
		Проводка.СчетКт = Счет2840;
		УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Выборка.Номенклатура);
		
		Проводка.Сумма = Выборка.ОтклонениеКСписанию;
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура СформироватьПроводкиПоРознице()
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Склад,
	|	СУММА(ВложенныйЗапрос.ОстатокНаценка) КАК ОстатокНаценка,
	|	СУММА(ВложенныйЗапрос.ОстатокТовар) КАК ОстатокТовар,
	|	СУММА(ВложенныйЗапрос.Реализовано) КАК Реализовано
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОстатки.Субконто1 КАК Склад,
	|		СУММА(ВЫБОР
	|				КОГДА ХозрасчетныйОстатки.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.А2980)
	|					ТОГДА -ХозрасчетныйОстатки.СуммаОстатокДт
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ОстатокНаценка,
	|		СУММА(ВЫБОР
	|				КОГДА ХозрасчетныйОстатки.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.А2920)
	|					ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ОстатокТовар,
	|		0 КАК Реализовано
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&ДатаОстатка,
	|				Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.А2920)
	|					ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.А2980),
	|				,
	|				Организация = &Организация) КАК ХозрасчетныйОстатки
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ХозрасчетныйОстатки.Субконто1
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОбороты.Субконто1,
	|		0,
	|		0,
	|		ХозрасчетныйОбороты.СуммаОборотКт
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а9020), , Организация = &Организация, , ) КАК ХозрасчетныйОбороты) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Склад";
	
	Запрос.УстановитьПараметр("ДатаОстатка",КонецМесяца(Дата)+1);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация",Организация);
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	Счет9120=ПланыСчетов.Хозрасчетный.НайтиПоКоду("9120");
	Счет2920=ПланыСчетов.Хозрасчетный.НайтиПоКоду("2920");
	Счет2980=ПланыСчетов.Хозрасчетный.НайтиПоКоду("2980");
	
	Пока Выборка.Следующий() Цикл
		
		Наценка=0;
		
		Если Выборка.ОстатокТовар<>0 Тогда
			
			Наценка=окр(Выборка.Реализовано*Выборка.ОстатокНаценка/Выборка.ОстатокТовар,2);	
			
		КонецЕсли;	
		
		Если Наценка=0 Тогда
			Продолжить;
		КонецЕсли;	
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Списание себестоимости";
		
		Проводка.СчетДт      = Счет9120;
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Выборка.Склад);
		
		Проводка.СчетКт = Счет2920;
		УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Выборка.Склад);
		
		Проводка.Сумма = Выборка.Реализовано-Наценка;
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Списание наценки";
		
		Проводка.СчетДт      = Счет2980;
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Выборка.Склад);
		
		Проводка.СчетКт = Счет2920;
		УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Выборка.Склад);
		
		Проводка.Сумма = Наценка;
		
	КонецЦикла;	
	
КонецПроцедуры	
  
Процедура ЗакрытьГруппуСчетовБУ(СтруктураШапкиДокумента,ПроводкиБУ,СчетИсточник,СчетПриемник)
	
	Выборка=ПланыСчетов.Хозрасчетный.Выбрать(СчетИсточник);
	Пока Выборка.Следующий() Цикл
		
		ЭтоСчетГруппа=Ложь;
		Выборка2=ПланыСчетов.Хозрасчетный.Выбрать(Выборка.Ссылка);
		Пока Выборка2.Следующий() Цикл
			ЭтоСчетГруппа=Истина;
		КонецЦикла; 
		Если ЭтоСчетГруппа Тогда
			ЗакрытьГруппуСчетовБУ(СтруктураШапкиДокумента,ПроводкиБУ,Выборка.Ссылка,СчетПриемник);
		Иначе	
			ЗакрытьСчет(СтруктураШапкиДокумента,ПроводкиБУ,Выборка.Ссылка,СчетПриемник,КонецМесяца(Дата)+1,КонецМесяца(Дата));
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

Процедура Закрыть31Счет(Проводки)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновнойОстатки.Счет КАК Счет,
	|	ОсновнойОстатки.Субконто1 КАК Субконто1,
	|	СУММА(ОсновнойОстатки.СуммаОстатокДт) КАК СуммаДт,
	|	СУММА(ОсновнойОстатки.СуммаОстатокКт) КАК СуммаКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ОсновнойОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновнойОстатки.Счет,
	|	ОсновнойОстатки.Субконто1
	|ИТОГИ
	|	СУММА(СуммаДт),
	|	СУММА(СуммаКт)
	|ПО
	|	Счет,
	|	Субконто1";

	Запрос.УстановитьПараметр("Дата",КонецМесяца(Дата)+1);
	Запрос.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.НайтиПоКоду("3100"));
	Запрос.УстановитьПараметр("Организация",Организация);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаСчет=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСчет.Следующий() Цикл
		ВыборкаСубконто1=ВыборкаСчет.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСубконто1.Следующий() Цикл
			
			Если Не ТипЗнч(ВыборкаСубконто1.Субконто1) = Тип("СправочникСсылка.РасходыБудущихПериодов") Тогда
				Продолжить;
			КонецЕсли; 
			
			Если ЗначениеНеЗаполнено(ВыборкаСубконто1.Субконто1) Тогда
				Продолжить;
			КонецЕсли; 
			
			Если ВыборкаСубконто1.Субконто1.ДатаНачалаСписания<>дата(1,1,1) Тогда
				Если ВыборкаСубконто1.Субконто1.ДатаНачалаСписания>КонецМесяца(Дата) Тогда
					Продолжить;
				КонецЕсли; 
			КонецЕсли;        			
			
			Если ЗначениеНеЗаполнено(ВыборкаСубконто1.Субконто1.СчетБУ) Тогда
				Сообщить("Не задан счет затрат для расхода """+ВыборкаСубконто1.Субконто1.Наименование+""" (Счет "+ВыборкаСубконто1.Счет.Код+") ",СтатусСообщения.Важное);
				Продолжить;
			КонецЕсли; 
			
			СуммаВПроводку=0;
			
			Если ВыборкаСубконто1.Субконто1.СпособСписания=Перечисления.СпособыСписанияРасходовБП.Суммой Тогда
				СуммаВПроводку= Мин(ВыборкаСубконто1.СуммаДт - ВыборкаСубконто1.СуммаКт,ВыборкаСубконто1.Субконто1.Сумма);
			Иначе
				
				ДатаОкончанияСписания=ВыборкаСубконто1.Субконто1.ДатаОкончанияСписания;
				
				КоличествоМесяцев= 1+Год(ДатаОкончанияСписания)*100+Месяц(ДатаОкончанияСписания)-Год(Дата)*100-Месяц(Дата);
				Если КоличествоМесяцев>0 Тогда
					СуммаВПроводку= окр((ВыборкаСубконто1.СуммаДт - ВыборкаСубконто1.СуммаКт)/КоличествоМесяцев,2);
				КонецЕсли; 
				                                                                              
			КонецЕсли; 
			
			Если СуммаВПроводку<=0 Тогда
				Продолжить;
			КонецЕсли; 
			
			Проводка = Проводки.Добавить();
			Проводка.Организация = Организация;
			Проводка.Период = Дата;
			Проводка.Активность = Истина;
			Проводка.СчетДт = ВыборкаСубконто1.Субконто1.СчетБУ;
			УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, ВыборкаСубконто1.Субконто1.СубконтоБУ1);
			УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, ВыборкаСубконто1.Субконто1.СубконтоБУ2);
			УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, ВыборкаСубконто1.Субконто1.СубконтоБУ3);
			
			Проводка.СчетКт = ВыборкаСубконто1.Счет;
			УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, ВыборкаСубконто1.Субконто1);
			Проводка.Сумма = СуммаВПроводку;
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры
 
Процедура СписаниеНакопленнойКурсовойРазницы(Проводки)
	
	// СПИСАНИЕ ОТРИЦАТЕЛЬНОЙ КУРСОВОЙ РАЗНИЦЫ
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт) КАК СНД,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт) КАК СКД,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотДт) КАК ДО,
	               |	ХозрасчетныйОстаткиИОбороты1.Счет КАК КорСчет,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаНачальныйОстатокКт) КАК КорСНК,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаКонечныйОстатокКт) КАК КорСКК,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаОборотДт) КАК КорДО,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаОборотКт) КАК КорКО,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаНачальныйОстатокДт) КАК КорСНД,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаКонечныйОстатокДт) КАК КорСКД,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаНачальныйОстатокКт) КАК КорСНК_С,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаКонечныйОстатокКт) КАК КорСКК_С,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаОборотДт) КАК КорДО_С,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаОборотКт) КАК КорКО_С,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаНачальныйОстатокДт) КАК КорСНД_С,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаКонечныйОстатокДт) КАК КорСКД_С,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Контрагент,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Договор,
	               |	ХозрасчетныйОстаткиИОбороты1.Валюта КАК Валюта
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НП, &КП, , , Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.А3291), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НП, &КП, , , , , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты1
	               |		ПО ХозрасчетныйОстаткиИОбороты.Субконто3 = ХозрасчетныйОстаткиИОбороты1.Счет
	               |			И ХозрасчетныйОстаткиИОбороты.Субконто4 = ХозрасчетныйОстаткиИОбороты1.Валюта
	               |			И ХозрасчетныйОстаткиИОбороты.Субконто1 = ХозрасчетныйОстаткиИОбороты1.Субконто1
	               |			И ХозрасчетныйОстаткиИОбороты.Субконто2 = ХозрасчетныйОстаткиИОбороты1.Субконто2
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОстаткиИОбороты.Счет,
	               |	ХозрасчетныйОстаткиИОбороты1.Счет,
	               |	ХозрасчетныйОстаткиИОбороты1.Валюта,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто2";
	
	Запрос.УстановитьПараметр("НП", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КП", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.КорСчет = Null Тогда
			Продолжить;
		КонецЕсли; 
		
		Если Выборка.КорСчет.Вид = ВидСчета.Активный Тогда
			Если (Выборка.КорСКД = 0) Тогда
				СуммаСписания = Выборка.СКД;
			ИначеЕсли (Выборка.КорСНД+Выборка.КорДО)=0 Тогда
				СуммаСписания=0;
			Иначе
				СуммаСписания = (Выборка.СНД+Выборка.ДО)*Выборка.КорКО/(Выборка.КорСНД+Выборка.КорДО);
			КонецЕсли; 
		Иначе	
			Если (Выборка.КорСКК = 0) Тогда 
				СуммаСписания = Выборка.СКД;
			ИначеЕсли (Выборка.КорСНК+Выборка.КорКО)=0 Тогда
				СуммаСписания=0;
			Иначе
				СуммаСписания = (Выборка.СНД+Выборка.ДО)*Выборка.КорДО/(Выборка.КорСНК+Выборка.КорКО);
			КонецЕсли; 
		КонецЕсли; 
		
		СуммаСписания=мин(СуммаСписания,Выборка.СНД+Выборка.ДО);
		
		Если СуммаСписания = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		Проводка = Проводки.Добавить();
		Проводка.Организация = Организация;
		Проводка.Период = Дата;
		Проводка.Активность = Истина;
		
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.А9620;
		
		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.А3291;
		УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Выборка.Контрагент);
		УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, Выборка.Договор);
		УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, Выборка.КорСчет);
		УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 4, Выборка.Валюта);
		
		Проводка.Сумма = СуммаСписания;
	КонецЦикла;	 
	
	// СПИСАНИЕ ПОЛОЖИТЕЛЬНОЙ КУРСОВОЙ РАЗНИЦЫ
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Счет,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокКт) КАК СНК,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокКт) КАК СКК,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты.СуммаОборотКт) КАК КО,
	               |	ХозрасчетныйОстаткиИОбороты1.Счет КАК КорСчет,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаНачальныйОстатокДт) КАК КорСНД,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаКонечныйОстатокДт) КАК КорСКД,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаОборотДт) КАК КорДО,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаОборотКт) КАК КорКО,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаНачальныйОстатокКт) КАК КорСНК,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.ВалютнаяСуммаКонечныйОстатокКт) КАК КорСКК,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаНачальныйОстатокДт) КАК КорСНД_С,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаКонечныйОстатокДт) КАК КорСКД_С,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаОборотДт) КАК КорДО_С,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаОборотКт) КАК КорКО_С,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаНачальныйОстатокКт) КАК КорСНК_С,
	               |	СУММА(ХозрасчетныйОстаткиИОбороты1.СуммаКонечныйОстатокКт) КАК КорСКК_С,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Контрагент,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Договор,
	               |	ХозрасчетныйОстаткиИОбороты1.Валюта КАК Валюта
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НП, &КП, , , Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.А6291), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&НП, &КП, , , , , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты1
	               |		ПО ХозрасчетныйОстаткиИОбороты.Субконто3 = ХозрасчетныйОстаткиИОбороты1.Счет
	               |			И ХозрасчетныйОстаткиИОбороты.Субконто4 = ХозрасчетныйОстаткиИОбороты1.Валюта
	               |			И ХозрасчетныйОстаткиИОбороты.Субконто1 = ХозрасчетныйОстаткиИОбороты1.Субконто1
	               |			И ХозрасчетныйОстаткиИОбороты.Субконто2 = ХозрасчетныйОстаткиИОбороты1.Субконто2
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОстаткиИОбороты.Счет,
	               |	ХозрасчетныйОстаткиИОбороты1.Счет,
	               |	ХозрасчетныйОстаткиИОбороты1.Валюта,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто1,
	               |	ХозрасчетныйОстаткиИОбороты.Субконто2";
	
	Запрос.УстановитьПараметр("НП", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КП", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.КорСчет = Null Тогда
			Продолжить;
		КонецЕсли; 
		
		Если Выборка.КорСчет.Вид = ВидСчета.Активный Тогда
			Если (Выборка.КорСКД = 0) Тогда
				СуммаСписания = Выборка.СКК;
			ИначеЕсли (Выборка.КорСНД+Выборка.КорДО)=0 Тогда
				СуммаСписания=0;
			Иначе
				СуммаСписания = (Выборка.СНК+Выборка.КО)*Выборка.КорКО/(Выборка.КорСНД+Выборка.КорДО);
			КонецЕсли; 
		Иначе	
			Если (Выборка.КорСКК = 0) Тогда 
				СуммаСписания = Выборка.СКК;
			ИначеЕсли (Выборка.КорСНК+Выборка.КорКО)=0 Тогда
				СуммаСписания=0;
			Иначе
				СуммаСписания = (Выборка.СНК+Выборка.КО)*Выборка.КорДО/(Выборка.КорСНК+Выборка.КорКО);
			КонецЕсли; 
		КонецЕсли; 
		
		СуммаСписания=мин(СуммаСписания,Выборка.СНК+Выборка.КО);
		
		Если СуммаСписания = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		Проводка = Проводки.Добавить();
		Проводка.Организация = Организация;
		Проводка.Период = Дата;
		Проводка.Активность = Истина;
		
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.А6291;
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Выборка.Контрагент);
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, Выборка.Договор);
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, Выборка.КорСчет);
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 4, Выборка.Валюта);
		
		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.А9540;
		
		Проводка.Сумма = СуммаСписания;
	КонецЦикла;	 
	
КонецПроцедуры

Процедура ЗаписатьСчетаПоДокументу()
	
	СимволЗапятой = "";
	
	СчетаПоДокументу = "";
	
	Если Закрыть20счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "20";
		СимволЗапятой = ", ";
	КонецЕсли; 
	
	//Если Закрыть31счет Тогда
	//	СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "31";
	//	СимволЗапятой = ", ";
	//КонецЕсли; 
	
	Если Закрыть92счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "92";
		СимволЗапятой = ", ";
	КонецЕсли; 
	
	Если Закрыть90счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "90";
		СимволЗапятой = ", ";
	КонецЕсли; 
	
	Если Закрыть91счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "91";
		СимволЗапятой = ", ";
	КонецЕсли; 

	Если Закрыть93счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "93";
		СимволЗапятой = ", ";
	КонецЕсли; 
	
	Если Закрыть94счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "94";
		СимволЗапятой = ", ";
	КонецЕсли; 
	
	Если Закрыть95счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "95";
		СимволЗапятой = ", ";
	КонецЕсли; 
	
	Если Закрыть96счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "96";
		СимволЗапятой = ", ";
	КонецЕсли; 
	
	Если Закрыть97счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "97";
		СимволЗапятой = ", ";
	КонецЕсли; 
	
	Если Закрыть98счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "98";
		СимволЗапятой = ", ";
	КонецЕсли; 
	
	Если Закрыть99счет Тогда
		СчетаПоДокументу = СчетаПоДокументу + СимволЗапятой + "99";
		СимволЗапятой = ", ";
	КонецЕсли; 
	
КонецПроцедуры
