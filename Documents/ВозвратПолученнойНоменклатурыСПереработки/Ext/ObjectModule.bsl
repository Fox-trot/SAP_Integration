Перем ТаблицаЗачетаНДС;

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры
 
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ПриемныйАкт","Акт приема-передачи");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	
	//СуммаПоДокументу= Номенклатура.Итог("Сумма")+Номенклатура.Итог("СуммаНДС");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	//ЗаписатьЦеныВСправочник();
	
	ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента);

	
КонецПроцедуры

Функция ПечатьПриемныйАкт()
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ПриемныйАкт");
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Организация = Организация;
	Область.Параметры.ИННПереработчика = Организация.ИНН;
	АдресПереработчика = ПолучитьАдресИзКонтактнойИнформации(Организация,"Фактический");
	Область.Параметры.АдресПереработчика = АдресПереработчика;
	Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Дата = Формат(Дата,"ДЛФ=DD");
	//Область.Параметры.ПриходныйДокумент = ПриходныйДокумент;
	//Область.Параметры.Доверенность = "№ "+ПолучитьНомерНаПечать(Доверенность.Ссылка)+" от "+формат(Доверенность.Дата,"ДФ=dd.MM.yyyy");
	//Область.Параметры.Через = ФИОСотрудника(Доверенность.Сотрудник,Дата);
	Область.Параметры.Поставщик = Поставщик;
	Область.Параметры.ИННПоставщика = Поставщик.ИНН;
	АдресПоставщика = ПолучитьАдресИзКонтактнойИнформации(Поставщик,"Фактический");
	Область.Параметры.АдресПоставщика = АдресПоставщика;
	//Область.Параметры.ДоговорПоставщика = ДоговорПоставщика;
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка");
	ОбластьИтого = Макет.ПолучитьОбласть("Итог");
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ВозвратПолученнойНоменклатурыСПереработкиПродукцияПереработки.Продукция КАК Номенклатура,
	|	ВозвратПолученнойНоменклатурыСПереработкиПродукцияПереработки.Количество КАК Количество,
	|	ВозвратПолученнойНоменклатурыСПереработкиПродукцияПереработки.Сумма КАК Сумма,
	|	ВозвратПолученнойНоменклатурыСПереработкиПродукцияПереработки.Цена КАК Цена,
	|	ВозвратПолученнойНоменклатурыСПереработкиПродукцияПереработки.НомерСтроки КАК НомерСтроки,
	|	ВозвратПолученнойНоменклатурыСПереработкиПродукцияПереработки.Продукция.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВозвратПолученнойНоменклатурыСПереработкиПродукцияПереработки.Продукция.Код КАК Код
	|ИЗ
	|	Документ.ВозвратПолученнойНоменклатурыСПереработки.ПродукцияПереработки КАК ВозвратПолученнойНоменклатурыСПереработкиПродукцияПереработки
	|ГДЕ
	|	ВозвратПолученнойНоменклатурыСПереработкиПродукцияПереработки.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	ВыборкаОбщие=Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщие.Следующий();
	ОбластьИтого.Параметры.Заполнить(ВыборкаОбщие);	
	ОбластьИтого.Параметры.Должность=ДанныеФизЛица(Организация,Склад.МОЛ.ФизическоеЛицо,Дата).Представление;
	
	ОбластьИтого.Параметры.Завскладом=ДанныеФизЛица(Организация,Склад.МОЛ.ФизическоеЛицо,Дата).Представление;
	Выборка=ВыборкаОбщие.Выбрать();
	Пока Выборка.Следующий() Цикл
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.Цена = Выборка.цена;
		ТабДок.Вывести(Область);
	КонецЦикла; 
	
	ТабДок.Вывести(ОбластьИтого);
	
	ТабДок.ФиксацияСверху=0;
	ТабДок.ФиксацияСлева=0;
	ТабДок.ЭкземпляровНаСтранице=0;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	Возврат ТабДок;
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	
	Если ИмяМакета="ПриемныйАкт" Тогда
		ТабДокумент = ПечатьПриемныйАкт();
	//ИначеЕсли ИмяМакета="РасчетСтоимостиНоменклатуры" Тогда
	//	ТабДокумент = ПечатьРасчетаСтоимостиНоменклатуры();
	КонецЕсли; 
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Приемный Акт");
	
КонецПроцедуры // Печать()

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	//Проверяем заполнение шапки
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("Склад","Не выбран склад.");
	
	СтруктураОбязательныхПолей.Вставить("Поставщик","Не выбран давалец.");
	СтруктураОбязательныхПолей.Вставить("ДоговорПоставщика","Не указан договор переботки.");
	
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	//Проверяем заполнение табличной части 
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Номенклатура", СтруктураПолей, Отказ, Заголовок);
	
	//Проверяем заполнение табличной части 
	
	СтруктураПолей = Новый Структура();
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "ВозвратнаяНоменклатура", СтруктураПолей, Отказ, Заголовок);
	
	
КонецПроцедуры

Функция СформироватьОписаниеПервичногоДокумента(ПервичныйДокумент)
	
	ПервичныйДокументСтр=сокрлп(ПервичныйДокумент);	
    Если лев(ПервичныйДокументСтр,1)="№" или ЭтоЦифра(лев(ПервичныйДокументСтр,1)) Тогда
		Возврат "Сч.фак. "+ПервичныйДокументСтр;	
	Иначе
		Возврат ПервичныйДокументСтр;
	КонецЕсли; 
	
КонецФункции // ()

Процедура ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	//ТаблицаЗачетаНДС=СоздатьТаблицуДляУчетаНДС();
	СчетПрибыли=ПланыСчетов.Хозрасчетный.НайтиПоКоду("9390");
	ПроводкиБУ = Движения.Хозрасчетный;
	
	Для Каждого СтрокаНоменклатуры Из Номенклатура Цикл
		Если НЕ СтрокаНоменклатуры.СчетУчетаБУ.Забалансовый тогда
			Сообщить("Счет учета должен быть - 003 Материалы, принятые в переработку");
			Продолжить
		КонецЕсли;
		//Основная стоимость
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Списание стоимости полученного давальческого сырья после переработки";     
		
		Проводка.СчетКт      = СтрокаНоменклатуры.СчетУчетаБУ;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Поставщик);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ДоговорПоставщика);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаНоменклатуры.Номенклатура);
		
		Проводка.КоличествоКт = СтрокаНоменклатуры.Количество;
		Проводка.Сумма = СтрокаНоменклатуры.Сумма;
		
		
		//Движение по регистру
		
		Движение = Движения.УчетДавальческогоСырья.ДобавитьРасход();
		
		Движение.Период = Дата;
		Движение.Организация= Организация;
		Движение.Давалец = Поставщик;
		Движение.ДоговорДавальца = ДоговорПоставщика;
		Движение.ДавальческоеСырье = СтрокаНоменклатуры.Номенклатура;
		Движение.Количество = СтрокаНоменклатуры.Количество;
		Движение.Сумма = СтрокаНоменклатуры.Сумма;
		Движение.Содержание = "Списание стоимости полученного давальческого сырья после переработки";

		
	КонецЦикла; 
	
	Для Каждого СтрокаВозвратнойНоменклатуры Из ВозвратнаяНоменклатура Цикл
		Если НЕ СтрокаВозвратнойНоменклатуры.СчетУчетаБУ.Забалансовый тогда
			Сообщить("Счет учета должен быть - 003 Материалы, принятые в переработку");
			Продолжить
		КонецЕсли;
		//Основная стоимость
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Возврат неиспользованного давальческого сырья";     
		
		Проводка.СчетКт      = СтрокаВозвратнойНоменклатуры.СчетУчетаБУ;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Поставщик);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ДоговорПоставщика);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаВозвратнойНоменклатуры.Номенклатура);
		
		Проводка.КоличествоКт = СтрокаВозвратнойНоменклатуры.Количество;
		Проводка.Сумма = СтрокаВозвратнойНоменклатуры.Сумма;
		
		//Движение по регистру
		Движение = Движения.УчетДавальческогоСырья.ДобавитьРасход();
		
		Движение.Период = Дата;
		Движение.Организация= Организация;
		Движение.Давалец = Поставщик;
		Движение.ДоговорДавальца = ДоговорПоставщика;
		Движение.ДавальческоеСырье = СтрокаВозвратнойНоменклатуры.Номенклатура;
		Движение.Количество = СтрокаВозвратнойНоменклатуры.Количество;
		Движение.Сумма = СтрокаВозвратнойНоменклатуры.Сумма;
		Движение.Содержание = "Возврат неиспользованного давальческого сырья";
		
		
	КонецЦикла; 
	
	
	Для Каждого СтрокаПродукция Из ПродукцияПереработки Цикл
		
		//Основная стоимость
		Движение=Движения.ПродукцияПереработкиДавальческогоСырья.Добавить();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Давалец = Поставщик;
		Движение.ДоговорДавальца = ДоговорПоставщика;
		Движение.ПродукцияПереработки = СтрокаПродукция.Продукция;
		Движение.Количество = СтрокаПродукция.Количество;
		Движение.Сумма = СтрокаПродукция.Сумма;
		
	КонецЦикла; 
	
	Для Каждого СтрокаВозвратаОтходов Из ВозвратОтходов Цикл
		
		Если  СтрокаВозвратаОтходов.ОстающиесяУПереработчика тогда
			
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "Приход отходов остающихся у переработчика";     
			
			Проводка.СчетДт      = СтрокаВозвратаОтходов.СчетУчетаБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаВозвратаОтходов.Номенклатура);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
			Проводка.КоличествоДт = СтрокаВозвратаОтходов.Количество;
			
			Проводка.СчетКт      = СчетПрибыли;
			Проводка.Сумма = СтрокаВозвратаОтходов.Сумма;
		КонецЕсли;
		//Основная стоимость
		
		//Движение по регистру
		Движение = Движения.УчетВозвратныхОтходовДавальческогоСырья.Добавить();
		
		Движение.Период = Дата;
		Движение.Организация= Организация;
		Движение.Давалец = Поставщик;
		Движение.ДоговорДавальца = ДоговорПоставщика;
		Движение.ДавальческоеСырье = СтрокаВозвратаОтходов.Номенклатура;
		Если СтрокаВозвратаОтходов.ОстающиесяУПереработчика тогда
			Движение.Количество = СтрокаВозвратаОтходов.Количество;
			Движение.Содержание = "Приход отходов остающихся у переработчика";
		Иначе
			Движение.КоличествоВозвратных = СтрокаВозвратаОтходов.Количество;
			Движение.Содержание = "Возврат отходов";
			
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры
