
Перем Месяц;
Перем СведенияОСотрудниках;
Перем КоличествоСтрокНаСтранице;
Перем ОсталосьСтрокНаСтранице;
Перем Макет;
Перем Руководители;


Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	//Возврат Новый Структура("ПлатежнаяВедомость,РасчетноПлатежнаяВедомость","Платежная ведомость","Расчетно - платежная ведомость");
	Возврат Новый Структура("ПлатежнаяВедомость, Реестр","Платежная ведомость", "Реестр");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Выплачено=0;
	
	Для Каждого СтрокаСотрудники из Сотрудники  Цикл
		Выплачено=Выплачено+СтрокаСотрудники.СуммаКВыплате;
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ДвиженияПоРегистрам(Режим, Отказ, Заголовок,СтруктураШапкиДокумента);
	
КонецПроцедуры

Процедура	ДвиженияПоРегистрам(Режим, Отказ, Заголовок,СтруктураШапкиДокумента);
	
	Для каждого СтрокаСотрудники Из Сотрудники Цикл
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "";     
		
		Если СтрокаСотрудники.Счет.Пустая() Тогда
			Проводка.СчетДт      = ПланыСчетов.Хозрасчетный.НайтиПоКоду("6970");
		Иначе
			Проводка.СчетДт      = СтрокаСотрудники.Счет;
			
		КонецЕсли;                                      		
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаСотрудники.Сотрудник);
		
		Проводка.СчетКт      = Счет;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Субконто1);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Субконто2);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,Субконто3);
		Если Валютная Тогда
			Если СтрокаСотрудники.Счет.Валютный тогда
				Проводка.ВалютаДт=Валюта;
				Проводка.ВалютнаяСуммаДт=СтрокаСотрудники.СуммаКВыплате;
			КонецЕсли;
			Если Счет.Валютный тогда
				
				Проводка.ВалютаКт=Валюта;
				Проводка.ВалютнаяСуммаКт=СтрокаСотрудники.СуммаКВыплате;
			КонецЕсли;
			Проводка.Сумма=СтрокаСотрудники.СуммаКВыплате*ПолучитьКурсВалюты(Валюта,КонецДня(Дата)).Курс;
		Иначе	
			Проводка.Сумма=СтрокаСотрудники.СуммаКВыплате;
		КонецЕсли;	
		
	КонецЦикла; 
	
КонецПроцедуры

Функция СумТийин(Сумма)
	
	Тийин=Сумма-Цел(Сумма);
	Если Тийин=0 Тогда
		Возврат Строка(Цел(Сумма))+" сум 00 т.";
	Иначе	
		Возврат Строка(Цел(Сумма))+" сум "+Прав(Строка(Тийин),2)+" т.";
	КонецЕсли; 
	
КонецФункции	

Функция ПечатьПлатежнаяВедомость(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
	
	Область = Макет.ПолучитьОбласть("ТитульныйЛист");
	Область.Параметры.Организация = Организация;
	Область.Параметры.ДатаЧисло = Прав("00"+День(Дата),2);
	Область.Параметры.ДатаМесяц = Прав("00"+Месяц(Дата),2);
	Область.Параметры.ДатаГод = Прав(Год(Дата),2);
	Область.Параметры.СтруктурноеПодразделение= Подразделение;
	Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Месяц = Формат(Дата,"ДФ='MMMM yyyy'")+" г.";
	Если Валютная тогда
		//Область.Параметры.ОбщаяСуммаКВыплатеПрописью = СформироватьСуммуПрописью(Сотрудники.Итог("СуммаКВыплате"),?(Валютная,Валюта,Константы.ВалютаРегламентированногоУчета.Получить()));
		Область.Параметры.ОбщаяСуммаКВыплате = ?(Валютная,Строка(Сотрудники.Итог("СуммаКВыплате"))+"- (" +СформироватьСуммуПрописью(Сотрудники.Итог("СуммаКВыплате"),Валюта)+" )",СумТийин(Сотрудники.Итог("СуммаКВыплате")));
	Иначе
		Область.Параметры.ОбщаяСуммаКВыплатеПрописью = СформироватьСуммуПрописью(Сотрудники.Итог("СуммаКВыплате"),Константы.ВалютаРегламентированногоУчета.Получить());
		Область.Параметры.ОбщаяСуммаКВыплате = СумТийин(Сотрудники.Итог("СуммаКВыплате"));
		
	КонецЕсли;
	Область.Параметры.ВидВыплаты = "Командировочные расходы";
	Область.Параметры.Заполнить(Руководители);
	ТабДок.Вывести(Область);
	
	//ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	НомерСтраницы=1;
	ШапкаТаблицы=Макет.ПолучитьОбласть("Шапка");
	ШапкаТаблицы.Параметры.НомерСтраницы = НомерСтраницы;
	ТабДок.Вывести(ШапкаТаблицы);

	ИтогПоЛисту=Макет.ПолучитьОбласть("ИтогПоЛисту");
	
	КоличествоСтрокНаЛисте=20;
	ТекущаяСтрока=0;
	СтрокаТаблицы=Макет.ПолучитьОбласть("Строка");
	
	СуммаКВыплатеПоЛисту=0;
	
	Для Каждого СтрокаСотрудники из Сотрудники Цикл
		
		ТекущаяСтрока=ТекущаяСтрока+1;
		
		Если ТекущаяСтрока>КоличествоСтрокНаЛисте Тогда
			ИтогПоЛисту.Параметры.СуммаКВыплатеПоЛисту = СуммаКВыплатеПоЛисту;
			ТабДок.Вывести(ИтогПоЛисту);
			
			КоличествоСтрокНаЛисте=34;
			НомерСтраницы=НомерСтраницы+1;
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ШапкаТаблицы.Параметры.НомерСтраницы = НомерСтраницы;
			ТабДок.Вывести(ШапкаТаблицы);
			ТекущаяСтрока=1;
			СуммаКВыплатеПоЛисту=0;
		КонецЕсли;
		
		СуммаКВыплатеПоЛисту=СуммаКВыплатеПоЛисту+СтрокаСотрудники.СуммаКВыплате;
		СтрокаТаблицы.Параметры.Заполнить(СтрокаСотрудники);		
		ТабДок.Вывести(СтрокаТаблицы);
		
	КонецЦикла; 
	
	ИтогПоЛисту.Параметры.СуммаКВыплатеПоЛисту = СуммаКВыплатеПоЛисту;
	ТабДок.Вывести(ИтогПоЛисту);
			
	ПодвалТаблицы=Макет.ПолучитьОбласть("Подвал");
	ПодвалТаблицы.Параметры.НомерСтраницы = НомерСтраницы;
	ПодвалТаблицы.Параметры.СуммаКВыплате = Сотрудники.Итог("СуммаКВыплате");
	ТабДок.Вывести(ПодвалТаблицы);
	
	Область = Макет.ПолучитьОбласть("ИтогВедомости");
	ТабДок.Вывести(Область);
	
	ТабДок.ФиксацияСверху=0;
	ТабДок.ФиксацияСлева=0;
	ТабДок.ЭкземпляровНаСтранице=0;
	ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

Функция ПечатьРеестр(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтог = Макет.ПолучитьОбласть("Итог");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПлатежнаяВедомостьКомандировочныеСотрудники.Сотрудник КАК ФИО,
	               |	ПлатежнаяВедомостьКомандировочныеСотрудники.СуммаКВыплате КАК Сумма,
	               |	ПлатежнаяВедомостьКомандировочныеСотрудники.Сотрудник.ФизическоеЛицо.НомерПластКарточки КАК НомерПластКарточки,
	               |	ПлатежнаяВедомостьКомандировочныеСотрудники.Сотрудник.ФизическоеЛицо.БанкКодПластКарточки КАК НомерСчетаПластКарточки,
	               |	ПлатежнаяВедомостьКомандировочныеСотрудники.Ссылка.Дата,
	               |	ПлатежнаяВедомостьКомандировочныеСотрудники.Сотрудник.Код КАК НомерИН
	               |ИЗ
	               |	Документ.ПлатежнаяВедомостьКомандировочные.Сотрудники КАК ПлатежнаяВедомостьКомандировочныеСотрудники
	               |ГДЕ
	               |	ПлатежнаяВедомостьКомандировочныеСотрудники.Ссылка = &Ведомость
	               |ИТОГИ
	               |	СУММА(Сумма)
	               |ПО
	               |	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Ведомость", Ссылка);
	
	Результат = Запрос.Выполнить();
	
	ОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОбщийИтог.Следующий();
	
	Выборка = ОбщийИтог.Выбрать();
	
	ОбластьЗаголовок.Параметры.ОсновнаяОрганизация = ОсновнаяОрганизация;
	ОбластьЗаголовок.Параметры.Период = Формат(Дата, "ДФ='MMMM yyyy'");
	ОбластьЗаголовок.Параметры.Подразделение = Подразделение;
	
	ТабДок.Вывести(ОбластьЗаголовок);
	ТабДок.Вывести(ОбластьШапка);
	
	нпп = 0;
	Пока Выборка.Следующий() Цикл
		нпп = нпп + 1;
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		ОбластьСтрока.Параметры.Дата = Формат(Выборка.Дата, "ДФ=dd.MM.yyyy");
		ОбластьСтрока.Параметры.нпп = нпп;
		ОбластьСтрока.Параметры.НомерПластКарточки = Выборка.НомерПластКарточки;
		ОбластьСтрока.Параметры.НомерСчетаПластКарточки = Выборка.НомерСчетаПластКарточки;
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтог.Параметры.Заполнить(ОбщийИтог);
	ТабДок.Вывести(ОбластьИтог);
	
	ОбластьПодвал.Параметры.СуммаПрописью = СформироватьСуммуПрописью(ОбщийИтог.Сумма, Константы.ВалютаРегламентированногоУчета.Получить());
	ТабДок.Вывести(ОбластьПодвал);
	
	ТабДок.ФиксацияСверху=0;
	ТабДок.ФиксацияСлева=0;
	ТабДок.ЭкземпляровНаСтранице=0;
	ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции 

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета="ПлатежнаяВедомость" Тогда
		ТабДокумент = ПечатьПлатежнаяВедомость(ИмяМакета);
	ИначеЕсли ИмяМакета="РасчетноПлатежнаяВедомость" Тогда
		ТабДокумент = ПечатьРасчетноПлатежнаяВедомость(ИмяМакета);
	ИначеЕсли ИмяМакета="Реестр" Тогда
		ТабДокумент = ПечатьРеестр(ИмяМакета);
	КонецЕсли; 
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "");
	
КонецПроцедуры // Печать()

Процедура ОбработкаЗаполнения(Основание)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ДополнительныеРасчеты") Тогда
		// Заполнение шапки
		
		Процент=0;
	
		//ВвестиЧисло(Процент,"Введите процент для заполнения",15,2); 

		Подразделение = Основание.Подразделение;
		ПроцентВыплаты=Процент;
		
		Для Каждого СТрока из Основание.Сотрудники Цикл
			
			НоваяСтрока=Сотрудники.Добавить();
			НоваяСтрока.Сотрудник=Строка.Сотрудник;
			
			СуммаКВыплате=окр(Строка.Параметр*Процент/100);
			СуммаКВыплате=окр(СуммаКВыплате/1000)*1000;
			
			НоваяСтрока.СуммаКВыплате=СуммаКВыплате;
			НоваяСтрока.Депонировать=ложь;
			
		КонецЦикла;	
			
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	
КонецПроцедуры

Функция ПечатьРасчетноПлатежнаяВедомость(ИмяМакета)
	
	//Руководители = ОтветственныеЛица(Организация, Дата);	

	//
	//ТабДок = Новый ТабличныйДокумент;
	//Макет = ПолучитьМакет(ИмяМакета);
	//
	//ТабДок.Очистить();
	//
	//ТабДок.АвтоМасштаб=истина;
	//ТабДок.ПолеСверху=20;
	//ТабДок.ПолеСлева=20;
	//ТабДок.ПолеСнизу=20;
	//ТабДок.ПолеСправа=10;
	//
	//
	//КоличествоСтрокНаСтранице=92;
	//ОсталосьСтрокНаСтранице=КоличествоСтрокНаСтранице;
	//
	//
	//
	//МассивСотрудников=Сотрудники.ВыгрузитьКолонку("Сотрудник");
	//СведенияОСотрудниках=СведенияОСотрудниках(МассивСотрудников,Организация,КонецМесяца(МесяцВыплаты));
	//
	//т1=новый ТаблицаЗначений;
	//т1.Колонки.Добавить("Сотрудник");
	//т1.Колонки.Добавить("СведенияОСальдо");
	//т1.Колонки.Добавить("КодВидаРасчета");
	//т1.Колонки.Добавить("ВидРасчета");
	//т1.Колонки.Добавить("Результат");
	//т1.Колонки.Добавить("Дни");
	//т1.Колонки.Добавить("Часы");
	//т1.Колонки.Добавить("Месяц");
	//т1.Колонки.Добавить("Вид");
	//
	//
	//Разделитель = Макет.ПолучитьОбласть("Разделитель|ВертСекция");

	//т2=т1.Скопировать();
	//т3=т1.Скопировать();
	//
	//ТекущаяСтрока=1;
	//
	//Пока ТекущаяСтрока<=Сотрудники.Количество()  Цикл
	//	
	//	Если т1.Количество()=0 Тогда
	//		Отчет(ТабДок,Сотрудники[ТекущаяСтрока-1].Сотрудник,т1,Сотрудники[ТекущаяСтрока-1].СуммаКВыплате);
	//	ИначеЕсли т2.Количество()=0 Тогда
	//		Отчет(ТабДок,Сотрудники[ТекущаяСтрока-1].Сотрудник,т2,Сотрудники[ТекущаяСтрока-1].СуммаКВыплате);
	//	ИначеЕсли т3.Количество()=0 Тогда
	//		Отчет(ТабДок,Сотрудники[ТекущаяСтрока-1].Сотрудник,т3,Сотрудники[ТекущаяСтрока-1].СуммаКВыплате);
	//	КонецЕсли; 
	//	
	//	Если т1.Количество()>0 и т2.Количество()>0 и т3.Количество()>0 Тогда
	//		
	//		т1.Сортировать("Вид");
	//		т2.Сортировать("Вид");
	//		т3.Сортировать("Вид");
	//		
	//		ВывестиТаблицы(ТабДок,т1,т2,т3);
	//		
	//		ТабДок.Вывести(Разделитель);
	//		ТабДок.Присоединить(Разделитель);
	//		ТабДок.Присоединить(Разделитель);
	//		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	//		
	//		т1.Очистить();
	//		т2.Очистить();
	//		т3.Очистить();
	//	КонецЕсли; 
	//	
	//	ТекущаяСтрока=ТекущаяСтрока+1;
	//	
	//КонецЦикла; 
	//
	//Если т1.Количество()>0 или т2.Количество()>0 или т3.Количество()>0 Тогда
	//	ВывестиТаблицы(ТабДок,т1,т2,т3);
	//	
	//	ТабДок.Вывести(Разделитель);
	//	ТабДок.Присоединить(Разделитель);
	//	ТабДок.Присоединить(Разделитель);
	//КонецЕсли;
	//ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	//
	//Возврат ТабДок;
	
КонецФункции

Процедура Отчет(ТабДок,Сотрудник,т,СуммаКВыплате) Экспорт

	//Макет = ПолучитьМакет("РасчетноПлатежнаяВедомость");
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	Начисления.Результат,
	//|	Начисления.ВидРасчета,
	//|	ПРЕДСТАВЛЕНИЕ(Начисления.ВидРасчета),
	//|	Начисления.Дни,
	//|	Начисления.Часы,
	//|	Начисления.ДатаНачала,
	//|	Начисления.КодВидаРасчета КАК КодВидаРасчета,
	//|	Начисления.ВидРасчета.КраткоеНаименование
	//|ИЗ
	//|	РегистрРасчета.Начисления КАК Начисления
	//|ГДЕ
	//|	Начисления.ПериодРегистрации = &ПериодРегистрации
	//|	И Начисления.Активность
	//|	И Начисления.Организация = &Организация
	//|	И Начисления.Сотрудник = &Сотрудник
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Начисления.Сотрудник,
	//|	КодВидаРасчета";

	////|	И Начисления.ВидРасчета НЕ В(&ПрочиеДоходы)
	//Запрос.УстановитьПараметр("Организация", Организация);
	//Запрос.УстановитьПараметр("ПериодРегистрации", МесяцВыплаты);
	//Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	////Запрос.УстановитьПараметр("ПрочиеДоходы", Справочники.ГруппыНачислений.ПрочиеДоходы.Расчеты.ВыгрузитьКолонку("ВидРасчета"));
	//
	//РезультатНачислений = Запрос.Выполнить().Выбрать();

	//Всего=0;
	//Пока РезультатНачислений .Следующий()  Цикл
	//	
	//	СтрокаТ=т.добавить();  
	//	СтрокаТ.Сотрудник=Сотрудник;
	//	СтрокаТ.КодВидаРасчета=РезультатНачислений.КодВидаРасчета;
	//	СтрокаТ.ВидРасчета=РезультатНачислений.ВидРасчета;
	//	СтрокаТ.Результат=РезультатНачислений.Результат;
	//	СтрокаТ.Дни=РезультатНачислений.Дни;
	//	СтрокаТ.Часы=РезультатНачислений.Часы;
	//	СтрокаТ.Месяц=Месяц(РезультатНачислений.ДатаНачала);
	//	СтрокаТ.Вид=10;
	//	Если не ВходитВГруппуНачислений(РезультатНачислений.ВидРасчета,Справочники.ГруппыНачислений.ПрочиеДоходы) Тогда
	//		Всего=Всего+РезультатНачислений.Результат;
	//	КонецЕсли; 
	//
	//КонецЦикла; 
	//ВсегоНачислено=Всего;
	//
	//СтрокаТ=т.добавить();  
	//СтрокаТ.Результат=Всего;
	//СтрокаТ.Вид=20;
	//
	//СтрокаТ=т.добавить();  
	//СтрокаТ.Результат=0;
	//СтрокаТ.Вид=25;
	//
	////Запрос = Новый Запрос;
	////Запрос.Текст = 
	////"ВЫБРАТЬ
	////|	Начисления.Результат,
	////|	Начисления.ВидРасчета,
	////|	ПРЕДСТАВЛЕНИЕ(Начисления.ВидРасчета),
	////|	Начисления.ДатаНачала,
	////|	Начисления.КодВидаРасчета КАК КодВидаРасчета,
	////|	Начисления.ВидРасчета.КраткоеНаименование
	////|ИЗ
	////|	РегистрРасчета.Начисления КАК Начисления
	////|ГДЕ
	////|	Начисления.ПериодРегистрации = &ПериодРегистрации
	////|	И Начисления.Активность
	////|	И Начисления.Организация = &Организация
	////|	И Начисления.Сотрудник = &Сотрудник
	////|	И Начисления.ВидРасчета В(&ПрочиеДоходы)
	////|
	////|УПОРЯДОЧИТЬ ПО
	////|	Начисления.Сотрудник,
	////|	КодВидаРасчета";

	////Запрос.УстановитьПараметр("Организация", Организация);
	////Запрос.УстановитьПараметр("ПериодРегистрации", МесяцВыплаты);
	////Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	////Запрос.УстановитьПараметр("ПрочиеДоходы", Справочники.ГруппыНачислений.ПрочиеДоходы.Расчеты.ВыгрузитьКолонку("ВидРасчета"));
	////
	////Результат = Запрос.Выполнить().Выбрать();

	////Всего=0;
	////Пока Результат .Следующий()  Цикл
	////	
	////	СтрокаТ=т.добавить();  
	////	СтрокаТ.Сотрудник=Сотрудник;
	////	СтрокаТ.КодВидаРасчета=Результат.КодВидаРасчета;
	////	СтрокаТ.ВидРасчета=Результат.ВидРасчета;
	////	СтрокаТ.Результат=Результат.Результат;
	////	СтрокаТ.Месяц=Месяц(Результат.ДатаНачала);
	////	СтрокаТ.Вид=50;
	////	Всего=Всего+Результат.Результат;
	////
	////КонецЦикла; 
	////
	////Если Всего<>0 Тогда
	////	СтрокаТ=т.добавить();  
	////	СтрокаТ.Результат=0;
	////	СтрокаТ.Вид=45;
	////
	////КонецЕсли; 
	//
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	Удержания.Результат,
	//|	Удержания.ВидРасчета,
	//|	ПРЕДСТАВЛЕНИЕ(Удержания.ВидРасчета),
	//|	Удержания.ДатаНачала,
	//|	Удержания.КодВидаРасчета КАК КодВидаРасчета
	//|ИЗ
	//|	РегистрРасчета.Удержания КАК Удержания
	//|ГДЕ
	//|	Удержания.ПериодРегистрации = &ПериодРегистрации
	//|	И Удержания.Активность
	//|	И Удержания.Организация = &Организация
	//|	И Удержания.Сотрудник = &Сотрудник
	//|	И Удержания.ВидРасчета НЕ В(&ПрочиеРасходы)
	//|	И Удержания.Регистратор.Ссылка <> &Ссылка
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Удержания.Сотрудник,
	//|	КодВидаРасчета";

	//Запрос.УстановитьПараметр("Организация", Организация);
	//Запрос.УстановитьПараметр("ПериодРегистрации", МесяцВыплаты);
	//Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	//Запрос.УстановитьПараметр("ПрочиеРасходы", Справочники.ГруппыУдержаний.ПрочиеРасходы.Расчеты.ВыгрузитьКолонку("ВидРасчета"));
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);

	//Результат = Запрос.Выполнить().Выбрать();
	//
	//Всего=0;
	//Пока Результат .Следующий()  Цикл
	//	
	//	СтрокаТ=т.добавить();  
	//	СтрокаТ.Сотрудник=Сотрудник;
	//	СтрокаТ.КодВидаРасчета=Результат.КодВидаРасчета;
	//	СтрокаТ.ВидРасчета=Результат.ВидРасчета;
	//	СтрокаТ.Результат=Результат.Результат;
	//	СтрокаТ.Месяц=Месяц(Результат.ДатаНачала);
	//	СтрокаТ.Вид=30;
	//	Всего=Всего+Результат.Результат;
	//
	//КонецЦикла; 
	//ВсегоУдержано=Всего;
	//
	//СтрокаТ=т.добавить();  
	//СтрокаТ.Результат=Всего;
	//СтрокаТ.Вид=40;
	//
	//
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	Сальдо.Результат,
	//|	Сальдо.ВидРасчета,
	//|	ПРЕДСТАВЛЕНИЕ(Сальдо.ВидРасчета)
	//|ИЗ
	//|	РегистрРасчета.Сальдо КАК Сальдо
	//|ГДЕ
	//|	Сальдо.ПериодРегистрации = &ПериодРегистрации
	//|	И Сальдо.Активность
	//|	И Сальдо.Организация = &Организация
	//|	И Сальдо.Сотрудник = &Сотрудник
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	Сальдо.Сотрудник";

	//Запрос.УстановитьПараметр("Организация", Организация);
	//Запрос.УстановитьПараметр("ПериодРегистрации", МесяцВыплаты);
	//Запрос.УстановитьПараметр("Сотрудник", Сотрудник);

	//Результат = Запрос.Выполнить().Выгрузить();
	//
	//НаРуки=ВсегоНачислено-ВсегоУдержано;
	//
	//Сальдо=НаРуки;
	//СНК=0;
	//СНД=0;
	//СКК=0;
	//СКД=0;

	//
	//Для Каждого СтрокаРезультат из Результат Цикл
	//	
	//	Если СтрокаРезультат.ВидРасчета=ПланыВидовРасчета.Сальдо.НачальноеСальдоКредит Тогда
	//		Сальдо=Сальдо+СтрокаРезультат.Результат;
	//		СНК=СНК+СтрокаРезультат.Результат;
	//	ИначеЕсли СтрокаРезультат.ВидРасчета=ПланыВидовРасчета.Сальдо.НачальноеСальдоДебет Тогда
	//		Сальдо=Сальдо-СтрокаРезультат.Результат;
	//		СНД=СНД+СтрокаРезультат.Результат;
	//	КонецЕсли; 
	//
	//КонецЦикла; 
	//
	//Если Сальдо>0 Тогда
	//	СКК=Сальдо;
	//	СКД=0;
	//Иначе	
	//	СКК=0;
	//	СКД=-Сальдо;
	//КонецЕсли; 
	//
	//
	//СведенияОСальдо=новый Структура("снк,снд,скк,скд,наруки",СНК,СНД,СКК,СКД,НаРуки);
	//Если т.количество()>0 Тогда
	//	т[0].СведенияОСальдо=СведенияОСальдо;	
	//КонецЕсли; 
	//
	//
	//СтрокаТ=т.добавить();  
	//СтрокаТ.Результат=СуммаКВыплате;
	//СтрокаТ.Вид=100;
	//
	//СтрокаТ=т.добавить();  
	//СтрокаТ.Результат=СуммаКВыплате;
	//СтрокаТ.Вид=101;
	
КонецПроцедуры

Функция ЗаполнитьСведенияОСотруднике(СведенияОСотруднике,т)
	
	
	СведенияОСотруднике.Параметры.Период="";
	СведенияОСотруднике.Параметры.Сотрудник="";
	СведенияОСотруднике.Параметры.ТабельныйНомер="";
	СведенияОСотруднике.Параметры.Подразделение="";
	СведенияОСотруднике.Параметры.Должность="";
	СведенияОСотруднике.Параметры.ОкладТариф="";
		
	Если т.количество()>0  Тогда
		СведенияОСотруднике.Параметры.Период=ПредставлениеПериода(НАчалоМесяца(Дата),КонецМесяца(Дата),"ФП=истина");
		Если СведенияОСотрудниках.Количество()>0 Тогда
			
			СтрокаСведений=СведенияОСотрудниках.Найти(т[0].Сотрудник,"Сотрудник");	
			Если СтрокаСведений<>неопределено Тогда
				СведенияОСотруднике.Параметры.Сотрудник=СтрокаСведений.Сотрудник;
				СведенияОСотруднике.Параметры.ТабельныйНомер=СтрокаСведений.Сотрудник.Код;
				СведенияОСотруднике.Параметры.Подразделение=СтрокаСведений.Подразделение;
				СведенияОСотруднике.Параметры.Должность=СтрокаСведений.Должность;
				СведенияОСотруднике.Параметры.ОкладТариф=?(СтрокаСведений.Оклад<>0,СтрокаСведений.Оклад,СтрокаСведений.Тариф);
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
	
	СведенияОСотруднике.Параметры.Заполнить(Руководители);
	
	Возврат СведенияОСотруднике;
	
КонецФункции	

Процедура ВывестиТаблицы(ТабДок,т1,т2,т3) Экспорт

	КоличествоНачислений=0;
	КоличествоУдержаний=0;
	КоличествоПрочихДоходов=0;
	
	СтрокВШапкахИИтогах=17;
	
	Макет = ПолучитьМакет("РасчетноПлатежнаяВедомость");

	
	//ВЫВОД НАЧИСЛЕНИЙ
 	ШапкаНачислений = Макет.ПолучитьОбласть("ШапкаНачислений|ВертСекция");
	Начисление = Макет.ПолучитьОбласть("Начисление|ВертСекция");
	ИтогНачислений = Макет.ПолучитьОбласть("ИтогНачислений|ВертСекция");
	
	ШапкаУдержаний = Макет.ПолучитьОбласть("ШапкаУдержаний|ВертСекция");
	Удержание = Макет.ПолучитьОбласть("Удержание|ВертСекция");
	ИтогУдержаний = Макет.ПолучитьОбласть("ИтогУдержаний|ВертСекция");
	
	ШапкаПрочиеДоходы = Макет.ПолучитьОбласть("ШапкаПрочиеДоходы|ВертСекция");
	ПрочиеДоходы = Макет.ПолучитьОбласть("ПрочиеДоходы|ВертСекция");
	
	Пустая = Макет.ПолучитьОбласть("Пустая|ВертСекция");
	НаРуки1 = Макет.ПолучитьОбласть("НаРуки1|ВертСекция");
	НаРуки2 = Макет.ПолучитьОбласть("НаРуки2|ВертСекция");
	Разделитель = Макет.ПолучитьОбласть("Разделитель|ВертСекция");
	
	СведенияОСотруднике = Макет.ПолучитьОбласть("СведенияОСотруднике|ВертСекция");
	
	ТабДок.Вывести(ЗаполнитьСведенияОСотруднике(СведенияОСотруднике,т1));
	
	ТабДок.Присоединить(ЗаполнитьСведенияОСотруднике(СведенияОСотруднике,т2));
	
	ТабДок.Присоединить(ЗаполнитьСведенияОСотруднике(СведенияОСотруднике,т3));
	
	ТабДок.Вывести(ШапкаНачислений);
	ТабДок.Присоединить(ШапкаНачислений);
	ТабДок.Присоединить(ШапкаНачислений);
	
	МаксСтрок=Макс(т1.Количество(),т2.Количество(),т3.количество());
	
	//ИтогВыведен1=ложь;
	//ИтогВыведен2=ложь;
	//ИтогВыведен3=ложь;
	
	
	Для н=1 по МаксСтрок Цикл
		
		Если н<=т1.Количество() Тогда
			СтрокаТ=т1[н-1];
			
			Если СтрокаТ.Вид=10 Тогда
				Начисление.Параметры.Заполнить(СтрокаТ);
				ТабДок.Вывести(Начисление);	
				
			ИначеЕсли СтрокаТ.Вид=20 Тогда
				ИтогНачислений.Параметры.Заполнить(СтрокаТ);
				ТабДок.Вывести(ИтогНачислений);	
				
			ИначеЕсли СтрокаТ.Вид=25 Тогда
				ТабДок.Вывести(ШапкаУдержаний);	
				
			ИначеЕсли СтрокаТ.Вид=30 Тогда
				Удержание.Параметры.Заполнить(СтрокаТ);
				ТабДок.Вывести(Удержание);	
				
			ИначеЕсли СтрокаТ.Вид=40 Тогда
				ИтогУдержаний.Параметры.Заполнить(СтрокаТ);
				ТабДок.Вывести(ИтогУдержаний);	
				
			ИначеЕсли СтрокаТ.Вид=45 Тогда
				ТабДок.Вывести(ШапкаПрочиеДоходы);	
				
			ИначеЕсли СтрокаТ.Вид=50 Тогда
				ПрочиеДоходы.Параметры.Заполнить(СтрокаТ);
				ТабДок.Вывести(ПрочиеДоходы);	
				
			ИначеЕсли СтрокаТ.Вид=100 Тогда
				НаРуки1.Параметры.Заполнить(СтрокаТ);
				НаРуки1.Параметры.НаРуки=СтрокаТ.Результат;
				ТабДок.Вывести(НаРуки1);	
			ИначеЕсли СтрокаТ.Вид=101 Тогда
				НаРуки2.Параметры.Заполнить(СтрокаТ);
				НаРуки2.Параметры.СуммаКВыплате=СформироватьСуммуПрописью(СтрокаТ.Результат,Константы.ВалютаРегламентированногоУчета.Получить());;
				ТабДок.Вывести(НаРуки2);	
				
			Иначе
				ТабДок.Вывести(Пустая);	
			КонецЕсли; 
		Иначе	
			ТабДок.Вывести(Пустая);	
		КонецЕсли; 
	
		Если н<=т2.Количество() Тогда
			СтрокаТ=т2[н-1];
			
			Если СтрокаТ.Вид=10 Тогда
				Начисление.Параметры.Заполнить(СтрокаТ);
				ТабДок.Присоединить(Начисление);	
				
			ИначеЕсли СтрокаТ.Вид=20 Тогда
				ИтогНачислений.Параметры.Заполнить(СтрокаТ);
				ТабДок.Присоединить(ИтогНачислений);
				
			ИначеЕсли СтрокаТ.Вид=25 Тогда
				ТабДок.Присоединить(ШапкаУдержаний);	
				
			ИначеЕсли СтрокаТ.Вид=30 Тогда
				Удержание.Параметры.Заполнить(СтрокаТ);
				ТабДок.Присоединить(Удержание);	
				
			ИначеЕсли СтрокаТ.Вид=40 Тогда
				ИтогУдержаний.Параметры.Заполнить(СтрокаТ);
				ТабДок.Присоединить(ИтогУдержаний);	
				
			ИначеЕсли СтрокаТ.Вид=45 Тогда
				ТабДок.Присоединить(ШапкаПрочиеДоходы);	
				
			ИначеЕсли СтрокаТ.Вид=50 Тогда
				ПрочиеДоходы.Параметры.Заполнить(СтрокаТ);
				ТабДок.Присоединить(ПрочиеДоходы);	
			ИначеЕсли СтрокаТ.Вид=100 Тогда
				НаРуки1.Параметры.Заполнить(СтрокаТ);
				НаРуки1.Параметры.НаРуки=СтрокаТ.Результат;
				ТабДок.Присоединить(НаРуки1);	
			ИначеЕсли СтрокаТ.Вид=101 Тогда
				НаРуки2.Параметры.Заполнить(СтрокаТ);
				НаРуки2.Параметры.СуммаКВыплате=СформироватьСуммуПрописью(СтрокаТ.Результат,Константы.ВалютаРегламентированногоУчета.Получить());;
				ТабДок.Присоединить(НаРуки2);	
			Иначе
				ТабДок.Присоединить(Пустая);	
				
			КонецЕсли; 
		Иначе	
			ТабДок.Присоединить(Пустая);	
		КонецЕсли; 
		
		Если н<=т3.Количество() Тогда
			СтрокаТ=т3[н-1];
			
			Если СтрокаТ.Вид=10 Тогда
				Начисление.Параметры.Заполнить(СтрокаТ);
				ТабДок.Присоединить(Начисление);
				
			ИначеЕсли СтрокаТ.Вид=20 Тогда
				ИтогНачислений.Параметры.Заполнить(СтрокаТ);
				ТабДок.Присоединить(ИтогНачислений);	
				
			ИначеЕсли СтрокаТ.Вид=25 Тогда
				ТабДок.Присоединить(ШапкаУдержаний);	
				
			ИначеЕсли СтрокаТ.Вид=30 Тогда
				Удержание.Параметры.Заполнить(СтрокаТ);
				ТабДок.Присоединить(Удержание);	
				
			ИначеЕсли СтрокаТ.Вид=40 Тогда
				ИтогУдержаний.Параметры.Заполнить(СтрокаТ);
				ТабДок.Присоединить(ИтогУдержаний);	
				
			ИначеЕсли СтрокаТ.Вид=45 Тогда
				ТабДок.Присоединить(ШапкаПрочиеДоходы);	
				
			ИначеЕсли СтрокаТ.Вид=50 Тогда
				ПрочиеДоходы.Параметры.Заполнить(СтрокаТ);
				ТабДок.Присоединить(ПрочиеДоходы);	
			ИначеЕсли СтрокаТ.Вид=100 Тогда
				НаРуки1.Параметры.Заполнить(СтрокаТ);
				НаРуки1.Параметры.НаРуки=СтрокаТ.Результат;
				ТабДок.Присоединить(НаРуки1);	
			ИначеЕсли СтрокаТ.Вид=101 Тогда
				НаРуки2.Параметры.Заполнить(СтрокаТ);
				НаРуки2.Параметры.СуммаКВыплате=СформироватьСуммуПрописью(СтрокаТ.Результат,Константы.ВалютаРегламентированногоУчета.Получить());;
				ТабДок.Присоединить(НаРуки2);	
			Иначе
				ТабДок.Присоединить(Пустая);	
				
			КонецЕсли; 
		Иначе	
			ТабДок.Присоединить(Пустая);	
		КонецЕсли; 
	КонецЦикла; 




КонецПроцедуры






