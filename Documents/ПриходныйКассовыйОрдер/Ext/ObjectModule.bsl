// Текущие курс и кратность валюты документа для расчетов
Перем КурсДокумента Экспорт;
Перем КратностьДокумента Экспорт;
Перем мВалютаРегламентированногоУчета Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Функция РубКоп(Сумма)
	Руб=Цел(Сумма);
	Коп=ОКР(100*(Сумма-Руб),0,1);
	СуммаРубКоп=""+Руб+" сум. "+Цел(Коп/10)+(Коп-10*Цел(Коп/10))+" т.";
	Возврат СуммаРубКоп;
КонецФункции

//// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьПКО() Экспорт
	Макет       = ПолучитьМакет("КО1");
	ТабДокумент = Новый ТабличныйДокумент;
	СведенияОбОрганизации = СведенияОЮрФизЛице(Организация, ,Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ПредставлениеОрганизации = Организация.НаименованиеПолное;
	
	ОбластьМакета.Параметры.Число     				= Формат(День(Дата),"ЧВН=1,ЧГ=0");
	ОбластьМакета.Параметры.Месяц     				= Формат(Месяц(Дата),"ЧВН=1,ЧГ=0");
	ОбластьМакета.Параметры.Год       				= Формат(Год(Дата),"ЧГ=0");
	ОбластьМакета.Параметры.НомерДокумента    		= ПолучитьНомерНаПечать(ЭтотОбъект.Ссылка);
	ОбластьМакета.Параметры.ДатаДокумента			= Дата;
	
	ОбластьМакета.Параметры.КодАналитическогоУчета  = ШифрАналитическогоУчета;
	ОбластьМакета.Параметры.КодПодразделения		= Подразделение;
	ОбластьМакета.Параметры.СубСчет                 = КоррСчет;	
	ОбластьМакета.Параметры.Категория               = Категория;	
	ОбластьМакета.Параметры.КодЦелевогоНазначения   = ШифрЦелевогоНазначения;	
	ОбластьМакета.Параметры.ВидВыручки				= ВидВыручки;	
	ОбластьМакета.Параметры.ТН						= ТабельныйНомер;
	
	ОбластьМакета.Параметры.СубСчет   				= КоррСчет;
	ОбластьМакета.Параметры.ПринятоОт  				= ПринятоОт;
	ОбластьМакета.Параметры.Основание  				= Основание;
	ОбластьМакета.Параметры.Приложение 				= Приложение;
	
	ОбластьМакета.Параметры.СуммаРубКоп       		= РубКоп(Сумма);
	ОбластьМакета.Параметры.Сумма		      		= Формат(Сумма,"ЧЦ=15; ЧДЦ=2; ЧРД=.");
	ОбластьМакета.Параметры.СуммаПрописью     		= ПроцедурыСервера.СформироватьСуммуПрописью_Сервер(Сумма, мВалютаРегламентированногоУчета);
	
	ТекстСуммаНДС = "";
	Если СуммаНДС=0 Тогда
		ТекстСуммаНДС = ", без НДС";
	Иначе	
		ТекстСуммаНДС = ", в т.ч. НДС ( "+Строка(СтавкаНДС)+"% ) "+ Формат(СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=0-00");
	КонецЕсли; 
	
	ОбластьМакета.Параметры.ТекстСуммаНДС=ТекстСуммаНДС;
	
	ОтветственныеЛица = ОтветственныеЛица(Организация, Дата);
	
	ОбластьМакета.Параметры.Заполнить(ОтветственныеЛица);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 10;
	ТабДокумент.ПолеСлева  = 20;
	ТабДокумент.ПолеСнизу  = 10;
	ТабДокумент.ПолеСправа = 10;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.КлючПараметровПечати="КПП_ПриходныйКассовыйОрдер";
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьПКО()

// Функция формирует табличный документ с печатной формой бланка ПКО
//
// Возвращаемое значение:
//   Табличный документ - печатная форма бланка ПКО
//
Функция ПечатьБланк() Экспорт
	Макет       = ПолучитьМакет("Бланк");
	ТабДокумент = Новый ТабличныйДокумент;
	СведенияОбОрганизации = СведенияОЮрФизЛице(Организация, ,Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ОписаниеОрганизации(СведенияОбОрганизации, "ОрганизацияНаименование");
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
    ОбластьМакета.Параметры.Заполнить(Руководители);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.КлючПараметровПечати="КПП_ПриходныйКассовыйОрдер";
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьБланк()()

//// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	// Получить экземпляр документа на печать
	Если ИмяМакета = "ПКО" Тогда
		ТабДокумент = ПечатьПКО();
	ИначеЕсли ИмяМакета = "Бланк" Тогда
		ТабДокумент = ПечатьБланк();
	КонецЕсли;
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "ПКО", НепосредственнаяПечать);
КонецПроцедуры // Печать()

//#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ПКО,Бланк","Приходный кассовый ордер","Бланк");
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()
//////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	//Проверяем заполнение шапки
	
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	
	СтруктураОбязательныхПолей.Вставить("КоррСчет","Не выбран кор. счет (БУ).");
	СтруктураОбязательныхПолей.Вставить("СтатьяДвиженияДенежныхСредств","Не выбрана статья движения денежных средств (БУ).");
	
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	// Бухгалтерские проводки документа
	ПроводкиБУ = Движения.Хозрасчетный;
	
	Проводка = ПроводкиБУ.Добавить();
	Проводка.Период      = Дата;
	Проводка.Организация = СтруктураШапкиДокумента.Организация;
	Проводка.Содержание = Приложение;
	Проводка.СчетДт      = СчетКасса;
	УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Касса);
	УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтатьяДвиженияДенежныхСредств);
	Проводка.СчетКт = КоррСчет;
	УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Субконто1);
	УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, Субконто2);
	УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, Субконто3);
	Проводка.Сумма = Сумма-СуммаНДС;
	
	Если КоррСчет.Количественный Тогда
		Проводка.КоличествоКт = Количество;
	КонецЕсли; 
	
	Если Не СуммаНДС = 0 Тогда
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = СтруктураШапкиДокумента.Организация;
		Проводка.Содержание = "НДС";
		Проводка.СчетДт      = СчетКасса;
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Касса);
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтатьяДвиженияДенежныхСредств);
		Проводка.СчетКт = СчетУчетаПлатежа("НДС");   
		УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Справочники.ПлатежиВБюджет.НДС);
		Проводка.Сумма = СуммаНДС;
	КонецЕсли; 
КонецПроцедуры

Процедура ДвиженияПоРегистрам(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента);

КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим) //в разработке
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	Если СокрЛП(Номер)="" Тогда
		
		СообщенияПользователю.ВывестиСообщениеПользователю("Документ без номера не может быть проведен",ЭтотОбъект,Номер);
		Отказ=Истина;
		
	КонецЕсли;	
	
	Если Не Отказ Тогда
		
		ДвиженияПоРегистрам(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	Префикс=Организация.Префикс;
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(СчетКасса) Тогда
		
		СчетКасса=Касса.СчетУчета;
		
	КонецЕсли;	
	
	СуммаПоДокументу=Сумма;
	
КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
