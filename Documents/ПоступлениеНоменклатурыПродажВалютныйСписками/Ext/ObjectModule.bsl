
Перем ПорядокУплатыНДС;

////////////////////////////////////////////////////////////////////////////////

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	Возврат Новый Структура("РасчетСтоимостиНоменклатуры,ПриемныйАкт","Расчет стоимости номенклатуры","Приемный акт");
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	Если ИмяМакета="ПриемныйАкт" Тогда
		ТабДокумент = ПечатьПриемныйАкт();
	ИначеЕсли ИмяМакета="РасчетСтоимостиНоменклатуры" Тогда
		ТабДокумент = ПечатьРасчетаСтоимостиНоменклатуры();
	КонецЕсли; 
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Расчет стоимости");
КонецПроцедуры

Функция ПечатьРасчетаСтоимостиНоменклатуры()
	ПорядокУплатыНДС = ПолучитьПорядокУплатыНДС(Дата,Организация);
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("РасчетСтоимости");
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Организация = Организация;
	Область.Параметры.Склад = Склад;
	Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Дата = Формат(Дата,"ДЛФ=DD");
	Область.Параметры.Поставщик = Поставщик;
	Область.Параметры.ДоговорПоставщика	= ДоговорПоставщика;
	Область.Параметры.ПриходныйДокумент = ПриходныйДокумент;
	Область.Параметры.Валюта = Валюта;
	Область.Параметры.КурсВалюты = Курс;
	ТабДок.Вывести(Область);
	
	
	ОбластьНачало = Макет.ПолучитьОбласть("ШапкаТаблицы|Начало");
	ОбластьДопРасход = Макет.ПолучитьОбласть("ШапкаТаблицы|ДопРасход");
	ОбластьИтог= Макет.ПолучитьОбласть("ШапкаТаблицы|ВертИтог");
	
	ТабДок.Вывести(ОбластьНачало);
	ИмяСекции="Доп. расходы";
	Для Каждого Строка из РасходыВключаемыеВСтоимость Цикл
		ОбластьДопРасход.Параметры.ИмяСекции=ИмяСекции;
		ОбластьДопРасход.Параметры.Описание=Строка.Описание;
		ТабДок.Присоединить(ОбластьДопРасход);
		ИмяСекции="";
	КонецЦикла;	
	ТабДок.Присоединить(ОбластьИтог);
	
	НомерСтроки=0;
	ОбластьНачало = Макет.ПолучитьОбласть("Строка|Начало");
	ОбластьДопРасход = Макет.ПолучитьОбласть("Строка|ДопРасход");
	ОбластьИтог= Макет.ПолучитьОбласть("Строка|ВертИтог");
	
	ТаблицаНоменклатура=СформироватьТаблицуНоменклатуры();

	ОбщаяСумма=0;
	Для каждого СтрокаНоменклатуры Из ТаблицаНоменклатура  Цикл
		НомерСтроки=НомерСтроки+1;
		ОбластьНачало.Параметры.НомерСтроки = НомерСтроки;
		ОбластьНачало.Параметры.ЕдиницаИзмерения = СтрокаНоменклатуры.Номенклатура.БазоваяЕдиницаИзмерения;
		ОбластьНачало.Параметры.Заполнить(СтрокаНоменклатуры);
		ТабДок.Вывести(ОбластьНачало);
		
		СуммаДопРасходов=0;
		Для Каждого Строка из РасходыВключаемыеВСтоимость Цикл
			ОбластьДопРасход.Параметры.Сумма=СтрокаНоменклатуры["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)];
			СуммаДопРасходов=СуммаДопРасходов+СтрокаНоменклатуры["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)];
			ТабДок.Присоединить(ОбластьДопРасход);
		КонецЦикла;	
		ОбластьИтог.Параметры.СуммаДопРасходов=СуммаДопРасходов;
		ОбластьИтог.Параметры.ПрямыеРасходы=СтрокаНоменклатуры.ПрямыеРасходы;
		//ОбластьИтог.Параметры.ОбщаяСумма=СтрокаНоменклатуры.Сумма+СуммаДопРасходов+СтрокаНоменклатуры.ПрямыеРасходы+СтрокаНоменклатуры.Акциз+СтрокаНоменклатуры.НДС+СтрокаНоменклатуры.ТП;
		Цена=0;
		Если ПорядокУплатыНДС=Перечисления.ПорядокУплатыНДС.Общеустановленный Тогда
			Цена=СтрокаНоменклатуры.Сумма+СуммаДопРасходов+СтрокаНоменклатуры.ПрямыеРасходы+СтрокаНоменклатуры.Акциз+СтрокаНоменклатуры.ТП;
		Иначе
			Цена=СтрокаНоменклатуры.Сумма+СуммаДопРасходов+СтрокаНоменклатуры.ПрямыеРасходы+СтрокаНоменклатуры.Акциз+СтрокаНоменклатуры.НДС+СтрокаНоменклатуры.ТП;
		КонецЕсли; 
		ОбщаяСумма=ОбщаяСумма+Цена;
		ОбластьИтог.Параметры.ОбщаяСумма=Цена;
		ЦенаЕдиницы=0;
		Если СтрокаНоменклатуры.Количество<>0 Тогда
			ЦенаЕдиницы=Окр(Цена/СтрокаНоменклатуры.Количество,2);
		//Иначе
		//	Цена=СтрокаНоменклатуры.Сумма+СуммаДопРасходов+СтрокаНоменклатуры.ПрямыеРасходы+СтрокаНоменклатуры.Акциз+СтрокаНоменклатуры.НДС+СтрокаНоменклатуры.ТП;
		КонецЕсли;	
		ОбластьИтог.Параметры.ЦенаЕдиницы=ЦенаЕдиницы;
		ТабДок.Присоединить(ОбластьИтог);
	КонецЦикла; 
	
	//Итоги ===========================
	
	ОбластьНачало = Макет.ПолучитьОбласть("Итог|Начало");
	ОбластьДопРасход = Макет.ПолучитьОбласть("Итог|ДопРасход");
	ОбластьИтог= Макет.ПолучитьОбласть("Итог|ВертИтог");
	
	ОбластьНачало.Параметры.Сумма=ТаблицаНоменклатура.Итог("Сумма");
	ОбластьНачало.Параметры.СуммаВВалюте=ТаблицаНоменклатура.Итог("СуммаВВалюте");
	ОбластьНачало.Параметры.Акциз=ТаблицаНоменклатура.Итог("Акциз");
	ОбластьНачало.Параметры.НДС=ТаблицаНоменклатура.Итог("НДС");
	ОбластьНачало.Параметры.ТП=ТаблицаНоменклатура.Итог("ТП");
	ТабДок.Вывести(ОбластьНачало);
	
	СуммаДопРасходов=0;
	Для Каждого Строка из РасходыВключаемыеВСтоимость Цикл
		ОбластьДопРасход.Параметры.Сумма=ТаблицаНоменклатура.Итог("РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки));
		СуммаДопРасходов=СуммаДопРасходов+ТаблицаНоменклатура.Итог("РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки));
		ТабДок.Присоединить(ОбластьДопРасход);
	КонецЦикла;	
	ОбластьИтог.Параметры.СуммаДопРасходов=СуммаДопРасходов;
	ОбластьИтог.Параметры.ПрямыеРасходы=ТаблицаНоменклатура.Итог("ПрямыеРасходы");
	ОбластьИтог.Параметры.ОбщаяСумма=ОбщаяСумма;
	ТабДок.Присоединить(ОбластьИтог);
	
	ТаблицаПроводок=новый ТаблицаЗначений;
	ТаблицаПроводок.Колонки.Добавить("СчетДт");
	ТаблицаПроводок.Колонки.Добавить("СчетКт");
	ТаблицаПроводок.Колонки.Добавить("Сумма",Новый ОписаниеТипов(Новый КвалификаторыЧисла(18,2)));
	
	Выборка=РегистрыБухгалтерии.Хозрасчетный.ВыбратьПоРегистратору(ЭтотОбъект.Ссылка);
	Пока Выборка.Следующий() Цикл
		Строка=ТаблицаПроводок.Добавить();
		Строка.СчетДт=Выборка.СчетДт;
		Строка.СчетКт=Выборка.СчетКт;
		Строка.Сумма=Выборка.Сумма;
	КонецЦикла;	
	
	ТаблицаПроводок.Свернуть("СчетДт,СчетКт","Сумма");
	ТаблицаПроводок.Сортировать("СчетДт,СчетКт");
	
	ОбластьПроводки = Макет.ПолучитьОбласть("Проводки");
	
	Для Каждого Строка из ТаблицаПроводок Цикл
		Если Строка.Сумма=0 Тогда
			Продолжить;
		КонецЕсли;
		
		ОбластьПроводки.Параметры.Заполнить(Строка);	
		ТабДок.Вывести(ОбластьПроводки);
	КонецЦикла;	
	
	ОбластьИтог = Макет.ПолучитьОбласть("Итог2");
	ОбластьИтог.Параметры.Ответственный=Ответственный;
	ТабДок.Вывести(ОбластьИтог);
	
	ТабДок.ФиксацияСверху=9;
	ТабДок.ФиксацияСлева=0;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабДок.ЭкземпляровНаСтранице=1;
	ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

Функция ПечатьПриемныйАкт()
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("ПриемныйАкт");
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.Организация = Организация;
	Область.Параметры.Склад = Склад;
	Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Дата = Формат(Дата,"ДЛФ=DD");
	Область.Параметры.Поставщик = Поставщик;
	Область.Параметры.ДоговорПоставщика	= ДоговорПоставщика;
	Область.Параметры.ПриходныйДокумент = ПриходныйДокумент;
	ТабДок.Вывести(Область);
	
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	ТабДок.Вывести(ОбластьШапка);
	
	НомерСтроки=0;
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	ТаблицаНоменклатура=СформироватьТаблицуНоменклатуры();

	ОбщаяСумма=0;
	Для каждого СтрокаНоменклатуры Из ТаблицаНоменклатура  Цикл
		НомерСтроки=НомерСтроки+1;
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		ОбластьСтрока.Параметры.ЕдиницаИзмерения = СтрокаНоменклатуры.Номенклатура.БазоваяЕдиницаИзмерения;
		ОбластьСтрока.Параметры.Заполнить(СтрокаНоменклатуры);
		
		СуммаДопРасходов=0;
		Для Каждого Строка из РасходыВключаемыеВСтоимость Цикл
			СуммаДопРасходов=СуммаДопРасходов+СтрокаНоменклатуры["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)];
		КонецЦикла;	
		Цена=0;
		Если ПорядокУплатыНДС=Перечисления.ПорядокУплатыНДС.Общеустановленный Тогда
			Цена=СтрокаНоменклатуры.Сумма+СуммаДопРасходов+СтрокаНоменклатуры.ПрямыеРасходы+СтрокаНоменклатуры.Акциз+СтрокаНоменклатуры.ТП;
		Иначе
			Цена=СтрокаНоменклатуры.Сумма+СуммаДопРасходов+СтрокаНоменклатуры.ПрямыеРасходы+СтрокаНоменклатуры.Акциз+СтрокаНоменклатуры.НДС+СтрокаНоменклатуры.ТП;
		КонецЕсли; 
		ОбщаяСумма=ОбщаяСумма+Цена;
		ОбластьСтрока.Параметры.Сумма=Цена;
		ЦенаЕдиницы=0;
		Если СтрокаНоменклатуры.Количество<>0 Тогда
			ЦенаЕдиницы=Окр(Цена/СтрокаНоменклатуры.Количество,2);
		КонецЕсли;	
		ОбластьСтрока.Параметры.ЦенаЕдиницы=ЦенаЕдиницы;
		ТабДок.Присоединить(ОбластьСтрока);
	КонецЦикла; 
	
	//Итоги ===========================
	
	ОбластьИтог= Макет.ПолучитьОбласть("Итог");
	
	ОбластьИтог.Параметры.Сумма=ОбщаяСумма;
	ТабДок.Вывести(ОбластьИтог);
	
	ОбластьПодвал= Макет.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(ОбластьПодвал);
	
	ТабДок.ФиксацияСверху=0;
	ТабДок.ФиксацияСлева=0;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	ТабДок.ЭкземпляровНаСтранице=1;
	ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	//Проверяем заполнение шапки
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("Склад","Не выбран склад.");
	СтруктураОбязательныхПолей.Вставить("Поставщик","Не выбран поставщик.");
	СтруктураОбязательныхПолей.Вставить("ДоговорПоставщика","Не указан договор с поставщиком.");
	СтруктураОбязательныхПолей.Вставить("Валюта","Не указана валюта.");
	СтруктураОбязательныхПолей.Вставить("СчетУчетаРасчетовСКонтрагентом","Не указан счет учета расчетов с поставщиком.");
	Если НДСТаможенный<>0 Тогда
		СтруктураОбязательныхПолей.Вставить("СчетУчетаРасчетовСТаможней","Не указан счет расчетов с таможней");
	КонецЕсли;	
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	//Проверяем заполнение табличной части 
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	СтруктураПолей.Вставить("СчетУчетаБУ","Не указан счет учета номенклатуры (таблица ""Номенклатура"")");
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Номенклатура", СтруктураПолей, Отказ, Заголовок);
	//Проверяем заполнение табличной части 
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("СчетКредит","Не указан счет кредита (таблица ""Дополнительные расходы"")");
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "РасходыВключаемыеВСтоимость", СтруктураПолей, Отказ, Заголовок);
	//Проверяем заполнение табличной части 
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("СчетЗатрат","Не указан счет затрат (таблица ""Прочее"")");
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Прочее", СтруктураПолей, Отказ, Заголовок);
КонецПроцедуры

Процедура ЗаписатьЦеныВСправочник()
	Если ЗаписыватьЦеныВСправочник Тогда
		ТаблицаНоменклатуры=СформироватьТаблицуНоменклатуры();	
		Для Каждого Строка из ТаблицаНоменклатуры Цикл
			НоменклатураОбъект=Строка.Номенклатура.ПолучитьОбъект();
			Цена=0;
			Если Строка.Количество<>0 Тогда
				Цена=(Строка.Сумма+Строка.РасходыВключаемыеВСтоимость+Строка.Акциз+Строка.ТП)/Строка.Количество;
			КонецЕсли;	
			НоменклатураОбъект.Цена=Цена;
			НоменклатураОбъект.Записать();
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры

Функция СформироватьТаблицуНоменклатуры()
	ТаблицаНоменклатуры=Номенклатура.Выгрузить();
	// РАСЧЕТЫ С ТАМОЖНЕЙ
	ТаблицаНоменклатуры.Колонки.Добавить("Акциз",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(18,2)));
	ТаблицаНоменклатуры.Колонки.Добавить("НДС",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(18,2)));
	ТаблицаНоменклатуры.Колонки.Добавить("ТП",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(18,2)));
	
	ЗапросПоСпискам = Новый Запрос;
	ЗапросПоСпискам.Текст =
	"ВЫБРАТЬ
	|	СписокНоменклатуры.Номенклатура,
	|	СписокНоменклатуры.Количество КАК Количество,
	|	СписокНоменклатуры.Сумма КАК Сумма,
	|	СписокНоменклатуры.СуммаВВалюте КАК СуммаВВалюте,
	|	СписокНоменклатуры.СчетУчетаБУ КАК КоррСчет,
	|	СписокНоменклатуры.Список КАК Список,
	|	СписокНоменклатуры.НомерСтроки
	|ИЗ
	|	Документ.ПоступлениеНоменклатурыПродажВалютныйСписками.Номенклатура КАК СписокНоменклатуры
	|ГДЕ
	|	СписокНоменклатуры.Ссылка = &Ссылка
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Сумма),
	|	СУММА(СуммаВВалюте)
	|ПО
	|	Список";
	
	ЗапросПоСпискам.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = ЗапросПоСпискам.Выполнить();
	ВыборкаСписки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСписки.Следующий() Цикл
		ТекСписок = Списки.Найти(ВыборкаСписки.Список, "Список");
		ОстатокАкциза = ТекСписок.Акциз;
		ОстатокНДС = ТекСписок.НДС;
		ОстатокТП = ТекСписок.ТП;
		НомерСтрокиНоменклатуры = 0;
		
		ВыборкаНоменклатура = ВыборкаСписки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
		Пока ВыборкаНоменклатура.Следующий() Цикл
			НомерСтрокиНоменклатуры = НомерСтрокиНоменклатуры + 1;
			Если НомерСтрокиНоменклатуры<>ВыборкаНоменклатура.Количество() Тогда
				АкцизВПроводку = Окр(ТекСписок.Акциз*ВыборкаНоменклатура.Сумма/ВыборкаСписки.Сумма,2);
				ОстатокАкциза = ОстатокАкциза - АкцизВПроводку;
				НДСВПроводку = Окр(ТекСписок.НДС*ВыборкаНоменклатура.Сумма/ВыборкаСписки.Сумма,2);
				ОстатокНДС = ОстатокНДС - НДСВПроводку;
				ТПВПроводку = Окр(ТекСписок.ТП*ВыборкаНоменклатура.Сумма/ВыборкаСписки.Сумма,2);
				ОстатокТП = ОстатокТП - ТПВПроводку;
			Иначе	
				АкцизВПроводку = ОстатокАкциза;
				НДСВПроводку = ОстатокНДС;
				ТПВПроводку = ОстатокТП;
			КонецЕсли; 
			СтруктураПоиска = Новый Структура("Номенклатура, Список,НомерСтроки", ВыборкаНоменклатура.Номенклатура, ВыборкаНоменклатура.Список, ВыборкаНоменклатура.НомерСтроки);
			СтрокиТаблицыНоменклатуры = ТаблицаНоменклатуры.НайтиСтроки(СтруктураПоиска);
			СтрокаТаблицыНоменклатуры = СтрокиТаблицыНоменклатуры[0];
			СтрокаТаблицыНоменклатуры.Акциз = АкцизВПроводку;
			СтрокаТаблицыНоменклатуры.НДС = НДСВПроводку;
			СтрокаТаблицыНоменклатуры.ТП = ТПВПроводку;
		КонецЦикла; 
	КонецЦикла; 
	// ПРЯМЫЕ РАСХОДЫ
	ТаблицаНоменклатуры.Колонки.Добавить("ПрямыеРасходы",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(18,2)));
	Для каждого СтрокаПрямыеРасходы Из ПрямыеЗатраты Цикл
		ТекНоменклатура = ТаблицаНоменклатуры.Найти(СтрокаПрямыеРасходы.Номенклатура, "Номенклатура");
		Если ТекНоменклатура <> Неопределено Тогда //Руслан 18-04-2019 
			ТекНоменклатура.ПрямыеРасходы = ТекНоменклатура.ПрямыеРасходы+СтрокаПрямыеРасходы.Сумма;
		КонецЕсли;
	КонецЦикла; 
	// ПРОЧИЕ РАСПРЕДЕЛЯЕМЫЕ РАСХОДЫ
	ТаблицаНоменклатуры.Колонки.Добавить("РасходыВключаемыеВСтоимость",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(18,2)));
	ТаблицаНоменклатуры.Колонки.Добавить("РасходыВключаемыеВСтоимостьВ",Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(18,2)));
	Для Каждого Строка из РасходыВключаемыеВСтоимость Цикл
		ТаблицаНоменклатуры.Колонки.Добавить("РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(18,2)));
		ТаблицаНоменклатуры.Колонки.Добавить("РасходыВключаемыеВСтоимостьВ"+Строка(Строка.НомерСтроки),Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(18,2)));
	КонецЦикла;	
	Если ТаблицаНоменклатуры.Итог("Сумма")<>0 Тогда
		Для Каждого Строка из РасходыВключаемыеВСтоимость Цикл
			СуммаКРаспределению=Строка.Сумма;
			Остаток=СуммаКРаспределению;
			СуммаКРаспределениюВ=Строка.ВалютнаяСумма;
			ОстатокВ=СуммаКРаспределениюВ;
			Для Каждого СтрокаТаблицаНоменклатуры из ТаблицаНоменклатуры Цикл
				Сумма=Окр(СуммаКРаспределению*СтрокаТаблицаНоменклатуры.Сумма/ТаблицаНоменклатуры.Итог("Сумма"),2);
				СуммаВ=Окр(СуммаКРаспределениюВ*СтрокаТаблицаНоменклатуры.Сумма/ТаблицаНоменклатуры.Итог("Сумма"),2);
				
				СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)]=СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)]+Сумма;
				СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимостьВ"+Строка(Строка.НомерСтроки)]=СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимостьВ"+Строка(Строка.НомерСтроки)]+СуммаВ;
				СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимость"]=СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимость"]+Сумма;
				СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимостьВ"]=СтрокаТаблицаНоменклатуры["РасходыВключаемыеВСтоимостьВ"]+СуммаВ;
				Остаток=Остаток-Сумма;
				ОстатокВ=ОстатокВ-СуммаВ;
			КонецЦикла;	
			Если Остаток<>0 Тогда
				ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)]=ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимость"+Строка(Строка.НомерСтроки)]+Остаток;	
				ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимость"]=ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимость"]+Остаток;	
				ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимостьВ"+Строка(Строка.НомерСтроки)]=ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимостьВ"+Строка(Строка.НомерСтроки)]+ОстатокВ;	
				ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимостьВ"]=ТаблицаНоменклатуры[0]["РасходыВключаемыеВСтоимостьВ"]+ОстатокВ;	
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	Возврат ТаблицаНоменклатуры;
КонецФункции	

Функция СформироватьОписаниеПервичногоДокумента(ПервичныйДокумент)
	ПервичныйДокументСтр=сокрлп(ПервичныйДокумент);	
    Если лев(ПервичныйДокументСтр,1)="№" или ЭтоЦифра(лев(ПервичныйДокументСтр,1)) Тогда
		Возврат "Сч.фак. "+ПервичныйДокументСтр;	
	Иначе
		Возврат ПервичныйДокументСтр;
	КонецЕсли; 
КонецФункции

////////////////////////////////////////////////////////////////////////////////

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	СуммаПоДокументу= СуммаПоДокументу+Прочее.Итог("Сумма")+Прочее.Итог("СуммаНДС");
	//
	Отбор = Новый Структура;
	Отбор.Вставить("Список",Справочники.СпискиПоступленияНоменклатурыВВалюте.ПустаяСсылка());
	МассивСтрок = Номенклатура.НайтиСтроки(Отбор);
	Для каждого ЭлементМассива Из МассивСтрок Цикл
		Номенклатура.Удалить(ЭлементМассива);
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	ЗаписатьЦеныВСправочник();
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ДвиженияПоРегистрам(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента);
	ДвиженияПоНДС(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента);
КонецПроцедуры

Процедура ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	ПорядокУплатыНДС = ПолучитьПорядокУплатыНДС(Дата,Организация);
	ПроводкиБУ = Движения.Хозрасчетный;
	Для Каждого СтрокаНоменклатуры Из Номенклатура Цикл
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание	 = "Поступление номенклатуры на склад";     
		ПервичныйДокумент ="";
		Если СокрЛП(НомерГТД)<>"" Тогда
			ПервичныйДокумент  = "ГТД № "+СокрЛП(НомерГТД)+" от "+Формат(ДатаГТД,"ДФ=dd.MM.yyyy");     
		КонецЕсли;
		Если СокрЛП(ПриходныйДокумент)<>"" Тогда
			ПервичныйДокумент  = ПервичныйДокумент + " Сч. факт. № "+СокрЛП(ПриходныйДокумент);     
		КонецЕсли;
		Проводка.ПервичныйДокумент=ПервичныйДокумент;
		//
		Проводка.СчетДт = СтрокаНоменклатуры.СчетУчетаБУ;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаНоменклатуры.Номенклатура);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
		Проводка.КоличествоДт = СтрокаНоменклатуры.Количество;
		//
		Проводка.СчетКт = СчетУчетаРасчетовСКонтрагентом;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Поставщик);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ДоговорПоставщика);
		Если СчетУчетаРасчетовСКонтрагентом.Валютный Тогда
			Проводка.ВалютаКт=Валюта;
			Проводка.ВалютнаяСуммаКт= СтрокаНоменклатуры.СуммаВВалюте;
		КонецЕсли;	
		//
		Проводка.Сумма = СтрокаНоменклатуры.Сумма; 
	КонецЦикла; 
	// РАСЧЕТЫ С ТАМОЖНЕЙ
	ЗапросПоСпискам = Новый Запрос;
	ЗапросПоСпискам.Текст =
	"ВЫБРАТЬ
	|	СписокНоменклатуры.Номенклатура,
	|	СписокНоменклатуры.Количество КАК Количество,
	|	СписокНоменклатуры.Сумма КАК Сумма,
	|	СписокНоменклатуры.СуммаВВалюте КАК СуммаВВалюте,
	|	СписокНоменклатуры.СчетУчетаБУ КАК КоррСчет,
	|	СписокНоменклатуры.Список КАК Список
	|ИЗ
	|	Документ.ПоступлениеНоменклатурыПродажВалютныйСписками.Номенклатура КАК СписокНоменклатуры
	|ГДЕ
	|	СписокНоменклатуры.Ссылка = &Ссылка
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Сумма),
	|	СУММА(СуммаВВалюте)
	|ПО
	|	Список";
	
	ЗапросПоСпискам.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = ЗапросПоСпискам.Выполнить();
	ВыборкаСписки = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСписки.Следующий() Цикл
		ТекСписок = Списки.Найти(ВыборкаСписки.Список, "Список");
		
		ПроведеннаяСуммаАкциза = 0;
		ПроведеннаяСуммаНДС = 0;
		ПроведеннаяСуммаТП = 0;
		НомерСтрокиНоменклатуры = 0;
		
		Если ПорядокУплатыНДС=Перечисления.ПорядокУплатыНДС.Общеустановленный И ТекСписок.НДС<>0 Тогда
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание	 = "НДС";     
			//
			Проводка.СчетДт = СчетУчетаАвансаПлатежа("НДС");
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"СтавкиНДС",Перечисления.СтавкиНДС.НДС20);
			//
			Проводка.СчетКт = ТекСписок.НДССчет;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,ТекСписок.НДСС1);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ТекСписок.НДСС2);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,ТекСписок.НДСС3);
			//
			Проводка.Сумма = ТекСписок.НДС;
		КонецЕсли;	
		
		ВыборкаНоменклатура = ВыборкаСписки.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);	
		Пока ВыборкаНоменклатура.Следующий() Цикл
			НомерСтрокиНоменклатуры = НомерСтрокиНоменклатуры + 1;
			Если НомерСтрокиНоменклатуры<>ВыборкаНоменклатура.Количество() Тогда
				АкцизВПроводку = ТекСписок.Акциз*ВыборкаНоменклатура.Сумма/ВыборкаСписки.Сумма;				
				НДСВПроводку = ТекСписок.НДС*ВыборкаНоменклатура.Сумма/ВыборкаСписки.Сумма;				
				ТПВПроводку = ТекСписок.ТП*ВыборкаНоменклатура.Сумма/ВыборкаСписки.Сумма;
			Иначе	
				АкцизВПроводку = ТекСписок.Акциз - ПроведеннаяСуммаАкциза;
				НДСВПроводку = ТекСписок.НДС - ПроведеннаяСуммаНДС;
				ТПВПроводку = ТекСписок.ТП - ПроведеннаяСуммаТП;
			КонецЕсли; 
			Если АкцизВПроводку<>0 Тогда
				Проводка = ПроводкиБУ.Добавить();
				Проводка.Период      = Дата;
				Проводка.Организация = Организация;
				Проводка.Содержание	 = "Акциз";     
				//
				Проводка.СчетДт = ВыборкаНоменклатура.КоррСчет;
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,ВыборкаНоменклатура.Номенклатура);
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
				//
				Проводка.СчетКт = ТекСписок.АкцизСчет;
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,ТекСписок.АкцизС1);
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ТекСписок.АкцизС2);
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,ТекСписок.АкцизС3);
				//
				Проводка.Сумма = АкцизВПроводку;
				ПроведеннаяСуммаАкциза = ПроведеннаяСуммаАкциза + Проводка.Сумма;
			КонецЕсли; 
			Если ПорядокУплатыНДС<>Перечисления.ПорядокУплатыНДС.Общеустановленный И НДСВПроводку<>0 Тогда
				Проводка = ПроводкиБУ.Добавить();
				Проводка.Период      = Дата;
				Проводка.Организация = Организация;
				Проводка.Содержание	 = "НДС";     
				//
				Проводка.СчетДт = ВыборкаНоменклатура.КоррСчет;
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,ВыборкаНоменклатура.Номенклатура);
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
				//
				Проводка.СчетКт = ТекСписок.НДССчет;
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,ТекСписок.НДСС1);
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ТекСписок.НДСС2);
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,ТекСписок.НДСС3);
				//
				Проводка.Сумма = НДСВПроводку;
				ПроведеннаяСуммаНДС = ПроведеннаяСуммаНДС + Проводка.Сумма;
			КонецЕсли; 
			Если ТПВПроводку<>0 Тогда
				Проводка = ПроводкиБУ.Добавить();
				Проводка.Период      = Дата;
				Проводка.Организация = Организация;
				Проводка.Содержание	 = "Там.пошл.";     
				//
				Проводка.СчетДт = ВыборкаНоменклатура.КоррСчет;
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,ВыборкаНоменклатура.Номенклатура);
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
				//
				Проводка.СчетКт = ТекСписок.ТПСчет;
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,ТекСписок.ТПС1);
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ТекСписок.ТПС2);
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,ТекСписок.ТПС3);
				//
				Проводка.Сумма = ТПВПроводку;
				ПроведеннаяСуммаТП = ПроведеннаяСуммаТП + Проводка.Сумма;
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла; 
	// ПРЯМЫЕ РАСХОДЫ ВКЛЮЧАЕМЫЕ В СТОИМОСТЬ
	Для каждого СтрокаПрямыеРасходы Из ПрямыеЗатраты Цикл
		ТекНоменклатура = Номенклатура.Найти(СтрокаПрямыеРасходы.Номенклатура, "Номенклатура");
		Если ТекНоменклатура=Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если СтрокаПрямыеРасходы.Сумма=0 Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтрокаПрямыеРасходы.СчетКредит) Тогда
			Продолжить;
		КонецЕсли;
		//
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание	 = СтрокаПрямыеРасходы.Описание;     
		//
		Проводка.СчетДт = ТекНоменклатура.СчетУчетаБУ;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,ТекНоменклатура.Номенклатура);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
		//
		Проводка.СчетКт = СтрокаПрямыеРасходы.СчетКредит;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаПрямыеРасходы.Субконто1);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,СтрокаПрямыеРасходы.Субконто2);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаПрямыеРасходы.Субконто3);
		//
		Проводка.Сумма = СтрокаПрямыеРасходы.Сумма; 
	КонецЦикла; 
	// ПРОЧИЕ РАСПРЕДЕЛЯЕМЫЕ РАСХОДЫ
	Для Каждого СтрокаРасходыВключаемыеВСтоимость Из РасходыВключаемыеВСтоимость Цикл
		СуммаКРаспределению = СтрокаРасходыВключаемыеВСтоимость.Сумма;
		Остаток = СуммаКРаспределению;
		СуммаНДСКРаспределению = СтрокаРасходыВключаемыеВСтоимость.СуммаНДС;
		ОстатокНДС = СуммаНДСКРаспределению;
		ОстатокВ = 0;
		Если СтрокаРасходыВключаемыеВСтоимость.СчетКредит.Валютный Тогда
			СуммаКРаспределениюВ = СтрокаРасходыВключаемыеВСтоимость.ВалютнаяСумма;
			ОстатокВ = СуммаКРаспределениюВ;
		КонецЕсли; 
		//
		ТаблицаНоменклатуры=Номенклатура.Выгрузить();
		Для Каждого СтрокаТаблицаНоменклатуры из ТаблицаНоменклатуры Цикл
			СуммаВПроводку=Окр(СуммаКРаспределению*СтрокаТаблицаНоменклатуры.Сумма/ТаблицаНоменклатуры.Итог("Сумма"),2);
			Остаток=Остаток-СуммаВПроводку;
			СуммаНДСВПроводку=Окр(СуммаНДСКРаспределению*СтрокаТаблицаНоменклатуры.Сумма/ТаблицаНоменклатуры.Итог("Сумма"),2);
			ОстатокНДС=ОстатокНДС-СуммаНДСВПроводку;
			////
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание  = СтрокаРасходыВключаемыеВСтоимость.Описание;     
			Проводка.ПервичныйДокумент = СформироватьОписаниеПервичногоДокумента(СтрокаРасходыВключаемыеВСтоимость.ПриходныйДокумент);     
			//
			Проводка.СчетДт = СтрокаТаблицаНоменклатуры.СчетУчетаБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаТаблицаНоменклатуры.Номенклатура);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
			//
			Проводка.СчетКт = СтрокаРасходыВключаемыеВСтоимость.СчетКредит;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаРасходыВключаемыеВСтоимость.Субконто1);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,СтрокаРасходыВключаемыеВСтоимость.Субконто2);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаРасходыВключаемыеВСтоимость.Субконто3);
			//
			Проводка.Сумма = СуммаВПроводку; 
			//
			Если СтрокаРасходыВключаемыеВСтоимость.СчетКредит.Валютный Тогда
				СуммаВПроводкуВ=окр(СуммаКРаспределениюВ*СтрокаТаблицаНоменклатуры.Сумма/ТаблицаНоменклатуры.Итог("Сумма"),2);
				ОстатокВ=ОстатокВ-СуммаВПроводкуВ;
				Проводка.ВалютнаяСуммаКт = СуммаВПроводкуВ; 
				Проводка.ВалютаКт = СтрокаРасходыВключаемыеВСтоимость.Валюта; 
			КонецЕсли; 
			//НДС
			Если СуммаНДСВПроводку <> 0 Тогда
				Проводка = ПроводкиБУ.Добавить();
				Проводка.Период      = Дата;
				Проводка.Организация = Организация;
				Проводка.Содержание	 = СтрокаРасходыВключаемыеВСтоимость.Описание;     
				Проводка.ПервичныйДокумент = СформироватьОписаниеПервичногоДокумента(СтрокаРасходыВключаемыеВСтоимость.ПриходныйДокумент);     
				//
				Если ПорядокУплатыНДС = Перечисления.ПорядокУплатыНДС.Общеустановленный Тогда
					Проводка.СчетДт = СчетУчетаАвансаПлатежа("НДС");
					УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"СтавкиНДС",СтрокаРасходыВключаемыеВСтоимость.СтавкаНДС);
				Иначе	
					Проводка.СчетДт = СтрокаНоменклатуры.СчетУчетаБУ;
					УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаТаблицаНоменклатуры.Номенклатура);
					УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
				КонецЕсли;	
				//
				Проводка.СчетКт = СтрокаРасходыВключаемыеВСтоимость.СчетКредит;
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаРасходыВключаемыеВСтоимость.Субконто1);
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,СтрокаРасходыВключаемыеВСтоимость.Субконто2);
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаРасходыВключаемыеВСтоимость.Субконто3);
				//
				Проводка.Сумма = СуммаНДСВПроводку; 
			КонецЕсли; 
		КонецЦикла;
		Если Остаток<>0 ИЛИ ОстатокВ<>0 Тогда
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание  = СтрокаРасходыВключаемыеВСтоимость.Описание;     
			Проводка.ПервичныйДокумент = СформироватьОписаниеПервичногоДокумента(СтрокаРасходыВключаемыеВСтоимость.ПриходныйДокумент);     
			//
			Проводка.СчетДт = ТаблицаНоменклатуры[0].СчетУчетаБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,ТаблицаНоменклатуры[0].Номенклатура);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
			//
			Проводка.СчетКт = СтрокаРасходыВключаемыеВСтоимость.СчетКредит;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаРасходыВключаемыеВСтоимость.Субконто1);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,СтрокаРасходыВключаемыеВСтоимость.Субконто2);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаРасходыВключаемыеВСтоимость.Субконто3);
			//
			Проводка.Сумма = Остаток; 
			//
			Если СтрокаРасходыВключаемыеВСтоимость.СчетКредит.Валютный Тогда
				Проводка.ВалютнаяСуммаКт = ОстатокВ; 
				Проводка.ВалютаКт = СтрокаРасходыВключаемыеВСтоимость.Валюта; 
			КонецЕсли; 
		КонецЕсли;
		Если ОстатокНДС <> 0 Тогда
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание  = СтрокаРасходыВключаемыеВСтоимость.Описание;     
			Проводка.ПервичныйДокумент = СформироватьОписаниеПервичногоДокумента(СтрокаРасходыВключаемыеВСтоимость.ПриходныйДокумент);     
			//
			Если ПорядокУплатыНДС = Перечисления.ПорядокУплатыНДС.Общеустановленный Тогда
				Проводка.СчетДт = СчетУчетаАвансаПлатежа("НДС");
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"СтавкиНДС",СтрокаРасходыВключаемыеВСтоимость.СтавкаНДС);
			Иначе	
				Проводка.СчетДт = ТаблицаНоменклатуры[0].СчетУчетаБУ;
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,ТаблицаНоменклатуры[0].Номенклатура);
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
			КонецЕсли;	
			//
			Проводка.СчетКт = СтрокаРасходыВключаемыеВСтоимость.СчетКредит;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаРасходыВключаемыеВСтоимость.Субконто1);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,СтрокаРасходыВключаемыеВСтоимость.Субконто2);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаРасходыВключаемыеВСтоимость.Субконто3);
			//
			Проводка.Сумма = ОстатокНДС; 
		КонецЕсли; 
	КонецЦикла; 
	Для Каждого СтрокаПрочее Из Прочее Цикл
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание	 = СтрокаПрочее.Описание;     
		//
		Проводка.СчетДт = СтрокаПрочее.СчетЗатрат;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаПрочее.Субконто1);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаПрочее.Субконто2);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаПрочее.Субконто3);
		//
		Проводка.СчетКт = СчетУчетаРасчетовСКонтрагентом;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Поставщик);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ДоговорПоставщика);
		//
		Проводка.Сумма = СтрокаПрочее.Сумма; 
		////
		Если СтрокаПрочее.СуммаНДС<>0 Тогда
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание	 = СтрокаПрочее.Описание;     
			//
			Если ПорядокУплатыНДС = Перечисления.ПорядокУплатыНДС.Общеустановленный Тогда
				Проводка.СчетДт = СчетУчетаАвансаПлатежа("НДС");
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"СтавкиНДС",СтрокаПрочее.СтавкаНДС);
			Иначе	
				Проводка.СчетДт = СтрокаПрочее.СчетЗатрат;
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаПрочее.Субконто1);
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаПрочее.Субконто2);
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаПрочее.Субконто3);
			КонецЕсли;	
			//
			Проводка.СчетКт = СчетУчетаРасчетовСКонтрагентом;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Поставщик);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ДоговорПоставщика);
			//
			Проводка.Сумма = СтрокаПрочее.СуммаНДС; 
		КонецЕсли; 
	КонецЦикла; 
	Если ЗачестьАванс Тогда
		Движения.Хозрасчетный.Записать();
		ЗачетАвансов.ВыполнитьЗакрытиеАвансов(ЭтотОбъект, СчетУчетаРасчетовСКонтрагентом, Поставщик,ДоговорПоставщика);
	КонецЕсли;
КонецПроцедуры

Процедура ДвиженияПоНДС(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	ПорядокУплатыНДС = ПолучитьПорядокУплатыНДС(Дата,Организация);
	ТаблицаЗачетаНДС=СоздатьТаблицуДляУчетаНДС();
	ТаблицаНоменклатуры=Номенклатура.Выгрузить();
	// ПОДГОТОВКА ТАБЛИЦЫ ПО ДАННЫМ Т.Ч.СПИСКИ
	тСписки = Новый ТаблицаЗначений;
	тСписки.Колонки.Добавить("С1");
	тСписки.Колонки.Добавить("С2");
	тСписки.Колонки.Добавить("С3");
	тСписки.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число",, Новый КвалификаторыЧисла(19,2)));
	тСписки.Колонки.Добавить("СуммаНДС",   Новый ОписаниеТипов("Число",, Новый КвалификаторыЧисла(19,2)));
	Для каждого СтрокаСписков Из Списки Цикл
		Если СтрокаСписков.Акциз<>0 Тогда
			НоваяСтрока = тСписки.Добавить();
			НоваяСтрока.С1 = СтрокаСписков.АкцизС1;
			НоваяСтрока.С2 = СтрокаСписков.АкцизС2;
			НоваяСтрока.С3 = СтрокаСписков.АкцизС3;
			НоваяСтрока.Сумма = СтрокаСписков.Акциз;
		КонецЕсли; 
		Если СтрокаСписков.ТП<>0 Тогда
			НоваяСтрока = тСписки.Добавить();
			НоваяСтрока.С1 = СтрокаСписков.ТПС1;
			НоваяСтрока.С2 = СтрокаСписков.ТПС2;
			НоваяСтрока.С3 = СтрокаСписков.ТПС3;
			НоваяСтрока.Сумма = СтрокаСписков.ТП;
		КонецЕсли; 
		Если СтрокаСписков.НДС<>0 Тогда
			НоваяСтрока = тСписки.Добавить();
			НоваяСтрока.С1 = СтрокаСписков.НДСС1;
			НоваяСтрока.С2 = СтрокаСписков.НДСС2;
			НоваяСтрока.С3 = СтрокаСписков.НДСС3;
			НоваяСтрока.СуммаНДС = СтрокаСписков.НДС;
		КонецЕсли; 
	КонецЦикла;
	тСписки.Свернуть("С1, С2, С3", "Сумма, СуммаНДС");
	//
	Для каждого СтрокаСписков Из тСписки Цикл
		Движение = ТаблицаЗачетаНДС.Добавить();
		Движение.Период				= ?(ЗначениеЗаполнено(ПриходныйДокументДата),ПриходныйДокументДата,Дата);
		Движение.Организация		= Организация;
		Движение.Получатель			= Склад;
		Движение.Сумма				= СтрокаСписков.Сумма;
		Движение.СуммаНДС			= СтрокаСписков.СуммаНДС;
		Движение.СуммаНДСПоУслугам	= 0;
		Движение.Поставщик			= СтрокаСписков.С1;
		Движение.Договор			= СтрокаСписков.С2;
		Движение.ПриходныйДокумент	= ПриходныйДокумент;
		Движение.ЗачетНДС			= ПолучитьТипЗачетаНДС(ТаблицаНоменклатуры[0].СчетУчетаБУ, Истина);
		Движение.ПорядокУплатыНДС	= ПорядокУплатыНДС;
	КонецЦикла; 
	Для каждого СтрокаНоменклатуры Из ТаблицаНоменклатуры Цикл
		Движение = ТаблицаЗачетаНДС.Добавить();
		Движение.Период				= ?(ЗначениеЗаполнено(ПриходныйДокументДата),ПриходныйДокументДата,Дата);
		Движение.Организация		= Организация;
		Движение.Получатель			= Склад;
		Движение.Сумма				= СтрокаНоменклатуры.Сумма;
		Движение.СуммаНДС			= 0;
		Движение.СуммаНДСПоУслугам	= 0;
		Движение.Поставщик			= Поставщик;
		Движение.Договор			= ДоговорПоставщика;
		Движение.ПриходныйДокумент	= ПриходныйДокумент;
		Движение.ЗачетНДС			= ПолучитьТипЗачетаНДС(СтрокаНоменклатуры.СчетУчетаБУ, Истина);
		Движение.ПорядокУплатыНДС	= ПорядокУплатыНДС;
	КонецЦикла; 	
	Для каждого Расход Из РасходыВключаемыеВСтоимость Цикл
		Если Расход.СчетКредит.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.А1500) Тогда
			Продолжить;
		КонецЕсли;	
		Движение = ТаблицаЗачетаНДС.Добавить();
		Движение.Период				= ?(ЗначениеЗаполнено(Расход.ПриходныйДокументДата),Расход.ПриходныйДокументДата,Дата);
		Движение.Организация		= Организация;
		Движение.Получатель			= Склад;
		Движение.Сумма				= Расход.Сумма;
		Движение.СуммаНДС			= Расход.СуммаНДС;
		Движение.СуммаНДСПоУслугам	= 0;
		Движение.Поставщик			= Расход.Субконто1;
		Движение.Договор			= Расход.Субконто2;
		Движение.ПриходныйДокумент	= Расход.ПриходныйДокумент;
		Движение.ЗачетНДС			= ПолучитьТипЗачетаНДС(ТаблицаНоменклатуры[0].СчетУчетаБУ, Истина);
		Движение.СтавкаНДС			= Расход.СтавкаНДС;
		Движение.ПорядокУплатыНДС	= ПорядокУплатыНДС;
	КонецЦикла; 
	Для каждого ПрочийРасход Из Прочее Цикл
		Если ПрочийРасход.СчетЗатрат.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.А1500) Тогда
			Продолжить;
		КонецЕсли;	
		Движение = ТаблицаЗачетаНДС.Добавить();
		Движение.Период				= ?(ЗначениеЗаполнено(ПриходныйДокументДата),ПриходныйДокументДата,Дата);
		Движение.Организация		= Организация;
		Движение.Получатель			= ПрочийРасход.Субконто1;
		Движение.Сумма				= ПрочийРасход.Сумма;
		Движение.СуммаНДС			= ПрочийРасход.СуммаНДС;
		Движение.Поставщик			= Поставщик;
		Движение.Договор			= ДоговорПоставщика;
		Движение.ПриходныйДокумент	= ПриходныйДокумент;
		Движение.ЗачетНДС			= ПолучитьТипЗачетаНДС(ПрочийРасход.СчетЗатрат, Истина);
		Движение.СтавкаНДС			= ПрочийРасход.СтавкаНДС;
		Движение.ПорядокУплатыНДС	= ПорядокУплатыНДС;
	КонецЦикла; 
	ТаблицаЗачетаНДС.Свернуть("Период,Организация,Получатель,Поставщик,Договор,ПриходныйДокумент,ЗачетНДС,СтавкаНДС,ПорядокУплатыНДС","Сумма,СуммаНДС,СуммаНДСПоУслугам,СуммаНДСПоИмпорту");	
	Движения.УчетЗачетаНДС.Загрузить(ТаблицаЗачетаНДС);
КонецПроцедуры
