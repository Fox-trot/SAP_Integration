////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНД ФОРМЫ


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ПОЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ЭлектронныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ЭлектронныеДокументыОбъектВладелец" Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.ОбъектВладелец);
		
	ИначеЕсли ТипЗнч(Элемент.ТекущиеДанные.ЭлектронныйДокумент) = Тип("СправочникСсылка.ЭДПрисоединенныеФайлы") Тогда
		СтандартнаяОбработка = Ложь;
		ЭлектронныеДокументыСлужебныйКлиент.ОткрытьЭДДляПросмотра(Элемент.ТекущиеДанные.ЭлектронныйДокумент);
	
	Иначе
		ПоказатьЗначение(, Элемент.ТекущиеДанные.ЭлектронныйДокумент);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Элементы.АдресРесурсаКонтрагента.Видимость   = Ложь;
	Элементы.АдресРесурсаОрганизации.Видимость   = Ложь;
	
	СтатусПакета = Объект.СтатусПакета;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтатусПакета = Объект.СтатусПакета;
	ЗаполнитьСписокВыбораСтатусовПакета();
	
	ОбновитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьОтображениеЭлементовФормы();

	ПроверкаАктуальностиВерсииЭДНачало();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВерсиюЭД(Команда)
	
	ПроверкаАктуальностиВерсииЭДЗавершение(КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаАктуальностиВерсииЭДНачало()
	
	//Оповещение = Новый ОписаниеОповещения("ПроверкаАктуальностиВерсииЭДЗавершение", Объект); 	
	//
	//ПоказатьВопрос(Оповещение, "Версия ЭД устарела. Загрузить актуальную версию?", РежимДиалогаВопрос.ДаНет, КодВозвратаДиалога.Да, "Didox.uz");
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаАктуальностиВерсииЭДЗавершение(Результат, Параметры = Неопределено) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		РезультатЗагрузки = ЗагрузитьАктуальнуюВерсиюЭДНаСервере();
		//
		Если НЕ РезультатЗагрузки Тогда
			Элементы.НадписьАктуальностьВерсииЭД.Заголовок = "Версия ЭД устарела";
			Элементы.НадписьАктуальностьВерсииЭД.ЦветТекста = Новый Цвет(255, 0, 0);
		Иначе
			// Загружаем подписи
			ЭлектронныеДокументыСлужебныйКлиент.venkonПерезагрузитьПодписи(Объект.Ссылка);
			
			Элементы.НадписьАктуальностьВерсииЭД.Заголовок = "Версия ЭД актуальна";
			Элементы.НадписьАктуальностьВерсииЭД.ЦветТекста = Новый Цвет(83, 106, 194);
		КонецЕсли;
		
		Элементы.ОбновитьВерсиюЭД.Доступность = НЕ РезультатЗагрузки;
		//
		ТекстСообщения = ?(РезультатЗагрузки, "Документ обновлен до актуальной версии!", "Невозможно обновить документ из сервера! Попробуйте позже.");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьАктуальнуюВерсиюЭДНаСервере()
	
	 Возврат Документы.ПакетЭД.ЗагрузитьАктуальнуюВерсиюЭД(Объект.Ссылка);
	
КонецФункции


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ТекущийОбъект.СтатусПакета = СтатусПакета Тогда
		ТекущийОбъект.СтатусПакета = СтатусПакета;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУЫ И ФУНКЦИИ

&НаСервере
Процедура ЗаполнитьСписокВыбораСтатусовПакета()
	
	Если Объект.Направление = Перечисления.НаправленияЭД.Входящий Тогда
		Элементы.СтатусПакета.СписокВыбора.ЗагрузитьЗначения(СписокСтатусовВходящий());
	Иначе
		Элементы.СтатусПакета.СписокВыбора.ЗагрузитьЗначения(СписокСтатусовИсходящий());
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокСтатусовВходящий()
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.КРаспаковке);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Распакован);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.РаспакованДокументыНеОбработаны);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Неизвестный);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Отменен);
	
	Возврат МассивСтатусов;
	
КонецФункции

&НаСервереБезКонтекста
Функция СписокСтатусовИсходящий()
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Доставлен);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Отправлен);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.ПодготовленКОтправке);
	МассивСтатусов.Добавить(Перечисления.СтатусыПакетовЭД.Отменен);
	
	Возврат МассивСтатусов;
	
КонецФункции

&НаСервере
Процедура ОбновитьВидимостьДоступность()
	
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументУчетаНаСервере()
	
	МассивПакетовЭД = Новый Массив;
	МассивПакетовЭД.Добавить(Объект.Ссылка);
	
	Документы.ПакетЭД.СоздатьДокументыУчетаПоДаннымПакетовЭД(МассивПакетовЭД);
	
	Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаДокументУчетаНажатие(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДокументУчета) Тогда
		
		ПоказатьЗначение(, Объект.ДокументУчета);
		
	Иначе
		
		//СоздатьДокументУчетаНаСервере();
		ОбновитьОтображениеЭлементовФормы();
		
		Оповестить("ОбновитьСостояниеЭД");

	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеЭлементовФормы()
	
	ЗаголовокГиперссылки = "";
	Если ЗначениеЗаполнено(Объект.ДокументУчета) Тогда
		ЗаголовокГиперссылки = Строка(Объект.ДокументУчета);
	Иначе
		
		СостояниеВерсииЭД = ЭлектронныеДокументыСлужебныйВызовСервера.venkonСостояниеВерсииЭД(Объект.Ссылка);
		ЭтоНашДокумент = НЕ (Объект.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭД.Исходящий") 
					И ТипЗнч(Объект.ВладелецФайла) = Тип("ДокументСсылка.ПакетЭД"));
		
		Если Не ЭтоНашДокумент
			И Объект.Направление = ПредопределенноеЗначение("Перечисление.НаправленияЭД.Исходящий")
			И СостояниеВерсииЭД = ПредопределенноеЗначение("Перечисление.СостоянияВерсийЭД.Подписан") Тогда
			
			ЗаголовокГиперссылки = "Создать документ учета";
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ГиперссылкаДокументУчета.Заголовок = ЗаголовокГиперссылки;
	
	Если Объект.НеобходимоЗагрузитьЭДССервера Тогда
		Элементы.НадписьАктуальностьВерсииЭД.Заголовок = "Версия ЭД устарела";
		Элементы.НадписьАктуальностьВерсииЭД.ЦветТекста = Новый Цвет(255, 0, 0);
	Иначе
		Элементы.НадписьАктуальностьВерсииЭД.Заголовок = "Версия ЭД актуальна";
		Элементы.НадписьАктуальностьВерсииЭД.ЦветТекста = Новый Цвет(83, 106, 194);
	КонецЕсли;
	
	Элементы.ОбновитьВерсиюЭД.Доступность = Объект.НеобходимоЗагрузитьЭДССервера;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбновитьОтображениеЭлементовФормы();
	
КонецПроцедуры
