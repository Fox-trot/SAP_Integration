
Процедура СоздатьДокументыУчетаПоДаннымПакетовЭД(МассивПакетовЭД) Экспорт
	
	Для Каждого СсылкаНаПакетЭД Из МассивПакетовЭД Цикл
		
		Если Не ЗначениеЗаполнено(СсылкаНаПакетЭД) 
			ИЛИ Не ТипЗнч(СсылкаНаПакетЭД) = Тип("ДокументСсылка.ПакетЭД") Тогда
			Продолжить;
		КонецЕсли;
		
		ПакетЭД = СсылкаНаПакетЭД.ПолучитьОбъект();

		Если ЗначениеЗаполнено(ПакетЭД.ДокументУчета) Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураВерсииЭД = ЭлектронныеДокументыСлужебный.venkonПолучитьСостояниеЭДИзРегистра(СсылкаНаПакетЭД);
		
		ЭтоНашДокумент = НЕ (ПакетЭД.Направление = Перечисления.НаправленияЭД.Исходящий	И ТипЗнч(ПакетЭД.ВладелецФайла) = Тип("ДокументСсылка.ПакетЭД"));

		Если Не ЭтоНашДокумент 
			И (ПакетЭД.Направление = Перечисления.НаправленияЭД.Исходящий
					И СтруктураВерсииЭД.СостояниеВерсииЭД = Перечисления.СостоянияВерсийЭД.Подписан) Тогда
			
			СтруктураДанныхЭД = ЭлектронныеДокументыВнутренний.venkonВернутьМассивДвоичныхДанныхПакета(СсылкаНаПакетЭД, Ложь);
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("ФайлДанныхСсылка", ПоместитьВоВременноеХранилище(СтруктураДанныхЭД.ДвоичныеДанныеДокумента, СсылкаНаПакетЭД.УникальныйИдентификатор()));
			СтруктураПараметров.Вставить("НаправлениеЭД", ПакетЭД.Направление);
			
			СтруктураВозврата = ЭлектронныеДокументыВнутренний.ПолучитьДанныеИзФайла(СтруктураПараметров);
			
			ПакетЭД.ДокументУчета = СтруктураВозврата.ВладелецЭД;

		Иначе
			
			ПакетЭД.ДокументУчета = ПакетЭД.ВладелецФайла;
			
		КонецЕсли;
		
		ПакетЭД.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ЗагрузитьАктуальнуюВерсиюЭД(ПакетЭД) Экспорт
	
	HTTPСоединение = ЭлектронныеДокументыВнутренний.ПолучитьСоединение();
	ФайлЭД = ЭлектронноеВзаимодействиеССерверомDidox.ПолучитьЭД(ПакетЭД.ПрофильНастроекЭДО, HTTPСоединение, ПакетЭД.ВнешнийУИД);
	
	Если ФайлЭД = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДвоичныеДанныеЭлемента = Новый ДвоичныеДанные(ФайлЭД);
	ПрисоединенныйФайл = ЭлектронныеДокументыВнутренний.ПолучитьПрисоединенныйФайлПакетаЭД(ПакетЭД);
	
	Если ПрисоединенныйФайл <> Неопределено Тогда
		
		ИмяФайла = "EDI_" + ПакетЭД.ВнешнийУИД;
		АдресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанныеЭлемента);
		
		ПрисоединенныйФайлОбъект = ПрисоединенныйФайл.ПолучитьОбъект();
		
		Если ПрисоединенныйФайл.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе Тогда
			СвояТранзакцияОткрыта = Истина;
			ПрисоединенныеФайлыСлужебный.ЗаписатьФайлВИнформационнуюБазу(ПрисоединенныйФайл, ДвоичныеДанныеЭлемента);
			ПрисоединенныйФайлОбъект.Том = Справочники.ТомаХраненияФайлов.ПустаяСсылка();
			ПрисоединенныйФайлОбъект.ПутьКФайлу = "";
			ПрисоединенныйФайлОбъект.Наименование = ИмяФайла;
			ПрисоединенныйФайлОбъект.НаименованиеФайла = ИмяФайла;
			ПрисоединенныйФайлОбъект.Расширение = "zip";
		Иначе
			// Добавление в один из томов (где есть свободное место).
			ФайловыеФункцииСлужебный.ДобавитьНаДиск(
			ДвоичныеДанныеЭлемента,
			ПрисоединенныйФайлОбъект.ПутьКФайлу,
			ПрисоединенныйФайлОбъект.Том,
			ТекущаяДатаСеанса(),
			"",
			ИмяФайла,
			"zip",
			ПрисоединенныйФайлОбъект.Размер,
			ПрисоединенныйФайлОбъект.Зашифрован);
		КонецЕсли;
		//ПрисоединенныйФайлОбъект.НаправлениеЭД = Перечисления.НаправленияЭД.Исходящий;
		ПрисоединенныйФайлОбъект.Записать();
		
		// Снимаем признак
		ПакетЭДОбъект = ПакетЭД.ПолучитьОбъект();
		ПакетЭДОбъект.НеобходимоЗагрузитьЭДССервера = Ложь;
		ПакетЭДОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ВключитьПризнакНеобходимостиОбновленияЭД(ПакетЭД) Экспорт
	
	ПакетЭДОбъект = ПакетЭД.ПолучитьОбъект();
	ПакетЭДОбъект.НеобходимоЗагрузитьЭДССервера = Истина;
	ПакетЭДОбъект.Записать(РежимЗаписиДокумента.Запись);
	
КонецПроцедуры
