
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	Возврат Новый Структура("СчетФактура","Счет-фактура");
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	Если ИмяМакета="СчетФактура" Тогда
		ТабДокумент = ПечатьСчетФактура();
	КонецЕсли; 
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Счет-фактура");
КонецПроцедуры

Функция ПечатьСчетФактура()
	
	ТабДок = Новый ТабличныйДокумент;
	
	Если Дата<Дата(2019,1,22) Тогда
		Макет = ПолучитьМакет("СчетФактура2017");
	Иначе 	
		Макет = ПолучитьМакет("СчетФактура");
	КонецЕсли;
	
	СведенияОбОрганизации = СведенияОЮрФизЛице(Организация, БанковскийСчет, Дата);
	СведенияОКонтрагенте  = СведенияОЮрФизЛице(Контрагент, БанковскийСчетКонтрагента, Дата);
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ДоговорПродажи	= ДоговорКонтрагента.Наименование;
	Область.Параметры.Номер				= ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Дата				= Формат(Дата,"ДЛФ=D")+" г.";
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(СведенияОбОрганизации);
	Область.Параметры.Заполнить(СведенияОКонтрагенте);
	Область.Параметры.Валюта = Валюта.Наименование;
	Область.Параметры.Курс   = Формат(Курс,"ЧДЦ=2");
	ТабДок.Вывести(Область);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Номенклатура,
	|	РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Количество,
	|	РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Сумма КАК Сумма,
	|	РеализацияНоменклатурыПродажЗаВалютуНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Цена КАК Цена,
	|	РеализацияНоменклатурыПродажЗаВалютуНоменклатура.СуммаНДС КАК СуммаНДС,
	|	РеализацияНоменклатурыПродажЗаВалютуНоменклатура.СтавкаНДС,
	|	ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Сумма * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2)) КАК СуммаСум,
	|	ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Цена * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2)) КАК ЦенаСум,
	|	ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуНоменклатура.СуммаНДС * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2)) КАК СуммаНДССум,
	|	РеализацияНоменклатурыПродажЗаВалютуНоменклатура.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияНоменклатурыПродажЗаВалютуНоменклатура.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Сумма + РеализацияНоменклатурыПродажЗаВалютуНоменклатура.СуммаНДС
	|	КОНЕЦ КАК Всего,
	|	ВЫБОР
	|		КОГДА РеализацияНоменклатурыПродажЗаВалютуНоменклатура.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Сумма * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2))) + (ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуНоменклатура.СуммаНДС * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2)))
	|	КОНЕЦ КАК ВсегоСум,
	|	РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Сумма + РеализацияНоменклатурыПродажЗаВалютуНоменклатура.СуммаНДС КАК СуммаСУчетомАкцизаИНДС,
	|	(ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Сумма * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2))) + (ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуНоменклатура.СуммаНДС * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2))) КАК СуммаСУчетомАкцизаИНДССум
	|ИЗ
	|	Документ.РеализацияНоменклатурыПродажЗаВалюту.Номенклатура КАК РеализацияНоменклатурыПродажЗаВалютуНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияНоменклатурыПродажЗаВалюту КАК РеализацияНоменклатурыПродажЗаВалюту
	|		ПО РеализацияНоменклатурыПродажЗаВалютуНоменклатура.Ссылка = РеализацияНоменклатурыПродажЗаВалюту.Ссылка
	|ГДЕ
	|	РеализацияНоменклатурыПродажЗаВалюту.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияНоменклатурыПродажЗаВалютуУслуги.Услуга,
	|	NULL,
	|	РеализацияНоменклатурыПродажЗаВалютуУслуги.Сумма,
	|	РеализацияНоменклатурыПродажЗаВалютуУслуги.Услуга.БазоваяЕдиницаИзмерения,
	|	NULL,
	|	РеализацияНоменклатурыПродажЗаВалютуУслуги.СуммаНДС,
	|	РеализацияНоменклатурыПродажЗаВалютуУслуги.СтавкаНДС,
	|	ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуУслуги.Сумма * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2)),
	|	NULL,
	|	ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуУслуги.СуммаНДС * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2)),
	|	NULL,
	|	ВЫБОР
	|		КОГДА РеализацияНоменклатурыПродажЗаВалютуУслуги.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ РеализацияНоменклатурыПродажЗаВалютуУслуги.Сумма + РеализацияНоменклатурыПродажЗаВалютуУслуги.СуммаНДС
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РеализацияНоменклатурыПродажЗаВалютуУслуги.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ (ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуУслуги.Сумма * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2))) + (ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуУслуги.СуммаНДС * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2)))
	|	КОНЕЦ,
	|	РеализацияНоменклатурыПродажЗаВалютуУслуги.Сумма + РеализацияНоменклатурыПродажЗаВалютуУслуги.СуммаНДС,
	|	(ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуУслуги.Сумма * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2))) + (ВЫРАЗИТЬ(РеализацияНоменклатурыПродажЗаВалютуУслуги.СуммаНДС * РеализацияНоменклатурыПродажЗаВалюту.Курс КАК ЧИСЛО(18, 2)))
	|ИЗ
	|	Документ.РеализацияНоменклатурыПродажЗаВалюту.Услуги КАК РеализацияНоменклатурыПродажЗаВалютуУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияНоменклатурыПродажЗаВалюту КАК РеализацияНоменклатурыПродажЗаВалюту
	|		ПО РеализацияНоменклатурыПродажЗаВалютуУслуги.Ссылка = РеализацияНоменклатурыПродажЗаВалюту.Ссылка
	|ГДЕ
	|	РеализацияНоменклатурыПродажЗаВалюту.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	|	СУММА(СуммаСум),
	|	СУММА(СуммаНДССум),
	|	СУММА(Всего),
	|	СУММА(ВсегоСум),
	|	СУММА(СуммаСУчетомАкцизаИНДС),
	|	СУММА(СуммаСУчетомАкцизаИНДССум)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка );
	
	Результат    = Запрос.Выполнить();
	ВыборкаОбщие = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщие.Следующий();
	
	номерСтроки = 0;
	
	Выборка = ВыборкаОбщие.Выбрать();
	Пока Выборка.Следующий() Цикл
		номерСтроки = номерСтроки+1;
		Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС ИЛИ
			 Выборка.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка()Тогда
			Область = Макет.ПолучитьОбласть("СтрокаБезНДС");
		Иначе	
			Область = Макет.ПолучитьОбласть("Строка");                          
		КонецЕсли;
		
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.номерСтроки=номерСтроки;
		ТабДок.Вывести(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Валюта = Валюта;
	Область.Параметры.Заполнить(ВыборкаОбщие);
	
	Всего	 = ВыборкаОбщие.Сумма	 + ВыборкаОбщие.СуммаНДС;
	ВсегоСум = ВыборкаОбщие.СуммаСум + ВыборкаОбщие.СуммаНДССум;
	Область.Параметры.ВсегоПрописьюВВалюте	= СформироватьСуммуПрописью(Всего, Валюта);
	Область.Параметры.ВсегоПрописью			= СформироватьСуммуПрописью(ВсегоСум, Константы.ВалютаРегламентированногоУчета.Получить());
	Если Дата<Дата(2019,1,22) Тогда
		Область.Параметры.Доверенность	= Доверенность;
		Область.Параметры.Получатель	= Получатель;
	КонецЕсли;
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
    Область.Параметры.Заполнить(Руководители);
	ТабДок.Вывести(Область);
	
	ТабДок.ФиксацияСверху			= 0;
	ТабДок.ФиксацияСлева			= 0;
	ТабДок.ЭкземпляровНаСтранице	= 1;
	ТабДок.ТолькоПросмотр			= Истина;
	ТабДок.Автомасштаб				= Истина;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	ТабДок.КлючПараметровПечати="КПП_РеализацияНоменклатурыПродажЗаВалюту";
	
	Возврат ТабДок;
	
КонецФункции // ПечатьСчетФактура()

////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("БанковскийСчет","Не выбран вид банковский счет");
	СтруктураОбязательныхПолей.Вставить("Контрагент","Не выбран вид контрагент");
	СтруктураОбязательныхПолей.Вставить("Валюта","Не выбрана валюта");
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	//
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	СтруктураПолей.Вставить("СчетУчетаБУ","Не выбран счет учета номенклатуры");
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Номенклатура", СтруктураПолей, Отказ, Заголовок);
	//
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Услуга","Не выбрана услуга");
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Услуги", СтруктураПолей, Отказ, Заголовок);
КонецПроцедуры

Процедура ДвиженияПоРегистрамБУ(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента)
	ТаблицаИСФ = СоздатьТаблицуИСФ();
	ТаблицаОстатков = Новый ТаблицаЗначений;
	ЗаполнитьТаблицуОстатковНоменклатурыПродаж(ТаблицаОстатков,ЭтотОбъект,Склад,Организация,"СчетУчетаБУ");
	Для Каждого СтрокиНоменклатура Из Номенклатура Цикл
		КоличествоВПроводку=ПеревестиКоличествоВЕдиницуХраненияОстатка(СтрокиНоменклатура.Количество,СтрокиНоменклатура.Номенклатура,СтрокиНоменклатура.ЕдиницаИзмерения);
		Себестоимость=0;
		//
		СтрокаОстатков=ТаблицаОстатков.Найти(СтрокиНоменклатура.Номенклатура,"Субконто1");
		Если СтрокаОстатков<>неопределено Тогда
			Если СтрокаОстатков.КоличествоОстатокДт=СтрокиНоменклатура.Количество Тогда
				Себестоимость=СтрокаОстатков.СуммаОстатокДт;							
			ИначеЕсли СтрокаОстатков.КоличествоОстатокДт<>0 Тогда
				Себестоимость=СтрокаОстатков.СуммаОстатокДт/СтрокаОстатков.КоличествоОстатокДт*СтрокиНоменклатура.Количество;							
			КонецЕсли; 		
		КонецЕсли; 
		//
		Если СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Продукция Тогда
			СчетСебестоимости = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9110");
			СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9010");
		ИначеЕсли СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Товар Тогда
			СчетСебестоимости = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9120");
			СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9020");
		ИначеЕсли СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Работа ИЛИ
				  СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Услуга Тогда
			СчетСебестоимости = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9130");
			СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9030");
		КонецЕсли;	
		//
		Если СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Продукция ИЛИ
			 СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Товар Тогда
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание	 = "";     
			//
			Проводка.СчетДт = СчетСебестоимости;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокиНоменклатура.Номенклатура);
			//
			Проводка.СчетКт = СтрокиНоменклатура.СчетУчетаБУ;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокиНоменклатура.Номенклатура);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
			Проводка.КоличествоКт = КоличествоВПроводку; 
			//
			Если СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Товар Тогда
				Проводка.Сумма = Себестоимость; 
				//
				Движение = Движения.СебестоимостьПродажи.Добавить();
				Движение.Период				= Дата;
				Движение.Организация		= Организация;
				Движение.Контрагент			= Контрагент;
				Движение.Договор			= ДоговорКонтрагента;
				Движение.Номенклатура		= СтрокиНоменклатура.Номенклатура;
				Движение.ВидОборота			= Перечисления.ВидыОборотовПоПродажам.Реализация;
				Движение.Количество			= СтрокиНоменклатура.Количество;
				Движение.Сумма				= Себестоимость;
				Движение.ДокументРеализации	= Ссылка;
			КонецЕсли;
		КонецЕсли;
		////
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание	 = "";     
		//
		Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентомБУ;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
		Проводка.ВалютаДт = Валюта;
		Проводка.ВалютнаяСуммаДт = СтрокиНоменклатура.Сумма;		
		//
		Проводка.СчетКт = СчетПрибыли;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокиНоменклатура.Номенклатура);
		//
		Проводка.Сумма = СтрокиНоменклатура.Сумма*Курс;
		////
		Если СтрокиНоменклатура.СуммаНДС<>0 Тогда
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание	 = "";     
			//
			Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентомБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
			Проводка.ВалютаДт = Валюта;
			Проводка.ВалютнаяСуммаДт = СтрокиНоменклатура.СуммаНДС;		
			//
			Проводка.СчетКт = СчетУчетаПлатежа("НДС");
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"СтавкиНДС",СтрокиНоменклатура.СтавкаНДС);
			//
			Проводка.Сумма = СтрокиНоменклатура.СуммаНДС*Курс; 
		КонецЕсли; 
		////
		Движение = ТаблицаИСФ.Добавить();
		Движение.Период				= Дата;
		Движение.Организация		= Организация;
		Движение.Контрагент			= Контрагент;
		Движение.Ссылка				= Ссылка;
		Движение.Документ			= ПолучитьНомерНаПечать(Ссылка.ПолучитьОбъект())+" от "+Формат(Ссылка.Дата, "ДФ='dd.MM.yyyy ""г.""'");
		Движение.ДокументНомер		= ПолучитьНомерНаПечать(Ссылка.ПолучитьОбъект());
		Движение.ДокументДата		= Дата;
		Движение.СтавкаНДС			= СтрокиНоменклатура.СтавкаНДС;
		Движение.ВидДеятельностиНДС	= СтрокиНоменклатура.Номенклатура.ВидДеятельностиНДС;
		Движение.ПорядокУплатыНДС	= ПолучитьПорядокУплатыНДС(Дата,Организация);
		Движение.Сумма				= СтрокиНоменклатура.Сумма*Курс;
		Движение.СуммаНДС			= СтрокиНоменклатура.СуммаНДС*Курс;
		Движение.Всего				= СтрокиНоменклатура.Всего*Курс;
	КонецЦикла;
	////
	СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9030");
	Для Каждого СтрокиУслуги Из Услуги Цикл
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание	 = "";     
		//
		Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентомБУ;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
		Проводка.ВалютаДт = Валюта;
		Проводка.ВалютнаяСуммаДт = СтрокиУслуги.Сумма;		
		//
		Проводка.СчетКт = СчетПрибыли;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокиУслуги.Услуга);
		//
		Проводка.Сумма = СтрокиУслуги.Сумма*Курс;
		////
		Если СтрокиУслуги.СуммаНДС<>0 Тогда
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание	 = "";     
			//
			Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентомБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
			Проводка.ВалютаДт = Валюта;
			Проводка.ВалютнаяСуммаДт = СтрокиУслуги.СуммаНДС;		
			//
			Проводка.СчетКт = СчетУчетаПлатежа("НДС");
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"СтавкиНДС",СтрокиУслуги.СтавкаНДС);
			//
			Проводка.Сумма = СтрокиУслуги.СуммаНДС*Курс; 
		КонецЕсли; 
		////
		Движение = ТаблицаИСФ.Добавить();
		Движение.Период				= Дата;
		Движение.Организация		= Организация;
		Движение.Контрагент			= Контрагент;
		Движение.Ссылка				= Ссылка;
		Движение.Документ			= ПолучитьНомерНаПечать(Ссылка.ПолучитьОбъект())+" от "+Формат(Ссылка.Дата, "ДФ='dd.MM.yyyy ""г.""'");
		Движение.ДокументНомер		= ПолучитьНомерНаПечать(Ссылка.ПолучитьОбъект());
		Движение.ДокументДата		= Дата;
		Движение.СтавкаНДС			= СтрокиУслуги.СтавкаНДС;
		Движение.ВидДеятельностиНДС	= СтрокиУслуги.Услуга.ВидДеятельностиНДС;
		Движение.ПорядокУплатыНДС	= ПолучитьПорядокУплатыНДС(Дата,Организация);
		Движение.Сумма				= СтрокиУслуги.Сумма*Курс;
		Движение.СуммаНДС			= СтрокиУслуги.СуммаНДС*Курс;
		Движение.Всего				= СтрокиУслуги.Всего*Курс;
	КонецЦикла;
	ТаблицаИСФ.Свернуть("Период,Организация,Контрагент,Ссылка,Документ,ДокументНомер,ДокументДата,СтавкаНДС,ВидДеятельностиНДС,ПорядокУплатыНДС","Сумма,СуммаНДС,Всего");	
	Движения.ИсходящиеСчетаФактуры.Загрузить(ТаблицаИСФ);
	Если ЗачестьАванс Тогда
		Движения.Хозрасчетный.Записать();
		ЗачетАвансов.ВыполнитьЗакрытиеАвансов(ЭтотОбъект, СчетУчетаРасчетовСКонтрагентомБУ, Контрагент,ДоговорКонтрагента);
	КонецЕсли;
КонецПроцедуры	 

Процедура ДвиженияПоРегистрам(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента)
	Для Каждого Строка Из Номенклатура Цикл
		Движение = Движения.Продажи.Добавить();
		Движение.Период			 = Дата;
		Движение.Организация	 = Организация;
		Движение.Склад			 = Склад;
		Движение.Контрагент		 = Контрагент;
		Движение.Договор		 = ДоговорКонтрагента;
		Движение.Номенклатура	 = Строка.Номенклатура;
		Движение.ВидОборота		 = Перечисления.ВидыОборотовПоПродажам.Реализация;
		Движение.Валюта			 = Валюта;
		Движение.Количество		 = Строка.Количество*Строка.ЕдиницаИзмерения.Коэффициент;
		Движение.Сумма			 = Строка.Сумма*Курс;
		Движение.СуммаНДС		 = Строка.СуммаНДС*Курс;
		Движение.СуммаВВалюте	 = Строка.Сумма;
		Движение.СуммаНДСВВалюте = Строка.СуммаНДС;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Для Каждого СтрокаТЧ Из Номенклатура Цикл
		Если СтрокаТЧ.Всего=0 Тогда
			СтрокаТЧ.Всего = СтрокаТЧ.Сумма+СтрокаТЧ.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТЧ Из Услуги Цикл
		Если СтрокаТЧ.Всего=0 Тогда
			СтрокаТЧ.Всего = СтрокаТЧ.Сумма+СтрокаТЧ.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	СуммаПоДокументу=Номенклатура.Итог("Всего")+Услуги.Итог("Всего");
	КоличествоПоДокументу=0;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);	
	ПроверитьОстаткиНоменклатурыПродаж(Отказ,ЭтотОбъект,Номенклатура,Склад,Организация,"СчетУчетаБУ");
	//
	ДвиженияПоРегистрамБУ(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	ДвиженияПоРегистрам(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
КонецПроцедуры
