// Текущие курс и кратность валюты документа для расчетов
Перем КурсДокумента Экспорт;
Перем КратностьДокумента Экспорт;
Перем мВалютаРегламентированногоУчета Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Функция РубКоп(Сумма,Валюта)
	Руб=Цел(Сумма);
	Коп=ОКР(100*(Сумма-Руб),0,1);
	Если Валюта.Код="860" Тогда
		СуммаРубКоп=""+Руб+" сум. "+Цел(Коп/10)+(Коп-10*Цел(Коп/10))+" т.";
	ИначеЕсли Валюта.Код="840" Тогда
		СуммаРубКоп=""+Руб+" дол. США. "+Цел(Коп/10)+(Коп-10*Цел(Коп/10))+" цент";
	ИначеЕсли Валюта.Код="978" Тогда
		СуммаРубКоп=""+Руб+" евро "+Цел(Коп/10)+(Коп-10*Цел(Коп/10))+" евроцент";	
	КонецЕсли;	
	Возврат СуммаРубКоп;	
КонецФункции
	
	//// Функция формирует табличный документ с печатной формой накладной,
	// разработанной методистами
	//
	// Возвращаемое значение:
	//  Табличный документ - печатная форма накладной
	//
Функция ПечатьПКО()
	Макет       = ПолучитьМакет("КО1");
	ТабДокумент = Новый ТабличныйДокумент;
	
	СведенияОбОрганизации = СведенияОЮрФизЛице(Организация, ,Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ПредставлениеОрганизации = Организация.НаименованиеПолное;
	
	ОбластьМакета.Параметры.Число     				= Формат(День(Дата),"ЧВН=1,ЧГ=0");
	ОбластьМакета.Параметры.Месяц     				= Формат(Месяц(Дата),"ЧВН=1,ЧГ=0");
	ОбластьМакета.Параметры.Год       				= Формат(Год(Дата),"ЧГ=0");
	ОбластьМакета.Параметры.НомерДокумента    		= ПолучитьНомерНаПечать(ЭтотОбъект.Ссылка);
	ОбластьМакета.Параметры.ДатаДокумента			= Дата;
	
	ОбластьМакета.Параметры.КодАналитическогоУчета  = ШифрАналитическогоУчета;
	ОбластьМакета.Параметры.КодПодразделения		= Подразделение;
	ОбластьМакета.Параметры.СубСчет                 = КоррСчет;	
	ОбластьМакета.Параметры.Категория               = Категория;	
	ОбластьМакета.Параметры.КодЦелевогоНазначения   = ШифрЦелевогоНазначения;	
	ОбластьМакета.Параметры.ВидВыручки				= ВидВыручки;	
	ОбластьМакета.Параметры.ТН						= ТабельныйНомер;
	ОбластьМакета.Параметры.Курс					= Курс;
	
	ОбластьМакета.Параметры.СубСчет   				= КоррСчет;
	ОбластьМакета.Параметры.ПринятоОт  				= ПринятоОт;
	ОбластьМакета.Параметры.Основание  				= Основание;
	ОбластьМакета.Параметры.Приложение 				= Приложение;
	
	ОбластьМакета.Параметры.СуммаРубКоп       		= РубКоп(Сумма,ВалютаДокумента);
	ОбластьМакета.Параметры.Сумма		      		= Формат(Сумма,"ЧЦ=15; ЧДЦ=2; ЧРД=.");
	ОбластьМакета.Параметры.СуммаПрописью     		= ПроцедурыСервера.СформироватьСуммуПрописью_Сервер(Сумма, ВалютаДокумента);
	
	СуммаПоКурсуПрописью="";
	СуммаПоКурсу=0;
	
	СуммаПоКурсу=Сумма*Курс/Кратность;
	СуммаПоКурсуПрописью=ПроцедурыСервера.СформироватьСуммуПрописью_Сервер(СуммаПоКурсу, Константы.ВалютаРегламентированногоУчета.Получить());
	ОбластьМакета.Параметры.СуммаПоКурсуПрописью=СокрЛП(СуммаПоКурсуПрописью);
	ОбластьМакета.Параметры.СуммаПоКурсу=РубКоп(СуммаПоКурсу,Константы.ВалютаРегламентированногоУчета.Получить());

	
	ТекстСуммаНДС = "";
	Если СуммаНДС=0 Тогда
		ТекстСуммаНДС = ", без НДС";
	Иначе	
		ТекстСуммаНДС = ", в т.ч. НДС ( "+Строка(СтавкаНДС)+"% ) "+ Формат(СуммаНДС, "ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧН=0-00");
	КонецЕсли; 
	
	ОтветственныеЛица = ОтветственныеЛица(Организация, Дата);
	
	ОбластьМакета.Параметры.Заполнить(ОтветственныеЛица);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 10;
	ТабДокумент.ПолеСлева  = 20;
	ТабДокумент.ПолеСнизу  = 10;
	ТабДокумент.ПолеСправа = 10;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.КлючПараметровПечати="КПП_ПриходныйКассовыйОрдерВалютный";
	
	Возврат ТабДокумент;
		
КонецФункции // ПечатьПКО()
	
	// Функция формирует табличный документ с печатной формой бланка ПКО
	//
	// Возвращаемое значение:
	//   Табличный документ - печатная форма бланка ПКО
	//
Функция ПечатьБланк()
	
		Макет       = ПолучитьМакет("Бланк");
		ТабДокумент = Новый ТабличныйДокумент;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Зададим параметры макета
		ТабДокумент.ПолеСверху = 0;
		ТабДокумент.ПолеСлева  = 0;
		ТабДокумент.ПолеСнизу  = 0;
		ТабДокумент.ПолеСправа = 0;
		ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
		ТабДокумент.КлючПараметровПечати="КПП_ПриходныйКассовыйОрдерВалютный";
		
		Возврат ТабДокумент;
	
КонецФункции // ПечатьБланк()()
	 
	//// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходмое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
		
		// Получить экземпляр документа на печать
		Если ИмяМакета = "ПКО" Тогда
			
			ТабДокумент = ПечатьПКО();
		ИначеЕсли ИмяМакета = "Бланк" Тогда
			
			ТабДокумент = ПечатьБланк();
			
		КонецЕсли;
		
		НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект, ), НепосредственнаяПечать);
		
	КонецПроцедуры // Печать()
	
//#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ПКО,Бланк","Приходный кассовый ордер","Бланк");
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()
//////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	//Проверяем заполнение шапки
	
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	
	СтруктураОбязательныхПолей.Вставить("КоррСчет","Не выбран кор. счет (БУ).");
	СтруктураОбязательныхПолей.Вставить("СтатьяДвиженияДенежныхСредств","Не выбрана статья движения денежных средств (БУ).");
	
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	// Бухгалтерские проводки документа
	ПроводкиБУ = Движения.Хозрасчетный;
	СчетДт = СтруктураШапкиДокумента.СчетКасса;
	СчетКт=СтруктураШапкиДокумента.КоррСчет;
	Проводка = ПроводкиБУ.Добавить();
	Проводка.Период      = Дата;
	Проводка.Организация = СтруктураШапкиДокумента.Организация;
	
	Проводка.Содержание = "";
	Проводка.СчетКт      = СчетКт;
	УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СтруктураШапкиДокумента.Субконто1);
	УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СтруктураШапкиДокумента.Субконто2);
	УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СтруктураШапкиДокумента.Субконто3);
	
	Проводка.СчетДт = СчетДт;
	УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Касса);
	УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтатьяДвиженияДенежныхСредств);
	
	Если Проводка.СчетДт.Валютный Тогда
		Проводка.ВалютаДт        = СтруктураШапкиДокумента.ВалютаДокумента;
		Проводка.ВалютнаяСуммаДт = СтруктураШапкиДокумента.Сумма-СтруктураШапкиДокумента.СуммаНДС;
	КонецЕсли;
	
	ВалютаРег       = мВалютаРегламентированногоУчета;
	ДанныеОВалюте   = ПолучитьКурсВалюты(ВалютаРег, Дата);
	
	Проводка.Сумма  = ПересчитатьИзВалютыВВалюту(СтруктураШапкиДокумента.Сумма-СтруктураШапкиДокумента.СуммаНДС, СтруктураШапкиДокумента.ВалютаДокумента, ВалютаРег,
												 Курс, ДанныеОВалюте.Курс, Кратность, ДанныеОВалюте.Кратность);
	
	Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаДокумента;
	Проводка.ВалютнаяСуммаКт = СтруктураШапкиДокумента.Сумма-СтруктураШапкиДокумента.СуммаНДС;
	
	Если Проводка.СчетДт.Количественный Тогда
		Проводка.Количество  = СтруктураШапкиДокумента.Количество;
	КонецЕсли;
		
	Если Не СуммаНДС = 0 Тогда
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = СтруктураШапкиДокумента.Организация;
		Проводка.Содержание = "";
		Проводка.СчетДт      = СчетДт;
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Касса);
		УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтатьяДвиженияДенежныхСредств);
		
		Если СчетДт.Валютный Тогда 
			Проводка.ВалютаДт=СтруктураШапкиДокумента.ВалютаДокумента;
			Проводка.ВалютнаяСуммаДт=СтруктураШапкиДокумента.НДС;
		КонецЕсли;	
		
		Проводка.СчетКт = СчетУчетаПлатежа("НДС");   
		УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Справочники.ПлатежиВБюджет.НДС);
		Проводка.Сумма = ПересчитатьИзВалютыВВалюту(СтруктураШапкиДокумента.НДС, СтруктураШапкиДокумента.Валюта, ВалютаРег,
						 Курс, ДанныеОВалюте.Курс,Кратность, ДанныеОВалюте.Кратность);
	КонецЕсли; 
КонецПроцедуры

Процедура ДвиженияПоРегистрам(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента);
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////////////
//// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим) //в разработке
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	//ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
		
		//Если (ВалютаДокумента <> мВалютаРегламентированногоУчета) тогда
		//	ПереоценкаСчетовДокументаРегл(ЭтотОбъект,СтруктураШапкиДокумента, мВалютаРегламентированногоУчета,Отказ);
		//КонецЕсли; 	
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	
	Если Кратность=0 Тогда
		Кратность=1;
	КонецЕсли;	
	
	СуммаПоДокументу=Сумма;
	
КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
