// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыБухУчета Экспорт; // (Регл)
Перем мДокументОснование       Экспорт;

Перем мУчетнаяПолитика;                 // (Общ)

Перем мВалютаРегламентированногоУчета Экспорт;

//#Если Клиент Тогда


// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если      ИмяМакета = "" Тогда
		
	КонецЕсли;
	
	//НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(Ссылка), НепосредственнаяПечать);
	
КонецПроцедуры // Печать()

//#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("","");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ДвиженияПоРегистрамПоУказаннойСтоимости(РежимПроведения,  Отказ, Заголовок, СтруктураШапкиДокумента)

	ПроверитьОстаткиМатериалов(Отказ,ЭтотОбъект,Материалы, Склад,Организация);
	Если ПараметрыСеанса.ВедетсяПартионныйУчет Тогда
		ДвиженияПоБУПоПартиям(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента);
	Иначе	
		ДвиженияПоБУПоУказаннойСтоимости(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДвиженияПоБУПоУказаннойСтоимости(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	ПроводкиБУ = Движения.Хозрасчетный;
	
	КоличествоВПроводку=Количество;
	
	Для Каждого СтрокаНоменклатуры Из Материалы Цикл
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Списание номенклатуры";     
		
		Проводка.СчетДт      = СчетУчета;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Номенклатура);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
		
		Проводка.КоличествоДт = КоличествоВПроводку;
		
		КоличествоВПроводку=0;
		
		Проводка.СчетКт     =  СтрокаНоменклатуры.Счет;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаНоменклатуры.Номенклатура);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
		Проводка.КоличествоКт = СтрокаНоменклатуры.Количество;
		
		Проводка.Сумма = СтрокаНоменклатуры.Сумма; 
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ДвиженияПоБУПоПартиям(Режим, Отказ, Заголовок, СтруктураШапкиДокумента)
	
	ПроводкиБУ = Движения.Хозрасчетный;
	
	СписокМПЗ = СкладскойУчет.ПолучитьНовыйСписокМПЗ();
	Для Каждого СтрокаНоменклатуры Из Материалы Цикл
		СтрокаСписка = СписокМПЗ.Добавить();
		СтрокаСписка.Номенклатура = СтрокаНоменклатуры.Номенклатура;
		СтрокаСписка.Склад = Склад;
		СтрокаСписка.СчетУчета = СтрокаНоменклатуры.Счет;
		СтрокаСписка.Количество = СтрокаНоменклатуры.Количество;
	КонецЦикла;	
	
	ТПартии = СкладскойУчет.ПолучитьТаблицуПартийПоСпискуМПЗ(СписокМПЗ, Дата, Организация);
	ТМатериалы = Материалы.ВыгрузитьКолонки();
	ТМатериалы.Колонки.Добавить("Партия");
	
	Для Каждого СтрокаНоменклатуры Из Материалы Цикл
		
		КоличествоСписать = СтрокаНоменклатуры.Количество;
		
		Партии = ТПартии.НайтиСтроки(Новый Структура("Номенклатура,СчетУчета",СтрокаНоменклатуры.Номенклатура,СтрокаНоменклатуры.Счет));
		Для каждого Партия Из Партии Цикл
			
			КоличествоПоПартии = Партия.Количество;
			СуммаПоПартии = Партия.Сумма;
			Если КоличествоСписать < Партия.Количество Тогда
				КоличествоПоПартии = КоличествоСписать;
				СуммаПоПартии = Партия.Сумма/Партия.Количество*КоличествоПоПартии;
			КонецЕсли; 
			
			СтрокаТМатериалы = ТМатериалы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТМатериалы, СтрокаНоменклатуры);
			СтрокаТМатериалы.Партия = Партия.Партия;
			СтрокаТМатериалы.Количество = КоличествоПоПартии;
			СтрокаТМатериалы.Сумма = СуммаПоПартии;
			
			КоличествоСписать = КоличествоСписать - КоличествоПоПартии;
			
			Если КоличествоПоПартии = Партия.Количество Тогда
				ТПартии.Удалить(Партия);
			Иначе
				Партия.Количество = Партия.Количество - КоличествоПоПартии;
				Партия.Сумма = Партия.Сумма - СуммаПоПартии;
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЦикла; 
	
	КоличествоВПроводку=Количество;
	Для Каждого СтрокаНоменклатуры Из ТМатериалы Цикл
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Списание номенклатуры";     
		
		Проводка.СчетДт      = СчетУчета;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Номенклатура);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
		Проводка.КоличествоДт = КоличествоВПроводку;
		КоличествоВПроводку=0;
		
		Проводка.СчетКт     =  СтрокаНоменклатуры.Счет;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаНоменклатуры.Номенклатура);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаНоменклатуры.Партия);
		Проводка.КоличествоКт = СтрокаНоменклатуры.Количество;
		Проводка.Сумма = СтрокаНоменклатуры.Сумма;
		
	КонецЦикла; 
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;

	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);

	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	Если СписыватьПоУказаннойСтоимости Тогда
		Если НЕ Отказ Тогда
			ДвиженияПоРегистрамПоУказаннойСтоимости(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента);
		КонецЕсли;
	КонецЕсли; 

КонецПроцедуры // ОбработкаПроведения()

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("Склад","Не выбран склад.");
	
	СтруктураОбязательныхПолей.Вставить("СчетУчета","Не указан счет учета.");
	
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	
	СтруктураПолей.Вставить("Счет","Не указан счет учета номенклатуры");
	
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Материалы", СтруктураПолей, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если СписыватьПоУказаннойСтоимости Тогда
		СуммаПоДокументу = Материалы.Итог("Сумма");
	Иначе	
		СуммаПоДокументу = 0;
	КонецЕсли; 
	
	КоличествоПоДокументу=Материалы.Итог("Количество");
	ПоказыватьТекущиеОстатки=ложь;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры


мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();