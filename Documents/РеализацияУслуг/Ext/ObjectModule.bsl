
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	Возврат Новый Структура("СчетФактура","Счет-фактура");
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров=1, НаПринтер=Ложь, НепосредственнаяПечать=Ложь) Экспорт
	Если ИмяМакета="СчетФактура" Тогда
		ТабДокумент = ПечатьСчетФактура();
	КонецЕсли; 
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Счет-фактура");
КонецПроцедуры

Функция ПечатьСчетФактура()
	
	ТабДок = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияУслугУслуги.Услуга КАК Номенклатура,
	|	РеализацияУслугУслуги.Сумма КАК Сумма,
	|	РеализацияУслугУслуги.Услуга.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РеализацияУслугУслуги.СуммаНДС КАК СуммаНДС,
	|	РеализацияУслугУслуги.СтавкаНДС,
	|	РеализацияУслугУслуги.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияУслугУслуги.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ РеализацияУслугУслуги.Сумма + РеализацияУслугУслуги.СуммаНДС
	|	КОНЕЦ КАК Всего,
	|	РеализацияУслугУслуги.Сумма + РеализацияУслугУслуги.СуммаНДС КАК СуммаСУчетомАкцизаИНДС,
	|	РеализацияУслугУслуги.НаименованиеУслуги КАК Описание,
	|	РеализацияУслугУслуги.Цена,
	|	РеализацияУслугУслуги.Количество,
	|	РеализацияУслугУслуги.Услуга.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ
	|	Документ.РеализацияУслуг.Услуги КАК РеализацияУслугУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслуг КАК РеализацияУслуг
	|		ПО РеализацияУслугУслуги.Ссылка = РеализацияУслуг.Ссылка
	|ГДЕ
	|	РеализацияУслуг.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	|	СУММА(Всего),
	|	СУММА(СуммаСУчетомАкцизаИНДС)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка );
	
	Результат = Запрос.Выполнить();
	ВыборкаОбщие = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщие.Следующий();
	
	//==================================================
	
	Если Дата<Дата(2019,1,22) Тогда
		Макет = ПолучитьМакет("СчетФактура2018");
	Иначе 	
		Макет = ПолучитьМакет("СчетФактура");
	КонецЕсли;
	
	СведенияОбОрганизации = СведенияОЮрФизЛице(Организация, БанковскийСчет, Дата);
	СведенияОКонтрагенте  = СведенияОЮрФизЛице(Контрагент, БанковскийСчетКонтрагента, Дата);
	
	Если ПечататьАкт Тогда
		
		Всего = ВыборкаОбщие.Сумма + ВыборкаОбщие.СуммаНДС;
		
		Область = Макет.ПолучитьОбласть("ЗаголовокАкт");
		Область.Параметры.ФИОДиректораВЛице	= "_______________________";
		
		Область.Параметры.КонтрагентВЛице	= ?(ЗначениеЗаполнено(КонтрагентВЛице),КонтрагентВЛице,"_______________________");
		Область.Параметры.КонтрагентНаОсновании	= ?(ЗначениеЗаполнено(КонтрагентНаОсновании),КонтрагентНаОсновании,"___________________");
		Область.Параметры.ДоговорПродажи	= ДоговорКонтрагента.Наименование;
		Область.Параметры.Дата				= Формат(Дата,"ДЛФ=D")+" г.";
		Область.Параметры.Всего				= Формат(Всего,"ЧДЦ=2");
		Область.Параметры.Заполнить(СведенияОбОрганизации);
		Область.Параметры.Заполнить(СведенияОКонтрагенте);
		ТабДок.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("ШапкаАкт");
		ТабДок.Вывести(Область);
		
		номерСтроки = 0;
		
		Выборка = ВыборкаОбщие.Выбрать();
		Пока Выборка.Следующий() Цикл
			номерСтроки = номерСтроки+1;
			Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС ИЛИ
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка()Тогда
				Область = Макет.ПолучитьОбласть("СтрокаАктБезНДС");
			Иначе	
				Область = Макет.ПолучитьОбласть("СтрокаАкт");
			КонецЕсли;
			
			Область.Параметры.Заполнить(Выборка);
			Область.Параметры.номерСтроки = номерСтроки;
			Область.Параметры.Номенклатура = Выборка.НаименованиеПолное;
			ТабДок.Вывести(Область);
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("ПодвалАкт");
		Область.Параметры.Заполнить(ВыборкаОбщие);
		
		Область.Параметры.ВсегоПрописью	= ПроцедурыСервера.СформироватьСуммуПрописью_Сервер(Всего, Константы.ВалютаРегламентированногоУчета.Получить());
		
		//Руководители = ОтветственныеЛица(Организация, Дата);	
		//Область.Параметры.Заполнить(Руководители);
		ТабДок.Вывести(Область);
		
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ДоговорПродажи	= ДоговорКонтрагента.Наименование;
	Область.Параметры.Номер				= ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Дата				= Формат(Дата,"ДЛФ=D")+" г.";
	ТабДок.Вывести(Область);
	
	Если Контрагент.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		Область = Макет.ПолучитьОбласть("ШапкаФизЛицо");
	Иначе	
		Область = Макет.ПолучитьОбласть("Шапка");
	КонецЕсли;
	Область.Параметры.Заполнить(СведенияОбОрганизации);
	Область.Параметры.Заполнить(СведенияОКонтрагенте);
	//Область.Параметры.ДопНаименование = ДопНаименование;
	ТабДок.Вывести(Область);
	
	номерСтроки = 0;
	
	Выборка = ВыборкаОбщие.Выбрать();
	Пока Выборка.Следующий() Цикл
		номерСтроки = номерСтроки+1;
		Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС ИЛИ
			 Выборка.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка()Тогда
			Область = Макет.ПолучитьОбласть("СтрокаБезНДС");
		Иначе	
			Область = Макет.ПолучитьОбласть("Строка");
		КонецЕсли;
		
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.номерСтроки = номерСтроки;
		Область.Параметры.Номенклатура = Выборка.НаименованиеПолное;
		ТабДок.Вывести(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Заполнить(ВыборкаОбщие);
	
	Попытка
		Всего = ВыборкаОбщие.Сумма + ВыборкаОбщие.СуммаНДС;
		Область.Параметры.ВсегоПрописью	= ПроцедурыСервера.СформироватьСуммуПрописью_Сервер(Всего, Константы.ВалютаРегламентированногоУчета.Получить());
	Исключение
	КонецПопытки;
	Если Дата<Дата(2019,1,22) Тогда
		Область.Параметры.Доверенность	= Доверенность;
		Область.Параметры.Получатель	= Получатель;
	КонецЕсли;
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
    Область.Параметры.Заполнить(Руководители);
	ТабДок.Вывести(Область);
	
	ТабДок.ФиксацияСверху			= 0;
	ТабДок.ФиксацияСлева			= 0;
	//ТабДок.ЭкземпляровНаСтранице	= 1;
	ТабДок.ТолькоПросмотр			= Истина;
	ТабДок.Автомасштаб				= Истина;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	
	ТабДок.КлючПараметровПечати="КПП_РеализацияНоменклатурыПродаж";
	
	Возврат ТабДок;
	
КонецФункции // ПечатьСчетФактура()

////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	СтруктураОбязательныхПолей = Новый Структура();
	СтруктураОбязательныхПолей.Вставить("Организация");
	Если НЕ КонтрАгентВТаблице Тогда 
		СтруктураОбязательныхПолей.Вставить("Контрагент","Не выбран контрагент");
		СтруктураОбязательныхПолей.Вставить("ДоговорКонтрагента","Не выбран договор");
	КонецЕсли;
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	//
	СтруктураПолей = Новый Структура();
	Если КонтрАгентВТаблице Тогда 
		СтруктураПолей.Вставить("Контрагент","Не выбран контрагент");
		СтруктураПолей.Вставить("ДоговорКонтрагента","Не выбран договор");
	КонецЕсли;
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Услуги", СтруктураПолей, Отказ, Заголовок);
КонецПроцедуры

Процедура ДвиженияПоРегистрамБУ(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента)
	ТаблицаИСФ = СоздатьТаблицуИСФ();
	Если НЕ ОсобыеСчетаУчетаДоходовИСебестоимости Тогда
		СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9030");
	Иначе
		СчетПрибыли = СчетУчетаДоходов;
	КонецЕсли;
	Для Каждого СтрокиУслуги Из Услуги Цикл
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание	 = "";     
		//
		Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентомБУ;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,?(КонтрАгентВТаблице,СтрокиУслуги.Контрагент,Контрагент));
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,?(КонтрАгентВТаблице,СтрокиУслуги.ДоговорКонтрагента,ДоговорКонтрагента));
		//
		Проводка.СчетКт = СчетПрибыли;
		Если ОсобыеСчетаУчетаДоходовИСебестоимости Тогда
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,ДопСубконто1);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ДопСубконто2);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,ДопСубконто3);
		Иначе	
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокиУслуги.Услуга);
		КонецЕсли;
		//
		Проводка.Сумма = СтрокиУслуги.Сумма;
		////
		Если СтрокиУслуги.СуммаНДС<>0 Тогда
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание	 = "";     
			//
			Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентомБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,?(КонтрАгентВТаблице,СтрокиУслуги.Контрагент,Контрагент));
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,?(КонтрАгентВТаблице,СтрокиУслуги.ДоговорКонтрагента,ДоговорКонтрагента));
			//
			Проводка.СчетКт = СчетУчетаПлатежа("НДС");
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"СтавкиНДС",СтрокиУслуги.СтавкаНДС);
			//
			Проводка.Сумма = СтрокиУслуги.СуммаНДС; 
		КонецЕсли; 
		////
		Движение = ТаблицаИСФ.Добавить();
		Движение.Период				= Дата;
		Движение.Организация		= Организация;
		Движение.Контрагент			= ?(КонтрАгентВТаблице,СтрокиУслуги.Контрагент,Контрагент);
		Движение.Ссылка				= Ссылка;
		Движение.Документ			= ПолучитьНомерНаПечать(Ссылка.ПолучитьОбъект())+" от "+Формат(Ссылка.Дата, "ДФ='dd.MM.yyyy ""г.""'");
		Движение.ДокументНомер		= ?(ЗначениеЗаполнено(СтрокиУслуги.ИсходящийДокументНомер),СтрокиУслуги.ИсходящийДокументНомер,ПолучитьНомерНаПечать(Ссылка.ПолучитьОбъект()));
		Движение.ДокументДата		= ?(ЗначениеЗаполнено(СтрокиУслуги.ИсходящийДокументДата),СтрокиУслуги.ИсходящийДокументДата,Ссылка.Дата);
		Движение.СтавкаНДС			= СтрокиУслуги.СтавкаНДС;
		Движение.ВидДеятельностиНДС	= СтрокиУслуги.Услуга.ВидДеятельностиНДС;
		Движение.ПорядокУплатыНДС	= ПолучитьПорядокУплатыНДС(Дата,Организация);
		Движение.Сумма				= СтрокиУслуги.Сумма;
		Движение.СуммаНДС			= СтрокиУслуги.СуммаНДС;
		Движение.Всего				= СтрокиУслуги.Всего;
	КонецЦикла;
	ТаблицаИСФ.Свернуть("Период,Организация,Контрагент,Ссылка,Документ,ДокументНомер,ДокументДата,СтавкаНДС,ВидДеятельностиНДС,ПорядокУплатыНДС","Сумма,СуммаНДС,Всего");	
	Движения.ИсходящиеСчетаФактуры.Загрузить(ТаблицаИСФ);
	Если НЕ КонтрАгентВТаблице И ЗачестьАванс Тогда
		Движения.Хозрасчетный.Записать();
		ЗачетАвансов.ВыполнитьЗакрытиеАвансов(ЭтотОбъект,СчетУчетаРасчетовСКонтрагентомБУ,Контрагент,ДоговорКонтрагента);
	КонецЕсли; 
КонецПроцедуры	 

////////////////////////////////////////////////////////////////////////////////

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Для Каждого СтрокаТЧ Из Услуги Цикл
		Если СтрокаТЧ.Всего=0 Тогда
			СтрокаТЧ.Всего = СтрокаТЧ.Сумма+СтрокаТЧ.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	СуммаПоДокументу=Услуги.Итог("Всего");
	КоличествоПоДокументу=0;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);	
	ДвиженияПоРегистрамБУ(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
КонецПроцедуры
