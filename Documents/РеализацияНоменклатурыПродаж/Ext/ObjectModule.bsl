
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	Возврат Новый Структура("СчетФактура","Счет-фактура");
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров=1, НаПринтер=Ложь, НепосредственнаяПечать=Ложь) Экспорт
	Если ИмяМакета="СчетФактура" Тогда
		ТабДокумент = ПечатьСчетФактура();
	КонецЕсли; 
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Счет-фактура");
КонецПроцедуры

Функция ПечатьСчетФактура()
	
	ТабДок = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияНоменклатурыПродажНоменклатура.Номенклатура,
	|	РеализацияНоменклатурыПродажНоменклатура.Количество,
	|	РеализацияНоменклатурыПродажНоменклатура.Сумма КАК Сумма,
	|	РеализацияНоменклатурыПродажНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РеализацияНоменклатурыПродажНоменклатура.Цена КАК Цена,
	|	РеализацияНоменклатурыПродажНоменклатура.СуммаНДС КАК СуммаНДС,
	|	РеализацияНоменклатурыПродажНоменклатура.СтавкаНДС,
	|	РеализацияНоменклатурыПродажНоменклатура.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияНоменклатурыПродажНоменклатура.СуммаНДС = 0
	|			ТОГДА РеализацияНоменклатурыПродажНоменклатура.Сумма
	|		ИНАЧЕ РеализацияНоменклатурыПродажНоменклатура.Сумма + РеализацияНоменклатурыПродажНоменклатура.СуммаНДС
	|	КОНЕЦ КАК Всего,
	|	РеализацияНоменклатурыПродажНоменклатура.Сумма + РеализацияНоменклатурыПродажНоменклатура.СуммаНДС КАК СуммаСУчетомАкцизаИНДС
	|ИЗ
	|	Документ.РеализацияНоменклатурыПродаж.Номенклатура КАК РеализацияНоменклатурыПродажНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияНоменклатурыПродаж КАК РеализацияНоменклатурыПродаж
	|		ПО РеализацияНоменклатурыПродажНоменклатура.Ссылка = РеализацияНоменклатурыПродаж.Ссылка
	|ГДЕ
	|	РеализацияНоменклатурыПродаж.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияНоменклатурыПродажУслуги.Услуга,
	|	NULL,
	|	РеализацияНоменклатурыПродажУслуги.Сумма,
	|	РеализацияНоменклатурыПродажУслуги.Услуга.БазоваяЕдиницаИзмерения,
	|	NULL,
	|	РеализацияНоменклатурыПродажУслуги.СуммаНДС,
	|	РеализацияНоменклатурыПродажУслуги.СтавкаНДС,
	|	РеализацияНоменклатурыПродажУслуги.НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияНоменклатурыПродажУслуги.СуммаНДС = 0
	|			ТОГДА РеализацияНоменклатурыПродажУслуги.Сумма
	|		ИНАЧЕ РеализацияНоменклатурыПродажУслуги.Сумма + РеализацияНоменклатурыПродажУслуги.СуммаНДС
	|	КОНЕЦ,
	|	РеализацияНоменклатурыПродажУслуги.Сумма + РеализацияНоменклатурыПродажУслуги.СуммаНДС
	|ИЗ
	|	Документ.РеализацияНоменклатурыПродаж.Услуги КАК РеализацияНоменклатурыПродажУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияНоменклатурыПродаж КАК РеализацияНоменклатурыПродаж
	|		ПО РеализацияНоменклатурыПродажУслуги.Ссылка = РеализацияНоменклатурыПродаж.Ссылка
	|ГДЕ
	|	РеализацияНоменклатурыПродаж.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	|	СУММА(Всего),
	|	СУММА(СуммаСУчетомАкцизаИНДС)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка );
	
	Результат = Запрос.Выполнить();
	ВыборкаОбщие = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщие.Следующий();
	
	//==================================================
	
	Если Дата<Дата(2019,1,22) Тогда
		Макет = ПолучитьМакет("СчетФактура2017");
	Иначе 	
		Макет = ПолучитьМакет("СчетФактура");
	КонецЕсли;
	
	СведенияОбОрганизации = СведенияОЮрФизЛице(Организация, БанковскийСчет, Дата);
	СведенияОКонтрагенте  = СведенияОЮрФизЛице(Контрагент, БанковскийСчетКонтрагента, Дата);
	
	Если ПечататьАкт Тогда
		
		Всего = ВыборкаОбщие.Сумма + ВыборкаОбщие.СуммаНДС;
		
		Область = Макет.ПолучитьОбласть("ЗаголовокАкт");
		Область.Параметры.ФИОДиректораВЛице	= "_______________________";
		Область.Параметры.КонтрагентВЛице	= ?(ЗначениеЗаполнено(КонтрагентВЛице),КонтрагентВЛице,"_______________________");
		Область.Параметры.КонтрагентНаОсновании	= ?(ЗначениеЗаполнено(КонтрагентНаОсновании),КонтрагентНаОсновании,"___________________");
		Область.Параметры.ДоговорПродажи	= ДоговорКонтрагента.Наименование;
		Область.Параметры.Дата				= Формат(Дата,"ДЛФ=D")+" г.";
		Область.Параметры.Всего				= Формат(Всего,"ЧДЦ=2");
		Область.Параметры.Заполнить(СведенияОбОрганизации);
		Область.Параметры.Заполнить(СведенияОКонтрагенте);
		ТабДок.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("ШапкаАкт");
		ТабДок.Вывести(Область);
		
		номерСтроки = 0;
		
		Выборка = ВыборкаОбщие.Выбрать();
		Пока Выборка.Следующий() Цикл
			номерСтроки = номерСтроки+1;
			Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС ИЛИ
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка()Тогда
				Область = Макет.ПолучитьОбласть("СтрокаАктБезНДС");
			Иначе	
				Область = Макет.ПолучитьОбласть("СтрокаАкт");
			КонецЕсли;
			
			Область.Параметры.Заполнить(Выборка);
			Область.Параметры.номерСтроки = номерСтроки;
			ТабДок.Вывести(Область);
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("ПодвалАкт");
		Область.Параметры.Заполнить(ВыборкаОбщие);
		
		Область.Параметры.ВсегоПрописью	= ПроцедурыСервера.СформироватьСуммуПрописью_Сервер(Всего, Константы.ВалютаРегламентированногоУчета.Получить());
		
		//Руководители = ОтветственныеЛица(Организация, Дата);	
		//Область.Параметры.Заполнить(Руководители);
		ТабДок.Вывести(Область);
		
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ДоговорПродажи	= ДоговорКонтрагента.Наименование;
	Область.Параметры.Номер				= ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Дата				= Формат(Дата,"ДЛФ=D")+" г.";
	ТабДок.Вывести(Область);
	
	Если Контрагент.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		Область = Макет.ПолучитьОбласть("ШапкаФизЛицо");
	Иначе	
		Область = Макет.ПолучитьОбласть("Шапка");
	КонецЕсли;
	Область.Параметры.Заполнить(СведенияОбОрганизации);
	Область.Параметры.Заполнить(СведенияОКонтрагенте);
	ТабДок.Вывести(Область);
	
	номерСтроки = 0;
	
	Выборка = ВыборкаОбщие.Выбрать();
	Пока Выборка.Следующий() Цикл
		номерСтроки = номерСтроки+1;
		Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС ИЛИ
			 Выборка.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка()Тогда
			Область = Макет.ПолучитьОбласть("СтрокаБезНДС");
		Иначе	
			Область = Макет.ПолучитьОбласть("Строка");
		КонецЕсли;
		
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.номерСтроки = номерСтроки;
		ТабДок.Вывести(Область);
	КонецЦикла;
	
	//Область = Макет.ПолучитьОбласть("Подвал"); //18-11-2019 По просьбе Гл. Бухгалтера
	Область = Макет.ПолучитьОбласть("ПодвалБезБухгалтера"); //18-11-2019 По просьбе Гл. Бухгалтера
	Область.Параметры.Заполнить(ВыборкаОбщие);
	
	Попытка
		Всего = ВыборкаОбщие.Сумма + ВыборкаОбщие.СуммаНДС;
		Область.Параметры.ВсегоПрописью	= ПроцедурыСервера.СформироватьСуммуПрописью_Сервер(Всего, Константы.ВалютаРегламентированногоУчета.Получить());
	Исключение
	КонецПопытки;
	Если Дата<Дата(2019,1,22) Тогда
		Область.Параметры.Доверенность	= Доверенность;
		Область.Параметры.Получатель	= Получатель;
	КонецЕсли;
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
    Область.Параметры.Заполнить(Руководители);
	ТабДок.Вывести(Область);
	
	ТабДок.ФиксацияСверху			= 0;
	ТабДок.ФиксацияСлева			= 0;
	//ТабДок.ЭкземпляровНаСтранице	= 1;
	ТабДок.ТолькоПросмотр			= Истина;
	ТабДок.Автомасштаб				= Истина;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	
	ТабДок.КлючПараметровПечати="КПП_РеализацияНоменклатурыПродаж";
	
	Возврат ТабДок;
	
КонецФункции // ПечатьСчетФактура()

////////////////////////////////////////////////////////////////////////////////

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("БанковскийСчет","Не выбран вид банковский счет");
	СтруктураОбязательныхПолей.Вставить("Контрагент","Не выбран вид контрагент");
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	//
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	СтруктураПолей.Вставить("СчетУчетаБУ","Не выбран счет учета номенклатуры");
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Номенклатура", СтруктураПолей, Отказ, Заголовок);
КонецПроцедуры

Процедура ДвиженияПоРегистрамБУ(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента)
	ТаблицаИСФ = СоздатьТаблицуИСФ();
	ТаблицаОстатков = Новый ТаблицаЗначений;
	ЗаполнитьТаблицуОстатковНоменклатурыПродаж(ТаблицаОстатков,ЭтотОбъект,Склад,Организация,"СчетУчетаБУ");
	Для Каждого СтрокиНоменклатура Из Номенклатура Цикл
		КоличествоВПроводку=ПеревестиКоличествоВЕдиницуХраненияОстатка(СтрокиНоменклатура.Количество,СтрокиНоменклатура.Номенклатура,СтрокиНоменклатура.ЕдиницаИзмерения);
		Себестоимость=0;
		//
		СтрокаОстатков=ТаблицаОстатков.Найти(СтрокиНоменклатура.Номенклатура,"Субконто1");
		Если СтрокаОстатков<>Неопределено Тогда
			Если СтрокаОстатков.КоличествоОстатокДт=СтрокиНоменклатура.Количество Тогда
				Себестоимость=СтрокаОстатков.СуммаОстатокДт;							
			ИначеЕсли СтрокаОстатков.КоличествоОстатокДт<>0 Тогда
				Себестоимость=СтрокаОстатков.СуммаОстатокДт/СтрокаОстатков.КоличествоОстатокДт*СтрокиНоменклатура.Количество;							
			КонецЕсли; 		
		КонецЕсли; 
		//
		Если НЕ ОсобыеСчетаУчетаДоходовИСебестоимости Тогда
			Если СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Продукция Тогда
				СчетСебестоимости = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9110");
				СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9010");
			ИначеЕсли СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Товар Тогда
				СчетСебестоимости = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9120");
				СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9020");
			ИначеЕсли СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Работа ИЛИ
					  СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Услуга Тогда
				СчетСебестоимости = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9130");
				СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9030");
			КонецЕсли;	
		Иначе
			СчетСебестоимости = СчетУчетаСебестоимости;
			СчетПрибыли = СчетУчетаДоходов;
		КонецЕсли;
		
		Если СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Продукция ИЛИ
			 СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Товар Тогда
			//// 
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание	 = "";     
			//
			Проводка.СчетДт = СчетСебестоимости;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокиНоменклатура.Номенклатура);
			//
			Проводка.СчетКт = СтрокиНоменклатура.СчетУчетаБУ;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокиНоменклатура.Номенклатура);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
			Проводка.КоличествоКт = КоличествоВПроводку;
			//
			Если СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Товар Тогда
				Проводка.Сумма = Себестоимость; 
				//
				Движение = Движения.СебестоимостьПродажи.Добавить();
				Движение.Период				= Дата;
				Движение.Организация		= Организация;
				Движение.Контрагент			= Контрагент;
				Движение.Договор			= ДоговорКонтрагента;
				Движение.Номенклатура		= СтрокиНоменклатура.Номенклатура;
				Движение.ВидОборота			= Перечисления.ВидыОборотовПоПродажам.Реализация;
				Движение.Количество			= СтрокиНоменклатура.Количество;
				Движение.Сумма				= Себестоимость;
				Движение.ДокументРеализации	= Ссылка;
			КонецЕсли;
		КонецЕсли;
		////
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание	 = "";     
		//
		Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентомБУ;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,Ссылка);
		//
		Проводка.СчетКт = СчетПрибыли;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокиНоменклатура.Номенклатура);
		//
		Проводка.Сумма = СтрокиНоменклатура.Сумма;
		////
		Если СтрокиНоменклатура.СуммаНДС<>0 Тогда
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание	 = "";     
			//
			Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентомБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,Ссылка);
			//
			Проводка.СчетКт = СчетУчетаПлатежа("НДС");
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"СтавкиНДС",СтрокиНоменклатура.СтавкаНДС);
			//
			Проводка.Сумма = СтрокиНоменклатура.СуммаНДС; 
		КонецЕсли; 
		////
		Движение = ТаблицаИСФ.Добавить();
		Движение.Период				= Дата;
		Движение.Организация		= Организация;
		Движение.Контрагент			= Контрагент;
		Движение.Ссылка				= Ссылка;
		Движение.Документ			= ПолучитьНомерНаПечать(Ссылка.ПолучитьОбъект())+" от "+Формат(Ссылка.Дата, "ДФ='dd.MM.yyyy ""г.""'");
		Движение.ДокументНомер		= ПолучитьНомерНаПечать(Ссылка.ПолучитьОбъект());
		Движение.ДокументДата		= Дата;
		Движение.СтавкаНДС			= СтрокиНоменклатура.СтавкаНДС;
		Движение.ВидДеятельностиНДС	= СтрокиНоменклатура.Номенклатура.ВидДеятельностиНДС;
		Движение.ПорядокУплатыНДС	= ПолучитьПорядокУплатыНДС(Дата,Организация);
		Движение.Сумма				= СтрокиНоменклатура.Сумма;
		Движение.СуммаНДС			= СтрокиНоменклатура.СуммаНДС;
		Движение.Всего				= СтрокиНоменклатура.Всего;
	КонецЦикла;
	////
	Если НЕ ОсобыеСчетаУчетаДоходовИСебестоимости Тогда
		СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9030");
	Иначе
		СчетСебестоимости = СчетУчетаСебестоимости;
		СчетПрибыли = СчетУчетаДоходов;
	КонецЕсли;
	Для Каждого СтрокиУслуги Из Услуги Цикл
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание	 = "";     
		//
		Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентомБУ;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,Ссылка);
		//
		Проводка.СчетКт = СчетПрибыли;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокиУслуги.Услуга);
		//
		Проводка.Сумма = СтрокиУслуги.Сумма;
		////
		Если СтрокиУслуги.СуммаНДС<>0 Тогда
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание	 = "";     
			//
			Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентомБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,Ссылка);
			//
			Проводка.СчетКт = СчетУчетаПлатежа("НДС");
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"СтавкиНДС",СтрокиУслуги.СтавкаНДС);
			//
			Проводка.Сумма = СтрокиУслуги.СуммаНДС; 
		КонецЕсли; 
		////
		Движение = ТаблицаИСФ.Добавить();
		Движение.Период				= Дата;
		Движение.Организация		= Организация;
		Движение.Контрагент			= Контрагент;
		Движение.Ссылка				= Ссылка;
		Движение.Документ			= ПолучитьНомерНаПечать(Ссылка.ПолучитьОбъект())+" от "+Формат(Ссылка.Дата, "ДФ='dd.MM.yyyy ""г.""'");
		Движение.ДокументНомер		= ПолучитьНомерНаПечать(Ссылка.ПолучитьОбъект());
		Движение.ДокументДата		= Дата;
		Движение.СтавкаНДС			= СтрокиУслуги.СтавкаНДС;
		Движение.ВидДеятельностиНДС	= СтрокиУслуги.Услуга.ВидДеятельностиНДС;
		Движение.ПорядокУплатыНДС	= ПолучитьПорядокУплатыНДС(Дата,Организация);
		Движение.Сумма				= СтрокиУслуги.Сумма;
		Движение.СуммаНДС			= СтрокиУслуги.СуммаНДС;
		Движение.Всего				= СтрокиУслуги.Всего;
	КонецЦикла;
	ТаблицаИСФ.Свернуть("Период,Организация,Контрагент,Ссылка,Документ,ДокументНомер,ДокументДата,СтавкаНДС,ВидДеятельностиНДС,ПорядокУплатыНДС","Сумма,СуммаНДС,Всего");	
	Движения.ИсходящиеСчетаФактуры.Загрузить(ТаблицаИСФ);
	Если ЗачестьАванс Тогда
		Движения.Хозрасчетный.Записать();
		ЗачетАвансов.ВыполнитьЗакрытиеАвансов(ЭтотОбъект, СчетУчетаРасчетовСКонтрагентомБУ, Контрагент,ДоговорКонтрагента);
	КонецЕсли; 
КонецПроцедуры	 

Процедура ДвиженияПоРегистрам(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента)
	Для Каждого Строка Из Номенклатура Цикл
		Движение = Движения.Продажи.Добавить();
		Движение.Период			 = Дата;
		Движение.Организация	 = Организация;
		Движение.Склад			 = Склад;
		Движение.Контрагент		 = Контрагент;
		Движение.Договор		 = ДоговорКонтрагента;
		Движение.Номенклатура	 = Строка.Номенклатура;
		Движение.ВидОборота		 = Перечисления.ВидыОборотовПоПродажам.Реализация;
		Движение.Валюта			 = Справочники.Валюты.ПустаяСсылка();
		Движение.Количество		 = Строка.Количество*Строка.ЕдиницаИзмерения.Коэффициент;
		Движение.Сумма			 = Строка.Сумма;
		Движение.СуммаНДС		 = Строка.СуммаНДС;
		Движение.СуммаВВалюте	 = 0;
		Движение.СуммаНДСВВалюте = 0;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	Для Каждого СтрокаТЧ Из Номенклатура Цикл
		Если СтрокаТЧ.Всего=0 Тогда
			СтрокаТЧ.Всего = СтрокаТЧ.Сумма+СтрокаТЧ.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТЧ Из Услуги Цикл
		Если СтрокаТЧ.Всего=0 Тогда
			СтрокаТЧ.Всего = СтрокаТЧ.Сумма+СтрокаТЧ.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	СуммаПоДокументу=Номенклатура.Итог("Всего")+Услуги.Итог("Всего");
	КоличествоПоДокументу=0;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);	
	ПроверитьОстаткиНоменклатурыПродаж(Отказ,ЭтотОбъект,Номенклатура,Склад,Организация,"СчетУчетаБУ");
	//
	ДвиженияПоРегистрамБУ(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	ДвиженияПоРегистрам(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
КонецПроцедуры
