
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("Печать","Печать");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ДвиженияПоБУ(Режим, Отказ, Заголовок,СтруктураШапкиДокумента);
		
КонецПроцедуры

Функция ПечатьДокумента(ИмяМакета)
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("Отчет");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СличительнаяВедомостьТаблица.ТМЦ,
	|	СличительнаяВедомостьТаблица.ТМЦ.Код,
	|	СличительнаяВедомостьТаблица.ТМЦ.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СличительнаяВедомостьТаблица.КоличествоФакт КАК КоличествоФакт,
	|	СличительнаяВедомостьТаблица.СуммаФакт КАК СуммаФакт,
	|	СличительнаяВедомостьТаблица.КоличествоБУ КАК КоличествоБУ,
	|	СличительнаяВедомостьТаблица.СуммаБУ КАК СуммаБУ,
	|	СличительнаяВедомостьТаблица.КоличествоИзлишек КАК КоличествоИзлишек,
	|	СличительнаяВедомостьТаблица.СуммаИзлишек КАК СуммаИзлишек,
	|	СличительнаяВедомостьТаблица.КоличествоНедостача КАК КоличествоНедостача,
	|	СличительнаяВедомостьТаблица.СуммаНедостача КАК СуммаНедостача,
	|	СличительнаяВедомостьТаблица.Счет,
	|	СличительнаяВедомостьТаблица.НомерСтроки
	|ИЗ
	|	Документ.СличительнаяВедомость.Таблица КАК СличительнаяВедомостьТаблица
	|ГДЕ
	|	СличительнаяВедомостьТаблица.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СличительнаяВедомостьТаблица.НомерСтроки
	|ИТОГИ
	|	СУММА(КоличествоФакт),
	|	СУММА(СуммаФакт),
	|	СУММА(КоличествоБУ),
	|	СУММА(СуммаБУ),
	|	СУММА(КоличествоИзлишек),
	|	СУММА(СуммаИзлишек),
	|	СУММА(КоличествоНедостача),
	|	СУММА(СуммаНедостача)
	|ПО
	|	ОБЩИЕ";
	
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить();
	
	
	ТабДок.Очистить();
	
	
	Строка = Макет.ПолучитьОбласть("Строка");
	Титул = Макет.ПолучитьОбласть("Титул");
	Страница = Макет.ПолучитьОбласть("Страница");
	Шапка = Макет.ПолучитьОбласть("Шапка");
//	ИтСтрП = Макет.ПолучитьОбласть("ИтСтрП");
	ИтОписьЧ = Макет.ПолучитьОбласть("ИтОписьЧ");
	Итог1 = Макет.ПолучитьОбласть("Итог1");
	Итог2 = Макет.ПолучитьОбласть("Итог2");
	
	Титул.Параметры.Организация=Организация;
	Титул.Параметры.ОрганизацияИНН=Организация.ИНН;
	Титул.Параметры.Склад=Склад;
	Титул.Параметры.Основание=ОснованиеНомер+" от "+Формат(ОснованиеДата,"ДФ=dd.MM.yyyy");
	Титул.Параметры.ДатаОстатков=ДатаОстатков;
	Титул.Параметры.ДатаНачалаИнвентаризации=ДатаНачалаИнвентаризации;
	Титул.Параметры.ДатаОкончанияИнвентаризации=ДатаОкончанияИнвентаризации;
	Титул.Параметры.Номер=Номер;
	Титул.Параметры.МОЛ1=МОЛ1;
	Титул.Параметры.МОЛ2=МОЛ2;
	Титул.Параметры.МОЛ1Должность=ДолжностьСотрудника(МОЛ1,Дата);
	Титул.Параметры.МОЛ2Должность=ДолжностьСотрудника(МОЛ2,Дата);
	ТабДок.Вывести(Титул);     
	ТабДок.Вывести(Шапка);
	
	//ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	КолСтрокНаЛисте = 20;
	ТекСтрока = 0;
	
	ВыборкаОбщие = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщие.Следующий();
	
	МПЗ = ВыборкаОбщие.Выбрать();
	Пропущено=0;
	
	Пока МПЗ.Следующий() Цикл
		
		Если ТекСтрока = КолСтрокНаЛисте Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ТекСтрока = 0;
			ТабДок.Вывести(Шапка);
			КолСтрокНаЛисте = 42;
		КонецЕсли;
		
		ТекСтрока=ТекСтрока+ 1;
		Строка.Параметры.Заполнить(МПЗ);
		ТабДок.Вывести(Строка);
		
		//Если ТекСтрока = КолСтрокНаЛисте Тогда
		//	ИтСтрЧ.Параметры.ИтогКоличСтраница=ИтогКоличСтраница;
		//	ИтСтрЧ.Параметры.ИтогСуммаСтраница=ИтогСуммаСтраница;
		//	ТабДок.Вывести(ИтСтрЧ);
		//	Если Ном<>(МПЗ.Количество()-Пропущено) Тогда
		//		ТабДок.Вывести(ПодписиНаСтраницах);
		//	КонецЕсли;
		//	Если Ном < МПЗ.Количество() Тогда
		//		//ИтСтрП.Параметры.КолНомСтр=СтрЗаменить(ЧислоПрописью(КолНомСтр),"00","");
		//		//ТабДок.Вывести(ИтСтрП);
		//	КонецЕсли;
		//КонецЕсли;
	КонецЦикла;
	//Если ТекСтрока < КолСтрокНаЛисте Тогда
	//	ИтСтрЧ.Параметры.ИтогКоличСтраница=ИтогКоличСтраница;
	//	ИтСтрЧ.Параметры.ИтогСуммаСтраница=ИтогСуммаСтраница;
	//	ТабДок.Вывести(ИтСтрЧ);
	//КонецЕсли;
	//
	//ИтОписьЧ.Параметры.ИтогКоличОпись=ИтогКоличОпись;
	//ИтОписьЧ.Параметры.ИтогСуммаОпись=ИтогСуммаОпись;
	
	ИтОписьЧ.Параметры.Заполнить(ВыборкаОбщие);
	ТабДок.Вывести(ИтОписьЧ);
	//ТабДок.Вывести(ПодписиНаСтраницах);
	
	//ИтСтрП.Параметры.КолНомСтр=СтрЗаменить(ЧислоПрописью(КолНомСтр),"00","");
	//ТабДок.Вывести(ИтСтрП);
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	Итог1.Параметры.Председатель=ПредседательКомиссии;
	Итог1.Параметры.ПредседательДолжность=ДолжностьСотрудника(ПредседательКомиссии,Дата);
	
	ТабДок.Вывести(Итог1);
	
	Для каждого Строка Из ЧленыКомиссии Цикл
		Если Строка.НомерСтроки=1 Тогда
			ОбластьЧленКомиссии = Макет.ПолучитьОбласть("ЧленКомиссии1");
		Иначе	
			ОбластьЧленКомиссии = Макет.ПолучитьОбласть("ЧленКомиссии");
		КонецЕсли; 
		ОбластьЧленКомиссии.Параметры.ЧленКомиссии = Строка.ЧленКомиссии;
		ОбластьЧленКомиссии.Параметры.ЧленКомиссииДолжность = ДолжностьСотрудника(Строка.ЧленКомиссии,Дата);
		ТабДок.Вывести(ОбластьЧленКомиссии);
	КонецЦикла;  
	
	Итог2.Параметры.Проверяющий=Проверяющий;
	Итог2.Параметры.ПроверяющийДолжность=ДолжностьСотрудника(Проверяющий,Дата);
	
	ТабДок.Вывести(Итог2);
	
	ТабДок.Автомасштаб=истина;
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	
	Возврат ТабДок;
	
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	
	ТабДокумент = ПечатьДокумента(ИмяМакета);
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "");
	
КонецПроцедуры // Печать()

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	////Проверяем заполнение шапки
	//СтруктураОбязательныхПолей = Новый Структура("Организация");
	//СтруктураОбязательныхПолей.Вставить("Склад","Не выбран склад.");
	//
	//ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	//
	////Проверяем заполнение табличной части 
	//
	//СтруктураОбязательныхПолей = Новый Структура();
	//СтруктураОбязательныхПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	//ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Номенклатура", СтруктураПолей, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ДвиженияПоБУ(Режим, Отказ, Заголовок,СтруктураШапкиДокумента);
	
	ПроводкиБУ = Движения.Хозрасчетный;
	
	Для Каждого Строка Из Таблица Цикл
		
		Если Строка.КоличествоНедостача<>0 или Строка.СуммаНедостача<>0 Тогда
			
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "";
			
			Проводка.СчетДт = СтруктураШапкиДокумента.СпособУчетаРасходовБУ.Счет;
			УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СтруктураШапкиДокумента.СпособУчетаРасходовБУ.Субконто1);
			УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СтруктураШапкиДокумента.СпособУчетаРасходовБУ.Субконто2);
			УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СтруктураШапкиДокумента.СпособУчетаРасходовБУ.Субконто3);
			
			Проводка.СчетКт = Строка.Счет;
			УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Строка.ТМЦ);
			УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, Склад);
			
			Проводка.КоличествоКт = Строка.КоличествоНедостача;
			Проводка.Сумма = Строка.СуммаНедостача;
			
		КонецЕсли;
		
		Если Строка.КоличествоИзлишек<>0 или Строка.СуммаИзлишек<>0 Тогда
			
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "";
			
			Проводка.СчетДт = Строка.Счет;
			УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Строка.ТМЦ);
			УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, Склад);
			
			Проводка.СчетКт = СтруктураШапкиДокумента.СпособУчетаДоходовБУ.Счет;
			УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СтруктураШапкиДокумента.СпособУчетаДоходовБУ.Субконто1);
			УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СтруктураШапкиДокумента.СпособУчетаДоходовБУ.Субконто2);
			УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СтруктураШапкиДокумента.СпособУчетаДоходовБУ.Субконто3);
			
			Проводка.КоличествоДт = Строка.КоличествоИзлишек;
			Проводка.Сумма = Строка.СуммаИзлишек;
			
		КонецЕсли;
		
	КонецЦикла;				
					
КонецПроцедуры	
