
Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Для Каждого ТекСтрокаМестонахождениеОС Из МестонахождениеОС Цикл
		// регистр МестонахождениеОСБухгалтерскийУчет 
		Движение = Движения.МестонахождениеОСБухгалтерскийУчет.Добавить();
		Движение.Период = Дата;
		Движение.ОсновноеСредство = ТекСтрокаМестонахождениеОС.ОсновноеСредство;
		Движение.Организация = Организация;
		Движение.МОЛ = ТекСтрокаМестонахождениеОС.МОЛ;
		Движение.Местонахождение = ТекСтрокаМестонахождениеОС.Местонахождение;
	КонецЦикла;
	Для Каждого ТекСтрокаНачислениеАмортизацииОС Из НачислениеАмортизацииОС Цикл
		// регистр НачислениеАмортизацииОСБухгалтерскийУчет 
		Движение = Движения.НачислениеАмортизацииОСБухгалтерскийУчет.Добавить();
		Движение.Период = Дата;
		Движение.ОсновноеСредство = ТекСтрокаНачислениеАмортизацииОС.ОсновноеСредство;
		Движение.Организация = Организация;
		Движение.НачислятьАмортизацию = ТекСтрокаНачислениеАмортизацииОС.НачислятьАмортизацию;
	КонецЦикла;
	Для Каждого ТекСтрокаПараметрыАмортизацииОС Из ПараметрыАмортизацииОС Цикл
		// регистр ПараметрыАмортизацииОСБухгалтерскийУчет 
		Движение = Движения.ПараметрыАмортизацииОСБухгалтерскийУчет.Добавить();
		Движение.Период = Дата;
		Движение.ОсновноеСредство = ТекСтрокаПараметрыАмортизацииОС.ОсновноеСредство;
		Движение.Организация = Организация;
		Движение.СтоимостьДляВычисленияАмортизации = ТекСтрокаПараметрыАмортизацииОС.СтоимостьДляВычисленияАмортизации;
		Движение.КоэффициентАмортизации = ТекСтрокаПараметрыАмортизацииОС.КоэффициентАмортизации;
	КонецЦикла;
	Для Каждого ТекСтрокаПервоначальныеСведенияОС Из ПервоначальныеСведенияОС Цикл
		// регистр ПервоначальныеСведенияОСБухгалтерскийУчет 
		Движение = Движения.ПервоначальныеСведенияОСБухгалтерскийУчет.Добавить();
		Движение.Период = Дата;
		Движение.ОсновноеСредство = ТекСтрокаПервоначальныеСведенияОС.ОсновноеСредство;
		Движение.Организация = Организация;
		Движение.СпособПоступления = ТекСтрокаПервоначальныеСведенияОС.СпособПоступления;
		Движение.ПервоначальнаяСтоимость = ТекСтрокаПервоначальныеСведенияОС.ПервоначальнаяСтоимость;
		Движение.СпособНачисленияАмортизации = ТекСтрокаПервоначальныеСведенияОС.СпособНачисленияАмортизации;
		Движение.ПорядокПогашенияСтоимости = ТекСтрокаПервоначальныеСведенияОС.ПорядокПогашенияСтоимости;
		Движение.ПроизводственнаяГруппа = ТекСтрокаПервоначальныеСведенияОС.ПроизводственнаяГруппа;
		Движение.ПротивопожарныеОС = ТекСтрокаПервоначальныеСведенияОС.ПротивопожарныеОС;
		Движение.Состояние = ТекСтрокаПервоначальныеСведенияОС.Состояние;
		Движение.ГруппаОборудования = ТекСтрокаПервоначальныеСведенияОС.ГруппаОборудования;
		Движение.ОСПоОхранеОкружающейСреды = ТекСтрокаПервоначальныеСведенияОС.ОСПоОхранеОкружающейСреды;
		Движение.ГруппаОС = ТекСтрокаПервоначальныеСведенияОС.ГруппаОС;
	КонецЦикла;
	Для Каждого ТекСтрокаСобытияОС Из СобытияОС Цикл
		// регистр СобытияОСОрганизацийБухгалтерскийУчет 
		Движение = Движения.СобытияОСОрганизацийБухгалтерскийУчет.Добавить();
		Движение.Период = Дата;
		Движение.ОсновноеСредство = ТекСтрокаСобытияОС.ОсновноеСредство;
		Движение.Организация = Организация;
		Движение.Событие = ТекСтрокаСобытияОС.Событие;
	КонецЦикла;
	Для Каждого ТекСтрокаСостояниеОС Из СостояниеОС Цикл
		// регистр СостоянияОСОрганизацийБухгалтерскийУчет 
		Движение = Движения.СостоянияОСОрганизацийБухгалтерскийУчет.Добавить();
		Движение.ОсновноеСредство = ТекСтрокаСостояниеОС.ОсновноеСредство;
		Движение.Организация = Организация;
		Движение.Состояние = ТекСтрокаСостояниеОС.Состояние;
		Движение.ДатаСостояния = ТекСтрокаСостояниеОС.ДатаСостояния;
	КонецЦикла;
	Для Каждого ТекСтрокаСпособыОтраженияРасходовПоАмортизацииОС Из СпособыОтраженияРасходовПоАмортизацииОС Цикл
		// регистр СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет 
		Движение = Движения.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.Добавить();
		Движение.Период = Дата;
		Движение.ОсновноеСредство = ТекСтрокаСпособыОтраженияРасходовПоАмортизацииОС.ОсновноеСредство;
		Движение.Организация = Организация;
		Движение.СпособыОтраженияРасходовПоАмортизации = ТекСтрокаСпособыОтраженияРасходовПоАмортизацииОС.СпособыОтраженияРасходовПоАмортизации;
		Движение.ШифрПроизводственныхЗатрат = ТекСтрокаСпособыОтраженияРасходовПоАмортизацииОС.ШифрПроизводственныхЗатрат;
	КонецЦикла;
	Для Каждого ТекСтрокаСчетаБухгалтерскогоУчетаОС Из СчетаБухгалтерскогоУчетаОС Цикл
		// регистр СчетаБухгалтерскогоУчетаОС 
		Движение = Движения.СчетаБухгалтерскогоУчетаОС.Добавить();
		Движение.Период = Дата;
		Движение.ОсновноеСредство = ТекСтрокаСчетаБухгалтерскогоУчетаОС.ОсновноеСредство;
		Движение.Организация = Организация;
		Движение.СчетУчета = ТекСтрокаСчетаБухгалтерскогоУчетаОС.СчетУчета;
		Движение.СчетНачисленияАмортизации = ТекСтрокаСчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации;
	КонецЦикла;
	Для каждого ТекСтрокаЛьготныеОС Из ЛьготныеОС Цикл
		// регистр ЛьготныеОсновныеСредства 
		Движение = Движения.ЛьготныеОсновныеСредства.Добавить();
		Движение.Период = Дата;
		Движение.ОсновноеСредство = ТекСтрокаЛьготныеОС.ОсновноеСредство;
		Движение.Организация = Организация;
		Движение.Льгота = ТекСтрокаЛьготныеОС.Льгота;
	КонецЦикла; 
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СостоянияОСОрганизацийБухгалтерскийУчет.ОсновноеСредство КАК ОсновноеСредство,
	               |	СостоянияОСОрганизацийБухгалтерскийУчет.Состояние КАК Состояние,
	               |	СостоянияОСОрганизацийБухгалтерскийУчет.ДатаСостояния КАК ДатаСостояния
	               |ИЗ
	               |	РегистрСведений.СостоянияОСОрганизацийБухгалтерскийУчет КАК СостоянияОСОрганизацийБухгалтерскийУчет
	               |ГДЕ
	               |	СостоянияОСОрганизацийБухгалтерскийУчет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("ОсновноеСредство", Выборка.ОсновноеСредство);
		
		РезультатПоиска = СостояниеОС.НайтиСтроки(СтруктураПоиска);
		
		Для каждого ЭлементРезультата Из РезультатПоиска Цикл
			СостояниеОС.Удалить(ЭлементРезультата);
		КонецЦикла; 
		
	КонецЦикла; 
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры
