
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("","");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьОстаткиНаСкладе(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьЦеныВСправочник();
	
	Если ПараметрыСеанса.ВедетсяПартионныйУчет Тогда
		ДвиженияПоБУПоПартиям(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	Иначе	
		ДвиженияПоБУПоУказаннойСтоимости(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДвиженияПоБУПоУказаннойСтоимости(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	Для Каждого ТекСтрокаМатериалы Из Материалы Цикл
		Движение = Движения.Хозрасчетный.Добавить();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		
		Движение.СчетДт = ТекСтрокаМатериалы.Счет;
		УстановитьСубконто(Движение.СчетДт,Движение.СубконтоДт,1,ТекСтрокаМатериалы.Номенклатура);
		УстановитьСубконто(Движение.СчетДт,Движение.СубконтоДт,2,Склад);
		Движение.КоличествоДт = ТекСтрокаМатериалы.Количество;
		
		Движение.СчетКт = Счет;
		УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,1,Номенклатура);
		УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,2,Склад);
		Движение.КоличествоКт = ТекСтрокаМатериалы.КоличествоИзрасходовано;
		
		Движение.Сумма = ТекСтрокаМатериалы.Сумма;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДвиженияПоБУПоПартиям(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	ПроводкиБУ = Движения.Хозрасчетный;
	
	СписокМПЗ = СкладскойУчет.ПолучитьНовыйСписокМПЗ();
	СтрокаСписка = СписокМПЗ.Добавить();
	СтрокаСписка.Номенклатура = Номенклатура;
	СтрокаСписка.Склад = Склад;
	СтрокаСписка.СчетУчета = Счет;
	СтрокаСписка.Количество = Количество;
	
	ТПартии = СкладскойУчет.ПолучитьТаблицуПартийПоСпискуМПЗ(СписокМПЗ, Дата, Организация);
	
	Для Каждого Партия Из ТПартии Цикл
		
		Коэф = Партия.Количество / ТПартии.Итог("Количество");
		СС = Партия.Сумма / Партия.Количество;
		
		Для Каждого СтрокаНоменклатуры Из Материалы Цикл
			
			КоличествоРасходВПроводку = СтрокаНоменклатуры.КоличествоИзрасходовано * Коэф;
			КоличествоВПроводку = СтрокаНоменклатуры.Количество * Коэф;
			СуммаВПроводку = КоличествоРасходВПроводку * СС;
			
			Движение = Движения.Хозрасчетный.Добавить();
			Движение.Период = Дата;
			Движение.Организация = Организация;
			
			Движение.СчетДт = СтрокаНоменклатуры.Счет;
			УстановитьСубконто(Движение.СчетДт,Движение.СубконтоДт,1,СтрокаНоменклатуры.Номенклатура);
			УстановитьСубконто(Движение.СчетДт,Движение.СубконтоДт,2,Склад);
			Движение.КоличествоДт = КоличествоВПроводку;
			
			Движение.СчетКт = Счет;
			УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,1,Номенклатура);
			УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,2,Склад);
			УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,3,Партия.Партия);
			Движение.КоличествоКт = КоличествоРасходВПроводку;
			
			Движение.Сумма = СуммаВПроводку;
			
		КонецЦикла;	
		
	КонецЦикла;	
		
КонецПроцедуры

Функция ПечатьДокумента(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	
	//Макет = ПолучитьОбщийМакет(ИмяМакета);
	
	//Руководители = ОтветственныеЛица(Организация, Дата);	
	//Область.Параметры.Заполнить(Руководители);
	//Область = Макет.ПолучитьОбласть("ПП");
	//Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	
	//ТабДок.Вывести(Область);
	//ТабДок.ФиксацияСверху=0;
	//ТабДок.ФиксацияСлева=0;
	//ТабДок.ЭкземпляровНаСтранице=0;
	//ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	
	ТабДокумент = ПечатьДокумента(ИмяМакета);
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "");
	
КонецПроцедуры // Печать()

Процедура ЗаписатьЦеныВСправочник()
	
	Если ЗаписыватьЦеныВСправочник Тогда
		
		Для Каждого Строка из Материалы Цикл
			
			НоменклатураОбъект=Строка.Номенклатура.ПолучитьОбъект();
			НоменклатураОбъект.Цена=Строка.Цена;
			НоменклатураОбъект.Записать();
			
			
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	//Проверяем заполнение шапки
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("Склад","Не выбран склад.");
	СтруктураОбязательныхПолей.Вставить("Номенклатура","Не выбрана номенклатура.");
	СтруктураОбязательныхПолей.Вставить("Счет","Не выбран счет учета.");
	
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	//Проверяем заполнение табличной части 
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	СтруктураПолей.Вставить("Количество","Не введено приходуемое количество");
	СтруктураПолей.Вставить("КоличествоИзрасходовано","Не введено расходуемое количество");
	СтруктураПолей.Вставить("Счет","Не указан счет учета");
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Материалы", СтруктураПолей, Отказ, Заголовок);
	
	Если Количество <> Материалы.Итог("КоличествоИзрасходовано") Тогда
		Сообщить("Для расчета расходуемое количество должно совпадать с итогом расходуемого количества в таблице!");
		Отказ = Истина;
	КонецЕсли;	
		
КонецПроцедуры

Процедура ПроверитьОстаткиНаСкладе(Отказ=Ложь)
	
	Остаток = ПолучитьОстатокНоменклатуры(Номенклатура,Склад,Организация,Дата-1,Счет);
	Если Остаток.Количество = Неопределено Тогда
		Отказ = Истина;
		Сообщить("Нет остатков материала """+Номенклатура+""", счет учета "+Счет.Код+", склад """+Склад.Наименование+"""",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;	
	
	Если Остаток.Количество < Количество Тогда
		Сообщить("Недостаточно остатков номенклатуры ("+Номенклатура.Код+") """+Номенклатура+""", счет учета "+Счет.Код+", склад """+Склад.Наименование+"""",СтатусСообщения.Важное);
		Сообщить("В остатке: "+Строка(Остаток.Количество)+" "+Номенклатура.БазоваяЕдиницаИзмерения,СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры
