////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения строк табличной части "ОС".
//
Процедура ПроверитьЗаполнениеТабличнойЧастиОС(Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ОсновноеСредство");

	// Теперь вызовем общую процедуру проверки.
	ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация, СпособОтраженияРасходовПоАмортизации");

	// Теперь вызовем общую процедуру проверки.
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);


КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Выполняет движения по регистрам 
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоОС);

	ДатаДока       = СтруктураШапкиДокумента.Дата;
	ТекОрганизация = СтруктураШапкиДокумента.Организация;

	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
		
		НаправленияОС = Движения.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет;

		Для каждого СтрокаТЧ Из ТаблицаПоОС Цикл

			Движение = НаправленияОС.Добавить();
			Движение.Период           = ДатаДока;
			Движение.Организация      = ТекОрганизация;
			Движение.ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
			Движение.СпособыОтраженияРасходовПоАмортизации = СтруктураШапкиДокумента.СпособОтраженияРасходовПоАмортизации;

		КонецЦикла;
	КонецЕсли;

	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда

		НаправленияОС = Движения.СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчет;

		Для каждого СтрокаТЧ Из ТаблицаПоОС Цикл

			Движение = НаправленияОС.Добавить();

			Движение.Период           = ДатаДока;
			Движение.Организация      = ТекОрганизация;
			Движение.ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
			Движение.СпособыОтраженияРасходовПоАмортизации = СтруктураШапкиДокумента.СпособОтраженияРасходовПоАмортизации;

		КонецЦикла;

	КонецЕсли;
	
	ОперацииОС = Движения.СобытияОСОрганизацийБухгалтерскийУчет;
	Для Каждого СтрокаТЧ из ТаблицаПоОС Цикл
		СтрокаДвижений = ОперацииОС.Добавить();

		СтрокаДвижений.Период           = ДатаДока;
		СтрокаДвижений.ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
		СтрокаДвижений.Организация      = ТекОрганизация;
		СтрокаДвижений.Событие 			= СтруктураШапкиДокумента.СобытиеОС;
		СтрокаДвижений.НазваниеДокумента= Строка(СтруктураШапкиДокумента.Ссылка.Метаданные());
		СтрокаДвижений.НомерДокумента	= СтруктураШапкиДокумента.Номер;
	КонецЦикла;

КонецПроцедуры // ДвиженияПоРегистрам

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ)

	Заголовок = "";

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	СтруктураШапкиДокумента.Вставить("ВидСобытияОС",СтруктураШапкиДокумента.СобытиеОС.ВидСобытияОС);
	
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);

	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("ОсновноеСредство", "ОсновноеСредство");

	РезультатЗапросаПоОС = СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "ОС", СтруктураПолей);
	ТаблицаПоОС          = РезультатЗапросаПоОС.Выгрузить();

	ПроверитьЗаполнениеТабличнойЧастиОС(Отказ, Заголовок);
	
	// Проверим, нет ли повторяющихся основных средств в таблице по ОС.
	ПроверитьДублиОС(ТаблицаПоОС, Отказ, Заголовок);

	Если НЕ Отказ Тогда
		
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоОС);
		
	КонецЕсли;

КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры
