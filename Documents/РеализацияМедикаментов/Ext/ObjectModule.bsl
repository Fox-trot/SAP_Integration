Перем мНеСоздаватьДокумент Экспорт;

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("СчетФактура,Спецификация,Сертификаты,ПризнаниеДолга,Письмо","Счет-фактура","Спецификация","Сертификаты","Признание долга", "Письмо");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//Если ВРег(СокрЛП(Контрагент.Родитель.Наименование)) = ВРег("Покупатели") Тогда 
	//	Если НЕ Контрагент.ДатаКонецЛицензии <= ТекущаяДата()  Тогда
	//		
	//		     ПередЗаписьюРазрешено(Отказ, РежимЗаписи, РежимПроведения);
	//		//	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	//		
	//	Иначе 
	//		
	//		Отказ = Истина;
	//		Сообщить("Дата лицензии контрагента просрочена! Проверьте:(Справочник.Контрагенты.ДатаКонецЛицензии)");
	//	КонецЕсли;
	//	
	//Иначе
	//	ПередЗаписьюРазрешено(Отказ, РежимЗаписи, РежимПроведения);
	//КонецЕсли;
КонецПроцедуры

//ПДН(
Процедура ПередЗаписьюРазрешено(Отказ, РежимЗаписи, РежимПроведения)
	СуммаПоДокументу=Номенклатура.Итог("Сумма")+Номенклатура.Итог("СуммаНДС")+Услуги.Итог("Сумма")+Услуги.Итог("СуммаНДС");
	КоличествоПоДокументу=0;
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ПроверитьСозданДокументНаОснованииРезервированиеМедикаментов(Отказ);
КонецПроцедуры

//)ПДН

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	//Проверяем заполнение шапки
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("БанковскийСчет","Не выбран вид банковский счет");
	СтруктураОбязательныхПолей.Вставить("Контрагент","Не выбран вид контрагент");
	
	
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	//Проверяем заполнение табличной части 
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	СтруктураПолей.Вставить("СчетУчетаБУ","Не выбран счет учета номенклатуры");
	
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Номенклатура", СтруктураПолей, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);	
	
	ПроверитьОстаткиНоменклатурыПродаж(Отказ,ЭтотОбъект,Номенклатура, Склад,Организация,"СчетУчетаБУ",ДокументРезервирования);
	
	ДвиженияПоРегистрамБУ(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	ДвиженияПоРегистрам(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	
КонецПроцедуры

Процедура ДвиженияПоРегистрам(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента)
	
	Для Каждого Строка Из Номенклатура Цикл
		
		Движение=Движения.Продажи.Добавить();
		Движение.Период=Дата;
		Движение.Организация=Организация;
		Движение.Склад=Склад;
		Движение.Контрагент=Контрагент;
		Движение.Договор=ДоговорКонтрагента;
		Движение.Номенклатура=Строка.Номенклатура;
		Движение.ВидОборота=Перечисления.ВидыОборотовПоПродажам.Реализация;
		Движение.Валюта=Справочники.Валюты.ПустаяСсылка();
		Движение.Количество=Строка.Количество*Строка.ЕдиницаИзмерения.Коэффициент;
		Движение.Сумма=Строка.Сумма;
		Движение.СуммаНДС=Строка.СуммаНДС;
		Движение.СуммаВВалюте=0;
		Движение.СуммаНДСВВалюте=0;
		
	КонецЦикла;
	
	
	Если ЗначениеЗаполнено(ДокументРезервирования) Тогда
		Для Каждого Строка Из Номенклатура Цикл
			Движение=Движения.РезервыНоменклатурыПродаж.ДобавитьРасход();
			Движение.Организация=Организация;
			Движение.Период=Дата;
			Движение.Склад=Склад;
			Движение.Номенклатура=Строка.Номенклатура;
			Движение.Количество=Строка.Количество;
			Движение.ДокументРезервирования=ДокументРезервирования;
			Движение.Контрагент = Контрагент;
		КонецЦикла;
	КонецЕсли;
	
	
	ЗарегистрироватьИсходящийСчетФактуру(
	Ссылка, 
	Контрагент, 
	, 
	Номенклатура.Итог("Сумма") + Услуги.Итог("Сумма"), 
	Номенклатура.Итог("СуммаНДС") + Услуги.Итог("СуммаНДС"), 
	Номенклатура.Итог("Сумма") + Номенклатура.Итог("СуммаНДС") + Услуги.Итог("Сумма") + Услуги.Итог("СуммаНДС"));
	
	
	
КонецПроцедуры

Функция ПечатьСчетФактура()
	//Если ВРег(СокрЛП(Контрагент.Родитель.Наименование)) = ВРег("Покупатели") Тогда
	//	Если НЕ Контрагент.ДатаКонецЛицензии <= ТекущаяДата() Тогда
	//		
	//		Возврат ПечатьСчетФактурыРазрешено();
	//	Иначе
	//		//
	//		
	//		Сообщить("Дата лицензии контрагента просрочена! Проверьте:(Справочник.Контрагенты.ДатаКонецЛицензии)");
	//		Возврат Неопределено;
	//		//	
	//	КонецЕсли;
	//Иначе
	Возврат ПечатьСчетФактурыРазрешено();
	//КонецЕсли;
	
КонецФункции // ПечатьСчетФактура()

Функция ПечатьСчетФактурыРазрешено()
	ТабДок = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияМедикаментовНоменклатура.Номенклатура,
	|	РеализацияМедикаментовНоменклатура.Количество,
	|	РеализацияМедикаментовНоменклатура.Сумма КАК Сумма,
	|	РеализацияМедикаментовНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РеализацияМедикаментовНоменклатура.Цена КАК Цена,
	|	РеализацияМедикаментовНоменклатура.СрокГодности КАК СрокГодности,
	|	РеализацияМедикаментовНоменклатура.СуммаНДС КАК СуммаНДС,
	|	РеализацияМедикаментовНоменклатура.СтавкаНДС,
	|	РеализацияМедикаментовНоменклатура.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияМедикаментовНоменклатура.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ РеализацияМедикаментовНоменклатура.Сумма + РеализацияМедикаментовНоменклатура.СуммаНДС
	|	КОНЕЦ КАК Всего,
	|	РеализацияМедикаментовНоменклатура.Сумма + РеализацияМедикаментовНоменклатура.СуммаНДС КАК СуммаСУчетомАкцизаИНДС,
	|	РеализацияМедикаментовНоменклатура.Серия,
	|	РеализацияМедикаментовНоменклатура.Себестоимость,
	|	РеализацияМедикаментовНоменклатура.Наценка,
	|	РеализацияМедикаментовНоменклатура.Номенклатура.ПроисхождениеТовара КАК Происхождение
	|ИЗ
	|	Документ.РеализацияМедикаментов.Номенклатура КАК РеализацияМедикаментовНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияМедикаментов КАК РеализацияМедикаментов
	|		ПО РеализацияМедикаментовНоменклатура.Ссылка = РеализацияМедикаментов.Ссылка
	|ГДЕ
	|	РеализацияМедикаментов.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияМедикаментовУслуги.Услуга,
	|	NULL,
	|	РеализацияМедикаментовУслуги.Сумма,
	|	РеализацияМедикаментовУслуги.Услуга.БазоваяЕдиницаИзмерения,
	|	NULL,
	|	NULL,
	|	РеализацияМедикаментовУслуги.СуммаНДС,
	|	РеализацияМедикаментовУслуги.СтавкаНДС,
	|	РеализацияМедикаментовУслуги.НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияМедикаментовУслуги.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ РеализацияМедикаментовУслуги.Сумма + РеализацияМедикаментовУслуги.СуммаНДС
	|	КОНЕЦ,
	|	РеализацияМедикаментовУслуги.Сумма + РеализацияМедикаментовУслуги.СуммаНДС,
	|	NULL,
	|	NULL,
	|	NULL,
	|	РеализацияМедикаментовУслуги.Услуга.ПроисхождениеТовара
	|ИЗ
	|	Документ.РеализацияМедикаментов.Услуги КАК РеализацияМедикаментовУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияМедикаментов КАК РеализацияМедикаментов
	|		ПО РеализацияМедикаментовУслуги.Ссылка = РеализацияМедикаментов.Ссылка
	|ГДЕ
	|	РеализацияМедикаментов.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	|	СУММА(Всего),
	|	СУММА(СуммаСУчетомАкцизаИНДС)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка );
	
	Результат = Запрос.Выполнить();
	ВыборкаОбщие = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщие.Следующий();
	
	//==================================================
	Если Дата<Дата(2019,01,22) Тогда
		Макет = ПолучитьМакет("СчетФактура2018");
	Иначе 	
		Макет = ПолучитьМакет("СчетФактура");
	КонецЕсли;
	
	//	Макет = ПолучитьМакет("СчетФактура");//+?(Дата>=Дата(2014,1,1),"2014",""));
	
	СведенияОбОрганизации = СведенияОЮрФизЛице(Организация, БанковскийСчет, Дата);
	СведенияОКонтрагенте  = СведенияОЮрФизЛице(Контрагент, БанковскийСчетКонтрагента, Дата);
	
	Если ПечататьАкт Тогда
		
		Всего = ВыборкаОбщие.Сумма + ВыборкаОбщие.СуммаНДС;
		
		Область = Макет.ПолучитьОбласть("ЗаголовокАкт");
		Область.Параметры.ФИОДиректораВЛице	= "_______________________";
		Область.Параметры.КонтрагентВЛице	= ?(ЗначениеЗаполнено(КонтрагентВЛице),КонтрагентВЛице,"_______________________");
		Область.Параметры.КонтрагентНаОсновании	= ?(ЗначениеЗаполнено(КонтрагентНаОсновании),КонтрагентНаОсновании,"___________________");
		Область.Параметры.ДоговорПродажи	= ДоговорКонтрагента.Наименование;
		Область.Параметры.Дата				= Формат(Дата,"ДЛФ=D")+" г.";
		Область.Параметры.Всего				= Формат(Всего,"ЧДЦ=2");
		Область.Параметры.Заполнить(СведенияОбОрганизации);
		Область.Параметры.Заполнить(СведенияОКонтрагенте);
		ТабДок.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("ШапкаАкт");
		ТабДок.Вывести(Область);
		
		номерСтроки = 0;
		
		Выборка = ВыборкаОбщие.Выбрать();
		Пока Выборка.Следующий() Цикл
			номерСтроки = номерСтроки+1;
			Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС ИЛИ
				Выборка.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка()Тогда
				Область = Макет.ПолучитьОбласть("СтрокаАктБезНДС");
			Иначе	
				Область = Макет.ПолучитьОбласть("СтрокаАкт");
			КонецЕсли;
			
			Область.Параметры.Заполнить(Выборка);
			Область.Параметры.номерСтроки = номерСтроки;
			ТабДок.Вывести(Область);
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("ПодвалАкт");
		Область.Параметры.Заполнить(ВыборкаОбщие);
		#Если Сервер Тогда
		#ИначеЕсли Клиент Тогда 
			Область.Параметры.ВсегоПрописью	= СформироватьСуммуПрописью(Всего, Константы.ВалютаРегламентированногоУчета.Получить());
		#КонецЕсли
		//Руководители = ОтветственныеЛица(Организация, Дата);	
		//Область.Параметры.Заполнить(Руководители);
		ТабДок.Вывести(Область);
		
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ДоговорПродажи	= ДоговорКонтрагента.Наименование;
	Область.Параметры.Номер				= ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Дата				= Формат(Дата,"ДЛФ=D")+" г.";
	ТабДок.Вывести(Область);
	
	Если Контрагент.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		Область = Макет.ПолучитьОбласть("ШапкаФизЛицо");
	Иначе	
		Область = Макет.ПолучитьОбласть("Шапка");
	КонецЕсли;
	Область.Параметры.Заполнить(СведенияОбОрганизации);
	Область.Параметры.Заполнить(СведенияОКонтрагенте);
	ТабДок.Вывести(Область);
	
	номерСтроки = 0;
	
	Выборка = ВыборкаОбщие.Выбрать();
	Пока Выборка.Следующий() Цикл
		номерСтроки = номерСтроки+1;
		Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС ИЛИ
			Выборка.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка()Тогда
			Область = Макет.ПолучитьОбласть("СтрокаБезНДС");
		Иначе	
			Область = Макет.ПолучитьОбласть("Строка");
		КонецЕсли;
		
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.номерСтроки = номерСтроки;
		ТабДок.Вывести(Область);
	КонецЦикла;
	
	Если ФинансоваяСкидкаПроцент=0  И флФинСкидка = ЛОжь Тогда
		//Область = Макет.ПолучитьОбласть("Подвал");//18-11-2019 По просьбе Гл. Бухгалтера
		Область = Макет.ПолучитьОбласть("ПодвалБезБухгалтера");
	Иначе
		//Область = Макет.ПолучитьОбласть("ПодвалСкидка");//18-11-2019 По просьбе Гл. Бухгалтера
		Область = Макет.ПолучитьОбласть("ПодвалСкидка");
	КонецЕсли;
	
	Область.Параметры.Заполнить(ВыборкаОбщие);
	
	Всего=0;
	
	Попытка
		Всего = ВыборкаОбщие.Сумма + ВыборкаОбщие.СуммаНДС;
	Исключение
	КонецПопытки;
	
	Область.Параметры.Доверенность	= Доверенность;
	Область.Параметры.Получатель	= Получатель;
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
	Область.Параметры.Заполнить(Руководители);
	
	Если ФинансоваяСкидкаПроцент=0  И флФинСкидка = ЛОжь Тогда
		#Если Сервер Тогда
		#ИначеЕсли Клиент Тогда
			Область.Параметры.ВсегоПрописью	= СформироватьСуммуПрописью(Всего, Константы.ВалютаРегламентированногоУчета.Получить());
		#КонецЕсли
	Иначе
		Область.Параметры.ФинансоваяСкидкаПроцент=ФинансоваяСкидкаПроцент;
		Область.Параметры.ФинансоваяСкидкаСумма=ФинансоваяСкидкаСумма+?(флФинСкидка,ФинСкидка2,0);
		Область.Параметры.СуммаБезСкидки=Всего-ФинансоваяСкидкаСумма-?(флФинСкидка,ФинСкидка2,0);
		#Если Сервер Тогда
		#ИначеЕсли Клиент Тогда
			Область.Параметры.ВсегоПрописью	= СформироватьСуммуПрописью(Всего-ФинансоваяСкидкаСумма-?(флФинСкидка,ФинСкидка2,0), Константы.ВалютаРегламентированногоУчета.Получить());
		#КонецЕсли
	КонецЕсли;
	
	ТабДок.Вывести(Область);
	
	ТабДок.ФиксацияСверху			= 0;
	ТабДок.ФиксацияСлева			= 0;
	//ТабДок.ЭкземпляровНаСтранице	= 1;
	ТабДок.ТолькоПросмотр			= Истина;
	ТабДок.Автомасштаб				= Истина;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Ландшафт;
	
	ТабДок.КлючПараметровПечати="КПП_РеализацияМедикаментов";
	
	Возврат ТабДок;
	
КонецФункции

//ПДН(
Функция ПечатьПисьмо()
	
	ТабДок = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияМедикаментовНоменклатура.Номенклатура КАК Номенклатура,
	|	РеализацияМедикаментовНоменклатура.Количество КАК Количество,
	|	РеализацияМедикаментовНоменклатура.Сумма КАК Сумма,
	|	РеализацияМедикаментовНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РеализацияМедикаментовНоменклатура.Цена КАК Цена,
	|	РеализацияМедикаментовНоменклатура.СрокГодности КАК СрокГодности,
	|	РеализацияМедикаментовНоменклатура.СуммаНДС КАК СуммаНДС,
	|	РеализацияМедикаментовНоменклатура.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияМедикаментовНоменклатура.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияМедикаментовНоменклатура.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ РеализацияМедикаментовНоменклатура.Сумма + РеализацияМедикаментовНоменклатура.СуммаНДС
	|	КОНЕЦ КАК Всего,
	|	РеализацияМедикаментовНоменклатура.Сумма + РеализацияМедикаментовНоменклатура.СуммаНДС КАК СуммаСУчетомАкцизаИНДС,
	|	РеализацияМедикаментовНоменклатура.Серия КАК Серия,
	|	РеализацияМедикаментовНоменклатура.Себестоимость КАК Себестоимость,
	|	РеализацияМедикаментовНоменклатура.Наценка КАК Наценка,
	|	РеализацияМедикаментовНоменклатура.Номенклатура.ПроисхождениеТовара КАК Происхождение,
	|	РеализацияМедикаментов.Номер КАК Номер,
	|	РеализацияМедикаментов.Контрагент КАК Контрагент,
	|	РеализацияМедикаментов.ДоговорКонтрагента.НомерДоговора КАК ДоговорКонтрагентаНомерДоговора
	|ИЗ
	|	Документ.РеализацияМедикаментов.Номенклатура КАК РеализацияМедикаментовНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияМедикаментов КАК РеализацияМедикаментов
	|		ПО РеализацияМедикаментовНоменклатура.Ссылка = РеализацияМедикаментов.Ссылка
	|ГДЕ
	|	РеализацияМедикаментов.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияМедикаментовУслуги.Услуга,
	|	NULL,
	|	РеализацияМедикаментовУслуги.Сумма,
	|	РеализацияМедикаментовУслуги.Услуга.БазоваяЕдиницаИзмерения,
	|	NULL,
	|	NULL,
	|	РеализацияМедикаментовУслуги.СуммаНДС,
	|	РеализацияМедикаментовУслуги.СтавкаНДС,
	|	РеализацияМедикаментовУслуги.НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияМедикаментовУслуги.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ РеализацияМедикаментовУслуги.Сумма + РеализацияМедикаментовУслуги.СуммаНДС
	|	КОНЕЦ,
	|	РеализацияМедикаментовУслуги.Сумма + РеализацияМедикаментовУслуги.СуммаНДС,
	|	NULL,
	|	NULL,
	|	NULL,
	|	РеализацияМедикаментовУслуги.Услуга.ПроисхождениеТовара,
	|	NULL,
	|	NULL,
	|	NULL
	|ИЗ
	|	Документ.РеализацияМедикаментов.Услуги КАК РеализацияМедикаментовУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияМедикаментов КАК РеализацияМедикаментов
	|		ПО РеализацияМедикаментовУслуги.Ссылка = РеализацияМедикаментов.Ссылка
	|ГДЕ
	|	РеализацияМедикаментов.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	|	СУММА(Всего),
	|	СУММА(СуммаСУчетомАкцизаИНДС)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка );
	
	Результат = Запрос.Выполнить();
	ВыборкаОбщие = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщие.Следующий();
	
	//==================================================
	
	Макет = ПолучитьМакет("Письмо");
	
	//	Макет = ПолучитьМакет("СчетФактура");//+?(Дата>=Дата(2014,1,1),"2014",""));
	
	СведенияОбОрганизации = СведенияОЮрФизЛице(Организация, БанковскийСчет, Дата);
	СведенияОКонтрагенте  = СведенияОЮрФизЛице(Контрагент, БанковскийСчетКонтрагента, Дата);
	
	
	Всего = ВыборкаОбщие.Сумма + ВыборкаОбщие.СуммаНДС;      
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.НомерСФШапка = СтрЗаменить(СокрЛ(СтрЗаменить(Номер,"0"," "))," ","0");
	Область.Параметры.ПокупательШапка	= Контрагент.Наименование;
	Область.Параметры.ДатаШапка = Формат(Дата,"ДЛФ=D")+" г.";
	Область.Параметры.НомерДоговораШапка = ДоговорКонтрагента.НомерДоговора;
	Область.Параметры.ДатаДоговораШапка = Формат(ДоговорКонтрагента.ДатаДоговора, "ДФ=dd.MM.yyyy");
	
	
	
	ТабДок.Вывести(Область);
	
	
	номерСтроки = 0;
	
	Выборка = ВыборкаОбщие.Выбрать();
	Пока Выборка.Следующий() Цикл
		номерСтроки = номерСтроки+1;
		
		Область = Макет.ПолучитьОбласть("Строка");
		
		Область.Параметры.ТоварСтрока = Выборка.Номенклатура;
		Область.Параметры.СерияСтрока = Выборка.Серия;
		Область.Параметры.Производитель = Выборка.Номенклатура.Производитель;
		Если Выборка.Номенклатура.Родитель.ЭтоГруппа Тогда
			ФДата = Формат(Выборка.Номенклатура.Родитель.ДатаРегистрации,  "ДФ=dd.MM.yy");
			Область.Параметры.СерияНомерДатаСтрока = Выборка.Номенклатура.Родитель.СерияКонтракта + "; №" + Выборка.Номенклатура.Родитель.НомерКонтракта + "; Дата:" + ?(ФДата = "01.01.01", "", ФДата);
		КонецЕсли;
		Область.Параметры.НомерСтрока = номерСтроки;
		ТабДок.Вывести(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Подвал");
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
	Область.Параметры.Заполнить(Руководители);
	
	ТабДок.Вывести(Область);
	
	//Область.Параметры.РуководительПодвал = Руководители;
	
	
	ТабДок.ФиксацияСверху			= 0;
	ТабДок.ФиксацияСлева			= 0;
	//ТабДок.ЭкземпляровНаСтранице	= 1;
	ТабДок.ТолькоПросмотр			= Истина;
	ТабДок.Автомасштаб				= Истина;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	
	//ТабДок.КлючПараметровПечати="КПП_РеализацияМедикаментов";
	
	Возврат ТабДок;
	
КонецФункции // ПечатьПисьмо()
//)ПДН

Функция ПечетьСертификатов()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХранилищеДополнительнойИнформации.Хранилище,
	|	ХранилищеДополнительнойИнформации.Наименование КАК Наименование
	|ИЗ
	|	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
	|ГДЕ
	|	ХранилищеДополнительнойИнформации.Объект В(&Объект)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Запрос.УстановитьПараметр("Объект", Номенклатура.ВыгрузитьКолонку("Номенклатура"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	ОписаниеСертификата = "";
	
	КолИтог = 0;
	КолСерт = 0;
	Пока Выборка.Следующий() Цикл
		Если Выборка.Наименование <> ОписаниеСертификата Тогда
			ОписаниеСертификата = Выборка.Наименование;
			Знч = Выборка.Хранилище.Получить();
			
			Если НЕ Знч = Неопределено Тогда
				Если Найти(СокрЛП(ВРег(ОписаниеСертификата)), ВРег("СЕРТИФИКАТ")) Тогда
					КолСерт = КолСерт + 1;
				КонецЕсли;
				КолИтог = КолИтог + 1; 
			КонецЕсли;		  		  
			
			Знч = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	КолНаСтр = 0;
	
	
	
	
	//Моби-Уз ПДН 
	
	КолДок = КолИтог - КолСерт;
	
	
	#Если Сервер Тогда
	#ИначеЕсли Клиент Тогда
		Ответ = Вопрос("ОТПРАВИТЬ В ПЕЧАТЬ? " + Символы.ПС + Символы.ПС +
		" Товары = " + Номенклатура.Количество() + Символы.ПС + 
		" Сертификаты = " + КолСерт + Символы.ПС + 
		" Документы = " + КолДок + "",
		РежимДиалогаВопрос.ДаНет,
		0, // таймаут в секундах
		КодВозвратаДиалога.Да, // (необ.) кнопка по умолчанию
		"Отправлено в печать" // (необ.) заголовок
		);  
		
		////
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			
			Список = Новый СписокЗначений;
			Список.Добавить(1, "1");
			Список.Добавить(2, "2");
			Список.Добавить(3, "3");
			Список.Добавить(4, "4");
			
			//ОткрытаФорма = ПолучитьФорму("Документ.РеализацияМедикаментов.Форма.ФормаПечатиСертификатов");
			//ОткрытаФорма.ЗакрыватьПриВыборе = Истина;
			//ОткрытаФорма.КолСтр = Список;
			
			
			
			
			ВыбранноеЗначение = Список.ВыбратьЭлемент(); //показывает пользователю диалог (см. картинку)
			//	ВыбранноеЗначение.Представление = "Выберите количество экземпляров на странице.";
			
			Если ВыбранноеЗначение = Неопределено Тогда //если пользователь ничего не выбрал – то метод выбора значения возвращает НЕОПРЕДЕЛЕНО
				Сообщить("Выбранное значение НЕОПРЕДЕЛЕНО");
			ИначеЕсли ВыбранноеЗначение.Значение = 1 Тогда //далее мы сравниваем ЗНАЧЕНИЕ элемента, который выбрал пользователь (хотя пользователь видел не значения, а их представления)
				КолНаСтр = 1;
			ИначеЕсли ВыбранноеЗначение.Значение = 2 Тогда
				КолНаСтр = 2;
			ИначеЕсли ВыбранноеЗначение.Значение = 3 Тогда
				КолНаСтр = 3;
			ИначеЕсли ВыбранноеЗначение.Значение = 4 Тогда
				КолНаСтр = 4;
			КонецЕсли;
			
			
			
			
			//Массив = Новый Массив;
			колКарт = 1;
			
			колЭлм = 1;
			
			Если КолНаСтр = 4 Тогда
				Макет = ЭтотОбъект.ПолучитьМакет("Картинки_4");
				ОблКартинка = Макет.ПолучитьОбласть("Картинки");
			ИначеЕсли КолНаСтр = 3 Тогда
				Макет = ЭтотОбъект.ПолучитьМакет("Картинки_3");
				ОблКартинка = Макет.ПолучитьОбласть("Картинки");
			ИначеЕсли КолНаСтр = 2 Тогда
				Макет = ЭтотОбъект.ПолучитьМакет("Картинки_2");
				ОблКартинка = Макет.ПолучитьОбласть("Картинки");
			Иначе
				Макет = ЭтотОбъект.ПолучитьМакет("Сертификат");
				ОблКартинка = Макет.ПолучитьОбласть("Картинка");
			КонецЕсли;
			
			
			
			ОписаниеСертификата = "";
			Выборка.Сбросить();
			
			
			Массив = Новый Массив;
			
			
			
			Пока Выборка.Следующий() Цикл
				Если Выборка.Наименование <> ОписаниеСертификата Тогда
					ОписаниеСертификата = Выборка.Наименование;
					Знч = Выборка.Хранилище.Получить();
					Если НЕ Знч = Неопределено Тогда
						
						
						ТабДокумент = Новый ТабличныйДокумент();
						
						Если КолНаСтр = 3 ИЛИ КолНаСтр = 2 Тогда
							ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
						Иначе 
							ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
							
						КонецЕсли;
						
						ТабДокумент.АвтоМасштаб = Истина;
						ТабДокумент.ТолькоПросмотр = Истина;
						ТабДокумент.ОтображатьСетку = Ложь;
						
						
						
						Если КолНаСтр > 1 Тогда
							ОблКартинка.Область("Карт_" + колКарт).Картинка = Знч;
						Иначе
							ОблКартинка.Рисунки.D2.Картинка = Знч;
						КонецЕсли;
						
						ТабДокумент.Вывести(ОблКартинка);
						
						ГотовыйЛист = Ложь;
						Если КолНаСтр = колКарт И КолНаСтр <> 1 Тогда
							
							ТабДокумент.Напечатать();
							//ТабДокумент.Показать();
							Для Счет=1 По КолНаСтр Цикл
								ОблКартинка.Область("Карт_" + Счет).Картинка = Неопределено;
							КонецЦикла;
							
							
							колКарт = 1;
							ГотовыйЛист = Истина;
							//ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ИначеЕсли КолНаСтр = 1 Тогда
							//ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
							ТабДокумент.Напечатать();
							//ТабДокумент.Показать();
							
						ИначеЕсли КолИтог = колЭлм Тогда
							//ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
							ТабДокумент.Напечатать();
							//ТабДокумент.Показать();
							колКарт = 1;
						КонецЕсли;
						
						Если КолНаСтр <> 1 И НЕ ГотовыйЛист Тогда
							колКарт = колКарт + 1;
						КонецЕсли;
						
						колЭлм = колЭлм + 1;
					КонецЕсли;		  		  
					
					Знч = Неопределено;
				КонецЕсли;
			КонецЦикла;
			
			
			
		КонецЕсли;
	#КонецЕсли
	
	
	
КонецФункции

Функция ПечатьСпецификация()
	
	ТабДок = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияМедикаментовНоменклатура.Номенклатура,
	|	РеализацияМедикаментовНоменклатура.Количество,
	|	РеализацияМедикаментовНоменклатура.Сумма КАК Сумма,
	|	РеализацияМедикаментовНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РеализацияМедикаментовНоменклатура.Цена КАК Цена,
	|	РеализацияМедикаментовНоменклатура.СрокГодности КАК СрокГодности,
	|	РеализацияМедикаментовНоменклатура.СуммаНДС КАК СуммаНДС,
	|	РеализацияМедикаментовНоменклатура.СтавкаНДС,
	|	РеализацияМедикаментовНоменклатура.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияМедикаментовНоменклатура.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ РеализацияМедикаментовНоменклатура.Сумма + РеализацияМедикаментовНоменклатура.СуммаНДС
	|	КОНЕЦ КАК Всего,
	|	РеализацияМедикаментовНоменклатура.Сумма + РеализацияМедикаментовНоменклатура.СуммаНДС КАК СуммаСУчетомАкцизаИНДС,
	|	РеализацияМедикаментовНоменклатура.Серия,
	|	РеализацияМедикаментовНоменклатура.Себестоимость,
	|	РеализацияМедикаментовНоменклатура.Наценка,
	|	РеализацияМедикаментовНоменклатура.Номенклатура.ПроисхождениеТовара КАК Происхождение
	|ИЗ
	|	Документ.РеализацияМедикаментов.Номенклатура КАК РеализацияМедикаментовНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияМедикаментов КАК РеализацияМедикаментов
	|		ПО РеализацияМедикаментовНоменклатура.Ссылка = РеализацияМедикаментов.Ссылка
	|ГДЕ
	|	РеализацияМедикаментов.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияМедикаментовУслуги.Услуга,
	|	NULL,
	|	РеализацияМедикаментовУслуги.Сумма,
	|	РеализацияМедикаментовУслуги.Услуга.БазоваяЕдиницаИзмерения,
	|	NULL,
	|	NULL,
	|	РеализацияМедикаментовУслуги.СуммаНДС,
	|	РеализацияМедикаментовУслуги.СтавкаНДС,
	|	РеализацияМедикаментовУслуги.НомерСтроки,
	|	ВЫБОР
	|		КОГДА РеализацияМедикаментовУслуги.СуммаНДС = 0
	|			ТОГДА 0
	|		ИНАЧЕ РеализацияМедикаментовУслуги.Сумма + РеализацияМедикаментовУслуги.СуммаНДС
	|	КОНЕЦ,
	|	РеализацияМедикаментовУслуги.Сумма + РеализацияМедикаментовУслуги.СуммаНДС,
	|	NULL,
	|	NULL,
	|	NULL,
	|	РеализацияМедикаментовУслуги.Услуга.ПроисхождениеТовара
	|ИЗ
	|	Документ.РеализацияМедикаментов.Услуги КАК РеализацияМедикаментовУслуги
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияМедикаментов КАК РеализацияМедикаментов
	|		ПО РеализацияМедикаментовУслуги.Ссылка = РеализацияМедикаментов.Ссылка
	|ГДЕ
	|	РеализацияМедикаментов.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(СуммаНДС),
	|	СУММА(Всего),
	|	СУММА(СуммаСУчетомАкцизаИНДС)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка );
	
	Результат = Запрос.Выполнить();
	ВыборкаОбщие = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщие.Следующий();
	
	//==================================================
	
	Макет = ПолучитьМакет("Спецификация");
	
	СведенияОбОрганизации = СведенияОЮрФизЛице(Организация, БанковскийСчет, Дата);
	СведенияОКонтрагенте  = СведенияОЮрФизЛице(Контрагент, БанковскийСчетКонтрагента, Дата);
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ДоговорПродажи	= ДоговорКонтрагента.Наименование;
	Область.Параметры.Номер				= ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Дата				= Формат(Дата,"ДЛФ=D")+" г.";
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Область);
	
	номерСтроки = 0;
	Область = Макет.ПолучитьОбласть("Строка");
	
	Выборка = ВыборкаОбщие.Выбрать();
	Пока Выборка.Следующий() Цикл
		номерСтроки = номерСтроки+1;
		
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.номерСтроки = номерСтроки;
		ТабДок.Вывести(Область);
	КонецЦикла;
	
	
	Если ФинансоваяСкидкаПроцент=0  И флФинСкидка = ЛОжь Тогда
		Область = Макет.ПолучитьОбласть("Подвал");
	Иначе
		Область = Макет.ПолучитьОбласть("ПодвалСкидка");
	КонецЕсли;
	Область.Параметры.Заполнить(СведенияОбОрганизации);
	Область.Параметры.Заполнить(СведенияОКонтрагенте);
	Область.Параметры.Заполнить(ВыборкаОбщие);
	
	Всего=0;
	
	Попытка
		Всего = ВыборкаОбщие.Сумма + ВыборкаОбщие.СуммаНДС;
	Исключение
	КонецПопытки;
	
	Если ФинансоваяСкидкаПроцент=0  И флФинСкидка = ЛОжь Тогда		
		#Если Сервер Тогда
		#ИначеЕсли Клиент Тогда
			Область.Параметры.ВсегоПрописью	= СформироватьСуммуПрописью(Всего, Константы.ВалютаРегламентированногоУчета.Получить());
		#КонецЕсли
	Иначе
		Область.Параметры.ФинансоваяСкидкаПроцент=ФинансоваяСкидкаПроцент;
		Область.Параметры.ФинансоваяСкидкаСумма=ФинансоваяСкидкаСумма+?(флФинСкидка,ФинСкидка2,0);
		Область.Параметры.СуммаБезСкидки=Всего-ФинансоваяСкидкаСумма-?(флФинСкидка,ФинСкидка2,0);
		#Если Сервер Тогда
		#ИначеЕсли Клиент Тогда
			Область.Параметры.ВсегоПрописью	= СформироватьСуммуПрописью(Всего-ФинансоваяСкидкаСумма-?(флФинСкидка,ФинСкидка2,0), Константы.ВалютаРегламентированногоУчета.Получить());
		#КонецЕсли
	КонецЕсли;
	
	ТабДок.Вывести(Область);
	
	ТабДок.ФиксацияСверху			= 0;
	ТабДок.ФиксацияСлева			= 0;
	//ТабДок.ЭкземпляровНаСтранице	= 1;
	ТабДок.ТолькоПросмотр			= Истина;
	ТабДок.Автомасштаб				= Истина;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	
	ТабДок.КлючПараметровПечати="КПП_РеализацияМедикаментовСпецификация";
	
	Возврат ТабДок;
	
КонецФункции // ПечатьСчетФактура()

Функция ПечетьПризнаниеДолга()
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ЭтотОбъект.ПолучитьМакет("ПризнаниеДолга");
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	
	СведенияОбОрганизации = СведенияОЮрФизЛице(Организация, БанковскийСчет, Дата);
	СведенияОКонтрагенте  = СведенияОЮрФизЛице(Контрагент, БанковскийСчетКонтрагента, Дата);
	
	ОблШапка.Параметры.Дата = Формат(Дата,"ДЛФ=DD");
	ОблШапка.Параметры.Банк = СокрЛП(СведенияОКонтрагенте.КонтрагентБанк);
	ОблШапка.Параметры.Контрагент = СокрЛП(Контрагент.НаименованиеПолное);
	ОблШапка.Параметры.ИНН = Контрагент.ИНН;
	ОблШапка.Параметры.Организация = СведенияОбОрганизации.ОрганизацияНаименование;
	ОблШапка.Параметры.НомерДоговораДата = "" + СокрЛП(ДоговорКонтрагента.НомерДоговора) + " от " + Формат(ДоговорКонтрагента.ДатаДоговора,"ДФ='dd.MM.yyyy ""г.""'");
	ОблШапка.Параметры.Сумма = СуммаПоДокументу;
	#Если Сервер Тогда
	#ИначеЕсли Клиент Тогда
		ОблШапка.Параметры.СуммаПрописью = СформироватьСуммуПрописью(СуммаПоДокументу,Константы.ВалютаРегламентированногоУчета.Получить());
	#КонецЕсли
	ОблШапка.Параметры.СчетФактураДата = ПолучитьНомерНаПечать(ЭтотОбъект) + " от " + Формат(Дата,"ДЛФ=D")+" г."; 	
	ТабДок.Вывести(ОблШапка);
	ТабДок.Вывести(ОблШапка);
	Возврат ТабДок;
КонецФункции

Функция РассчитатьПереоценку(Номенклатура)
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаОстатков,
	|			Счет = &Счет8511,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Номенклатура) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("ДатаОстатков",Дата);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Счет8511",ПланыСчетов.Хозрасчетный.НайтиПоКоду("8511"));
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Возврат Запрос.Выполнить().Выгрузить().Итог("Сумма");
	
КонецФункции // ()

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	Если ИмяМакета="СчетФактура" Тогда
		ТабДокумент = ПечатьСчетФактура();
	ИначеЕсли ИмяМакета="Спецификация" Тогда
		ТабДокумент = ПечатьСпецификация();
	ИначеЕсли ИмяМакета="Сертификаты" Тогда
		ТабДокумент = ПечетьСертификатов();
	ИначеЕсли ИмяМакета="ПризнаниеДолга" Тогда
		ТабДокумент = ПечетьПризнаниеДолга();
	ИначеЕсли ИмяМакета="Письмо" Тогда
		ТабДокумент = ПечатьПисьмо();
	КонецЕсли; 
	
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Счет-фактура");
	
КонецПроцедуры // Печать()

Процедура ДвиженияПоРегистрамБУ(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента)
	
	
	ТаблицаОстатков = Новый ТаблицаЗначений;
	
	ЗаполнитьТаблицуОстатковНоменклатурыПродаж(ТаблицаОстатков,ЭтотОбъект,Склад,Организация,"СчетУчетаБУ");
	
	Для Каждого СтрокиНоменклатура Из Номенклатура Цикл
		
		КоличествоВПроводку=ПеревестиКоличествоВЕдиницуХраненияОстатка(СтрокиНоменклатура.Количество,СтрокиНоменклатура.Номенклатура,СтрокиНоменклатура.ЕдиницаИзмерения);
		
		Себестоимость=СтрокиНоменклатура.Себестоимость*СтрокиНоменклатура.Количество;
		
		СтрокаОстатков=ТаблицаОстатков.Найти(СтрокиНоменклатура.Номенклатура,"Субконто1");
		
		Если СтрокаОстатков<>неопределено Тогда
			Если СтрокаОстатков.КоличествоОстатокДт=СтрокиНоменклатура.Количество Тогда
				Себестоимость=СтрокаОстатков.СуммаОстатокДт;							
			ИначеЕсли СтрокаОстатков.КоличествоОстатокДт<>0 Тогда
				Себестоимость=СтрокаОстатков.СуммаОстатокДт/СтрокаОстатков.КоличествоОстатокДт*СтрокиНоменклатура.Количество;							
			КонецЕсли; 		
		КонецЕсли; 
		
		//Себестоимость=СтрокиНоменклатура.Себестоимость*СтрокиНоменклатура.Количество;
		
		Если не ОсобыеСчетаУчетаДоходовИСебестоимости Тогда
			Если СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Продукция Тогда
				СчетСебестоимости = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9110");
				СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9010");
			ИначеЕсли СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Товар Тогда
				СчетСебестоимости = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9120");
				СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9020");
			ИначеЕсли СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Работа 
				или СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Услуга Тогда
				СчетСебестоимости = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9130");
				СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9030");
			КонецЕсли;	
		Иначе
			СчетСебестоимости = СчетУчетаСебестоимости;
			СчетПрибыли = СчетУчетаДоходов;
		КонецЕсли;
		
		Если СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Продукция 
			или СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Товар Тогда
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "";     
			
			Проводка.СчетДт      = СчетСебестоимости;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокиНоменклатура.Номенклатура);
			
			Проводка.СчетКт     =  СтрокиНоменклатура.СчетУчетаБУ;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокиНоменклатура.Номенклатура);
			
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
			
			Проводка.КоличествоКт = КоличествоВПроводку;
			Проводка.Сумма = Себестоимость;
			Если СтрокиНоменклатура.Номенклатура.ВидНоменклатуры=Перечисления.ВидыНоменклатурыПродаж.Товар Тогда
				 
				
				Движение=Движения.СебестоимостьПродажи.Добавить();
				Движение.Период=Дата;
				Движение.Организация=Организация;
				Движение.Контрагент=Контрагент;
				Движение.Договор=ДоговорКонтрагента;
				Движение.Номенклатура=СтрокиНоменклатура.Номенклатура;
				Движение.ВидОборота=Перечисления.ВидыОборотовПоПродажам.Реализация;
				Движение.Количество=СтрокиНоменклатура.Количество;
				Движение.Сумма=Себестоимость;
				Движение.ДокументРеализации=Ссылка;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "";     
		
		Проводка.СчетДт      = СчетУчетаРасчетовСКонтрагентомБУ;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,Ссылка);
		
		Проводка.СчетКт     =  СчетПрибыли;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокиНоменклатура.Номенклатура);
		//Проводка.Сумма = СтрокиНоменклатура.Сумма + СтрокиНоменклатура.СуммаНДС; 
		Проводка.Сумма = СтрокиНоменклатура.Сумма;
		
		Если СтрокиНоменклатура.СуммаНДС<>0 Тогда
			
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "";     
			
			
			Проводка.СчетДт      = СчетУчетаРасчетовСКонтрагентомБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,Ссылка);
			
			
			Проводка.СчетКт     =  СчетУчетаПлатежа("НДС");
			Проводка.Сумма = СтрокиНоменклатура.СуммаНДС; 
			
		КонецЕсли; 
		
	КонецЦикла;
	
	
	Для Каждого СтрокиУслуги Из Услуги Цикл
		
		Если не ОсобыеСчетаУчетаДоходовИСебестоимости Тогда
			СчетПрибыли = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9030");
		Иначе
			СчетСебестоимости = СчетУчетаСебестоимости;
			СчетПрибыли = СчетУчетаДоходов;
		КонецЕсли;
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "";     
		
		Проводка.СчетДт      = СчетУчетаРасчетовСКонтрагентомБУ;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,Ссылка);
		
		Проводка.СчетКт     =  СчетПрибыли;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокиУслуги.Услуга);
		Проводка.Сумма = СтрокиУслуги.Сумма;
		
		Если СтрокиУслуги.СуммаНДС<>0 Тогда
			
			Проводка = Движения.Хозрасчетный.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "";     
			
			
			Проводка.СчетДт      = СчетУчетаРасчетовСКонтрагентомБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Контрагент);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,ДоговорКонтрагента);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,Ссылка);
			
			
			Проводка.СчетКт     =  СчетУчетаПлатежа("НДС");
			Проводка.Сумма = СтрокиУслуги.СуммаНДС; 
			
		КонецЕсли; 
		
	КонецЦикла;
	
	Если ФинансоваяСкидкаСумма<>0 Тогда
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Учтена фин. скидка";     
		
		Проводка.СчетДт     =  ПланыСчетов.Хозрасчетный.А9050;
		
		Проводка.СчетКт      = СчетУчетаРасчетовСКонтрагентомБУ;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Контрагент);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ДоговорКонтрагента);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,Ссылка);
		
		Проводка.Сумма = ФинансоваяСкидкаСумма; 
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Списана фин. скидка";     
		
		Проводка.СчетДт     =  ПланыСчетов.Хозрасчетный.А9020;
		
		Проводка.СчетКт      = ПланыСчетов.Хозрасчетный.А9050;
		
		Проводка.Сумма = ФинансоваяСкидкаСумма; 
		
	КонецЕсли;
	Если флФинСкидка Тогда
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Учтена фин. скидка";     
		
		Проводка.СчетДт     =  ПланыСчетов.Хозрасчетный.А9050;
		
		Проводка.СчетКт      = СчетУчетаРасчетовСКонтрагентомБУ;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Контрагент);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,ДоговорКонтрагента);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,Ссылка);
		
		Проводка.Сумма = ФинСкидка2; 
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "Списана фин. скидка";     
		
		Проводка.СчетДт     =  ПланыСчетов.Хозрасчетный.А9020;
		
		Проводка.СчетКт      = ПланыСчетов.Хозрасчетный.А9050;
		
		Проводка.Сумма = ФинСкидка2; 
		
	КонецЕсли;
	
	Если ЗачестьАванс Тогда
		Движения.Хозрасчетный.Записать();
		ЗачетАвансов.ВыполнитьЗакрытиеАвансов(ЭтотОбъект, СчетУчетаРасчетовСКонтрагентомБУ, Контрагент,ДоговорКонтрагента);
	КонецЕсли; 
	
КонецПроцедуры	 

Функция ПолучитьОстатокДенег()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаОстатка,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а6310_01),
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Субконто1
	|				И Субконто2 = &Субконто2) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("ДатаОстатка", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Субконто1", Контрагент);
	Запрос.УстановитьПараметр("Субконто2", ДоговорКонтрагента);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.СуммаОстатокКт;
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции	

Функция СформироватьОписаниеПервичногоДокумента(ПриходныйДокумент)
	
	ПервичныйДокумент=сокрлп(ПриходныйДокумент);	
	Если лев(ПервичныйДокумент,1)="№" или ЭтоЦифра(лев(ПервичныйДокумент,1)) Тогда
		Возврат "Сч.фак. "+ПервичныйДокумент;	
	Иначе
		Возврат ПервичныйДокумент;
	КонецЕсли; 
	
КонецФункции // ()

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РезервированиеМедикаментов") Тогда
		// Заполнение шапки
		БанковскийСчет = ДанныеЗаполнения.БанковскийСчет;
		БанковскийСчетКонтрагента = ДанныеЗаполнения.БанковскийСчетКонтрагента;
		ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
		КоличествоПоДокументу = ДанныеЗаполнения.КоличествоПоДокументу;
		Контрагент = ДанныеЗаполнения.Контрагент;
		ПоказыватьТекущиеОстатки = ДанныеЗаполнения.ПоказыватьТекущиеОстатки;
		Склад = ДанныеЗаполнения.Склад;
		ДокументРезервирования = ДанныеЗаполнения.Ссылка;
		СуммаПоДокументу = ДанныеЗаполнения.СуммаПоДокументу;
		ТипЦен = ДанныеЗаполнения.ТипЦен;
		ФинансоваяСкидкаСумма = ДанныеЗаполнения.ФинансоваяСкидкаСумма;
		ФинСкидка2 = ДанныеЗаполнения.ФинСкидка2;
		флФинСкидка = ДанныеЗаполнения.флФинСкидка;
		ОтветственныйБронь = ДанныеЗаполнения.Комментарий;
		ЧерезКого = ДанныеЗаполнения.ЧерезКого;
		Для Каждого ТекСтрокаНоменклатура Из ДанныеЗаполнения.Номенклатура Цикл
			НоваяСтрока = Номенклатура.Добавить();
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаНоменклатура.ЕдиницаИзмерения;
			НоваяСтрока.Количество = ТекСтрокаНоменклатура.Количество;
			НоваяСтрока.Наценка = ТекСтрокаНоменклатура.Наценка;
			НоваяСтрока.Номенклатура = ТекСтрокаНоменклатура.Номенклатура;
			НоваяСтрока.НоменклатурныйНомер = ТекСтрокаНоменклатура.НоменклатурныйНомер;
			НоваяСтрока.Себестоимость = ТекСтрокаНоменклатура.Себестоимость;
			НоваяСтрока.Серия = ТекСтрокаНоменклатура.Серия;
			НоваяСтрока.СтавкаНДС = ТекСтрокаНоменклатура.СтавкаНДС;
			НоваяСтрока.СрокГодности = ТекСтрокаНоменклатура.СрокГодности;
			НоваяСтрока.Сумма = ТекСтрокаНоменклатура.Сумма;
			НоваяСтрока.СуммаНДС = ТекСтрокаНоменклатура.СуммаНДС;
			НоваяСтрока.СчетУчетаБУ = ТекСтрокаНоменклатура.СчетУчетаБУ;
			НоваяСтрока.ТекущийОстаток = ТекСтрокаНоменклатура.ТекущийОстаток;
			НоваяСтрока.Цена = ТекСтрокаНоменклатура.Цена;
		КонецЦикла;
		
		//ПДН Моби-Уз
		ИтогСум = Номенклатура.Итог("Сумма");
		Если ИтогСум > 0 Тогда
			ФинансоваяСкидкаПроцент = ФинансоваяСкидкаСумма/ИтогСум*100;
		Иначе
			ФинансоваяСкидкаПроцент = 0;
		КонецЕсли;
		//
		
		//ФинансоваяСкидкаПроцент = ФинансоваяСкидкаСумма/Номенклатура.Итог("Сумма")*100;
		ПроверитьСозданДокументНаОснованииРезервированиеМедикаментов(мНеСоздаватьДокумент);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьСозданДокументНаОснованииРезервированиеМедикаментов(Отказ)
	Если ДокументРезервирования.Пустая() Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос=Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	РеализацияМедикаментов.Ссылка
	|ИЗ
	|	Документ.РеализацияМедикаментов КАК РеализацияМедикаментов
	|ГДЕ
	|	РеализацияМедикаментов.Проведен
	|	И РеализацияМедикаментов.Ссылка <> &Ссылка
	|	И РеализацияМедикаментов.ДокументРезервирования = &ДокументРезервирования";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ДокументРезервирования",ДокументРезервирования);
	Результат=Запрос.Выполнить().Выбрать();	
	Если Результат.Следующий() Тогда 
		Сообщить("На основания документа "+Строка(ДокументРезервирования)+" уже введен документ: " +Строка(Результат.ссылка));
		Отказ=Истина;
	КонецЕсли;
КонецПроцедуры

мНеСоздаватьДокумент=Ложь;
