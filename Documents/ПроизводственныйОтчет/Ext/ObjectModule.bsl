// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыБухУчета Экспорт; // (Регл)
Перем мДокументОснование       Экспорт;

Перем мУчетнаяПолитика;                 // (Общ)

Перем мВалютаРегламентированногоУчета Экспорт;


// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	//
	//ТабДокумент = Печать_();
	//
	//НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(Ссылка), НепосредственнаяПечать);
	
КонецПроцедуры // Печать()

//#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("","");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ДвиженияПоРегистрам(РежимПроведения,  Отказ, Заголовок, СтруктураШапкиДокумента)

	ПроверитьОстаткиМатериалов(Отказ,ЭтотОбъект,Материалы, Склад,Организация);
	ДвиженияПоБУ(РежимПроведения, Отказ, Заголовок ,СтруктураШапкиДокумента);
	
КонецПроцедуры

Процедура ДвиженияПоБУ(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	ПроводкиБУ = Движения.Хозрасчетный;
	
	Счет2010=ПланыСчетов.Хозрасчетный.А2010;
	Счет003=ПланыСчетов.Хозрасчетный.А003;
	
	Если ПараметрыСеанса.ВедетсяПартионныйУчет Тогда
		
		СписокМПЗ = СкладскойУчет.ПолучитьНовыйСписокМПЗ();
		Для Каждого СтрокаНоменклатуры Из Материалы Цикл
			СтрокаСписка = СписокМПЗ.Добавить();
			СтрокаСписка.Номенклатура = СтрокаНоменклатуры.Номенклатура;
			СтрокаСписка.Склад = Склад;
			СтрокаСписка.СчетУчета = СтрокаНоменклатуры.Счет;
			СтрокаСписка.Количество = СтрокаНоменклатуры.Количество;
		КонецЦикла;	
		
		ТПартии = СкладскойУчет.ПолучитьТаблицуПартийПоСпискуМПЗ(СписокМПЗ, Дата, Организация);
		ТМатериалы = Материалы.ВыгрузитьКолонки();
		ТМатериалы.Колонки.Добавить("Партия");
		
		Для Каждого СтрокаНоменклатуры Из Материалы Цикл
			
			КоличествоСписать = СтрокаНоменклатуры.Количество;
			
			Партии = ТПартии.НайтиСтроки(Новый Структура("Номенклатура,СчетУчета",СтрокаНоменклатуры.Номенклатура,СтрокаНоменклатуры.Счет));
			Для каждого Партия Из Партии Цикл
				
				КоличествоПоПартии = Партия.Количество;
				СуммаПоПартии = Партия.Сумма;
				Если КоличествоСписать < Партия.Количество Тогда
					КоличествоПоПартии = КоличествоСписать;
					СуммаПоПартии = Окр(Партия.Сумма/Партия.Количество*КоличествоПоПартии,2);
				КонецЕсли; 
				
				СтрокаТМатериалы = ТМатериалы.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТМатериалы, СтрокаНоменклатуры);
				СтрокаТМатериалы.Партия = Партия.Партия;
				СтрокаТМатериалы.Количество = КоличествоПоПартии;
				СтрокаТМатериалы.Сумма = СуммаПоПартии;
				
				КоличествоСписать = КоличествоСписать - КоличествоПоПартии;
				
				Если КоличествоПоПартии = Партия.Количество Тогда
					ТПартии.Удалить(Партия);
				Иначе
					Партия.Количество = Партия.Количество - КоличествоПоПартии;
					Партия.Сумма = Партия.Сумма - СуммаПоПартии;
				КонецЕсли;
				
			КонецЦикла; 
			
		КонецЦикла; 
		
		Для Каждого СтрокаНоменклатуры Из ТМатериалы Цикл
			
			Если СтрокаНоменклатуры.Количество=0 и СтрокаНоменклатуры.Сумма=0 Тогда
				Продолжить;
			КонецЕсли;	
			
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "";     
			
			Проводка.СчетДт      = Счет2010;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Подразделение);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаНоменклатуры.ГотоваяПродукция);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаНоменклатуры.СтатьяЗатрат);
			
			Проводка.СчетКт     =  СтрокаНоменклатуры.Счет;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаНоменклатуры.Номенклатура);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаНоменклатуры.Партия);
			
			Проводка.КоличествоСЗДт = СтрокаНоменклатуры.Количество;
			Проводка.КоличествоКт = СтрокаНоменклатуры.Количество;
			
			Проводка.Сумма = СтрокаНоменклатуры.Сумма;
			
		КонецЦикла; 
			
	Иначе	
		
		Для Каждого СтрокаНоменклатуры Из Материалы Цикл
			
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "";     
			
			Проводка.СчетДт      = Счет2010;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Подразделение);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаНоменклатуры.ГотоваяПродукция);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаНоменклатуры.СтатьяЗатрат);
			
			Проводка.СчетКт     =  СтрокаНоменклатуры.Счет;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаНоменклатуры.Номенклатура);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
			
			Проводка.КоличествоСЗДт = СтрокаНоменклатуры.Количество;
			Проводка.КоличествоКт = СтрокаНоменклатуры.Количество;
			
			Проводка.Сумма = СтрокаНоменклатуры.Сумма;
			
		КонецЦикла;	
		
	КонецЕсли;	
	
	Для Каждого СтрокаНоменклатуры Из Материалы Цикл
		
		//Проводка = ПроводкиБУ.Добавить();
		//Проводка.Период      = Дата;
		//Проводка.Организация = Организация;
		//Проводка.Содержание = "";     
		//
		//Проводка.СчетДт      = Счет2010;
		//УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Подразделение);
		//УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаНоменклатуры.ГотоваяПродукция);
		//УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаНоменклатуры.СтатьяЗатрат);
		//
		//
		//Проводка.СчетКт     =  СтрокаНоменклатуры.Счет;
		//УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаНоменклатуры.Номенклатура);
		//УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
		//Проводка.КоличествоСЗДт = СтрокаНоменклатуры.Количество;
		//Проводка.КоличествоКт = СтрокаНоменклатуры.Количество;
		//Проводка.Сумма = СтрокаНоменклатуры.Сумма;
		
		Если СтрокаНоменклатуры.КоличествоОтходов<>0 Тогда
			
			СуммаВПроводку=0;
			
			Если ОтходыПриходоватьПоСтоимостиМатериала Тогда 
				Если СтрокаНоменклатуры.Количество<>0 Тогда
					СуммаВПроводку=Окр(СтрокаНоменклатуры.КоличествоОтходов*СтрокаНоменклатуры.Сумма/СтрокаНоменклатуры.Количество,2);
				КонецЕсли;
			Иначе
				СуммаВПроводку=СтрокаНоменклатуры.КоличествоОтходов*СтрокаНоменклатуры.СтоимостьОтходов;
			КонецЕсли;
			
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "";     
			
			
			Проводка.СчетДт     =  СтрокаНоменклатуры.Отходы.СчетУчетаБУ;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаНоменклатуры.Отходы);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Склад);
			Проводка.КоличествоДт = СтрокаНоменклатуры.КоличествоОтходов;
			
			Проводка.СчетКт      = Счет2010;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Подразделение);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,СтрокаНоменклатуры.ГотоваяПродукция);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаНоменклатуры.СтатьяЗатрат);
			Проводка.КоличествоСЗКт = СтрокаНоменклатуры.КоличествоОтходов;
			
			Проводка.Сумма = СуммаВПроводку;
			
		КонецЕсли;
		
	КонецЦикла; 
	
	Для Каждого СтрокаНоменклатуры Из Полуфабрикаты Цикл
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "";     
		
		Проводка.СчетДт      = Счет2010;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Подразделение);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаНоменклатуры.ГотоваяПродукция);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаНоменклатуры.СтатьяЗатрат);
		
		
		Проводка.СчетКт     =  СтрокаНоменклатуры.Счет;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаНоменклатуры.Номенклатура);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
		
		Проводка.КоличествоСЗДт = СтрокаНоменклатуры.Количество*СтрокаНоменклатуры.ЕдиницаИзмерения.Коэффициент;
		
		Проводка.КоличествоКт = СтрокаНоменклатуры.Количество*СтрокаНоменклатуры.ЕдиницаИзмерения.Коэффициент/СтрокаНоменклатуры.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
		Проводка.Сумма = СтрокаНоменклатуры.Сумма;
		
	КонецЦикла; 
	
	Для Каждого СтрокаНоменклатуры Из МатериалыДавальческие Цикл
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "";     
		
		Проводка.СчетДт      = Счет2010;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Подразделение);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаНоменклатуры.ГотоваяПродукция);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаНоменклатуры.СтатьяЗатрат);
		
		
		Проводка.СчетКт      = Счет2010;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Подразделение);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,СтрокаНоменклатуры.ГотоваяПродукция);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаНоменклатуры.СтатьяЗатрат);
		
		Проводка.КоличествоСЗДт = СтрокаНоменклатуры.Количество;
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "";     
		
		Проводка.СчетКт      = Счет003;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаНоменклатуры.Номенклатура);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаНоменклатуры.Контрагент);
		
		Проводка.КоличествоКт = СтрокаНоменклатуры.Количество;
		Проводка.Сумма = СтрокаНоменклатуры.Сумма;
		
	КонецЦикла; 

	Для Каждого СтрокаНоменклатуры Из Продукция Цикл
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "";     
		
		Проводка.СчетДт      = Счет2010;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Подразделение);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаНоменклатуры.ГотоваяПродукция);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаНоменклатуры.СтатьяЗатрат);
		
		
		Проводка.СчетКт     =  СтрокаНоменклатуры.Счет;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаНоменклатуры.Номенклатура);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,СкладПродукции);
		Проводка.КоличествоСЗДт = СтрокаНоменклатуры.Количество;
		Проводка.КоличествоКт = СтрокаНоменклатуры.Количество;
		Проводка.Сумма = СтрокаНоменклатуры.Сумма;
		
	КонецЦикла; 

	Для Каждого Строка Из Выпуск Цикл
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "";     
		
		Проводка.СчетДт      = Счет2010;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Подразделение);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Строка.Номенклатура);
		
		
		Проводка.СчетКт     =  Счет2010;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Подразделение);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Строка.Номенклатура);
		
		Проводка.КоличествоДт = Строка.Количество*Строка.ЕдиницаИзмерения.Коэффициент;
		
	КонецЦикла; 
	
	УчетПоПлановойСебестоимости=Константы.УчетГотовойПродукцииПоПлановойСебестоимости.Получить();
	
	Если УчетПоПлановойСебестоимости Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения,
		|	ЦеныНоменклатурыСрезПоследних.Цена
		|ПОМЕСТИТЬ ПлановыеЦены
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСведений, ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦенНоменклатуры.ПлановаяСебестоимость)) КАК ЦеныНоменклатурыСрезПоследних
		|ГДЕ
		|	ЦеныНоменклатурыСрезПоследних.Валюта = &Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПроизводственныйОтчетПриходГотовойПродукции.Номенклатура,
		|	ПроизводственныйОтчетПриходГотовойПродукции.ЕдиницаИзмерения,
		|	ПроизводственныйОтчетПриходГотовойПродукции.Счет,
		|	ПроизводственныйОтчетПриходГотовойПродукции.Количество,
		|	ПроизводственныйОтчетПриходГотовойПродукции.Склад,
		|	ПроизводственныйОтчетПриходГотовойПродукции.ЕдиницаИзмерения.Коэффициент,
		|	Естьnull(ПлановыеЦены.Цена,0) КАК Цена,
		|	ПроизводственныйОтчетПриходГотовойПродукции.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
		|ИЗ
		|	Документ.ПроизводственныйОтчет.ПриходГотовойПродукции КАК ПроизводственныйОтчетПриходГотовойПродукции
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПлановыеЦены КАК ПлановыеЦены
		|		ПО ПроизводственныйОтчетПриходГотовойПродукции.Номенклатура = ПлановыеЦены.Номенклатура
		|			И ПроизводственныйОтчетПриходГотовойПродукции.ЕдиницаИзмерения = ПлановыеЦены.ЕдиницаИзмерения
		|ГДЕ
		|	ПроизводственныйОтчетПриходГотовойПродукции.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПлановыеЦены";
		
		Запрос.УстановитьПараметр("Валюта", Константы.ВалютаРегламентированногоУчета.Получить());
		Запрос.УстановитьПараметр("ДатаСведений", Дата);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Результат = Запрос.Выполнить();
		
		Выборка = Результат.Выбрать();
		
		Счет2840=ПланыСчетов.Хозрасчетный.А2840;
		
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.А2800) Тогда
				
				Проводка = ПроводкиБУ.Добавить();
				Проводка.Период      = Дата;
				Проводка.Организация = Организация;
				Проводка.Содержание = "";     
				
				Проводка.СчетДт      = Выборка.Счет;
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Выборка.Номенклатура);
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Выборка.Склад);
				
				Проводка.СчетКт     =  Счет2840;
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Выборка.Номенклатура);
				
				Проводка.КоличествоДт = Выборка.Количество*Выборка.ЕдиницаИзмеренияКоэффициент/Выборка.НоменклатураЕдиницаХраненияОстатковКоэффициент;
				
				Проводка.КоличествоКт = Выборка.Количество*Выборка.ЕдиницаИзмеренияКоэффициент/Выборка.НоменклатураЕдиницаХраненияОстатковКоэффициент;
				Проводка.Сумма = Проводка.КоличествоДт*Выборка.Цена;
				
				
				Проводка = ПроводкиБУ.Добавить();
				Проводка.Период      = Дата;
				Проводка.Организация = Организация;
				Проводка.Содержание = "";     
				
				Проводка.СчетДт      = Счет2840;
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Выборка.Номенклатура);
				
				Проводка.СчетКт     =  Счет2010;
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Подразделение);
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Выборка.Номенклатура);
				
				Проводка.КоличествоДт = Выборка.Количество*Выборка.ЕдиницаИзмеренияКоэффициент/Выборка.НоменклатураЕдиницаХраненияОстатковКоэффициент;
				
				Проводка.КоличествоКт = Выборка.Количество*Выборка.ЕдиницаИзмеренияКоэффициент;
				
			Иначе
				
				Проводка = ПроводкиБУ.Добавить();
				Проводка.Период      = Дата;
				Проводка.Организация = Организация;
				Проводка.Содержание = "";     
				
				Проводка.СчетДт      = Выборка.Счет;
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Выборка.Номенклатура);
				УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Выборка.Склад);
				
				Проводка.СчетКт     =  Счет2010;
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Подразделение);
				УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Выборка.Номенклатура);
				
				Проводка.КоличествоДт = Выборка.Количество*Выборка.ЕдиницаИзмеренияКоэффициент/Выборка.НоменклатураЕдиницаХраненияОстатковКоэффициент;
				
				Проводка.КоличествоКт = Выборка.Количество*Выборка.ЕдиницаИзмеренияКоэффициент;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		Для Каждого Строка Из ПриходГотовойПродукции Цикл
			
			Проводка = ПроводкиБУ.Добавить();
			Проводка.Период      = Дата;
			Проводка.Организация = Организация;
			Проводка.Содержание = "";     
			
			Проводка.СчетДт      = Строка.Счет;
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Строка.Номенклатура);
			УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Строка.Склад);
			
			
			Проводка.СчетКт     =  Счет2010;
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Подразделение);
			УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Строка.Номенклатура);
			
			Проводка.КоличествоДт = Строка.Количество*Строка.ЕдиницаИзмерения.Коэффициент/Строка.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
			
			Проводка.КоличествоКт = Строка.Количество*Строка.ЕдиницаИзмерения.Коэффициент;
			
			
		КонецЦикла; 
		
	КонецЕсли;
	
	Для Каждого Строка Из ПередачаПолуфабрикатов Цикл
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "";     
		
		Проводка.СчетДт      = Счет2010;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,Строка.Подразделение);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,Строка.Продукция);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,Строка.СтатьяЗатрат);
		
		
		Проводка.СчетКт     =  Счет2010;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,Подразделение);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Строка.Номенклатура);
		
		Проводка.КоличествоСЗДт = Строка.Количество*Строка.ЕдиницаИзмерения.Коэффициент;
		Проводка.КоличествоКт = Строка.Количество*Строка.ЕдиницаИзмерения.Коэффициент;
		
	КонецЦикла; 

	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;

	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);

	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	Если НЕ Отказ Тогда
		ДвиженияПоРегистрам(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("Склад","Не выбран склад.");
	СтруктураОбязательныхПолей.Вставить("Подразделение","Не выбрано подразделение.");
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	СтруктураПолей.Вставить("Счет","Не указан счет учета номенклатуры");	
	СтруктураПолей.Вставить("ГотоваяПродукция","Не выбрана готовая продукция");	
	СтруктураПолей.Вставить("СтатьяЗатрат","Не выбрана статья затрат");	
	
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Материалы", СтруктураПолей, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если СписыватьПоУказаннойСтоимости Тогда
		СуммаПоДокументу = Материалы.Итог("Сумма");
	Иначе	
		СуммаПоДокументу = 0;
	КонецЕсли; 
	
	КоличествоПоДокументу=Материалы.Итог("Количество");
	ПоказыватьТекущиеОстатки=ложь;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПересчитатьТаблицуПоЦенам() Экспорт
	Для каждого Строка Из Материалы Цикл
		Строка.сумма=Строка.Номенклатура.Цена*Строка.Количество;
	КонецЦикла; 
КонецПроцедуры

 


мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();