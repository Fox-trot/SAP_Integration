
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("","");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	СуммаПоДокументу=Остатки.Итог("Сумма");
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("Счет","Не выбран счет.");
	СтруктураОбязательныхПолей.Вставить("СчетИсточник","Не выбран счет-источник.");
	
	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);

	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	НаСчетеВедетсяПартионныйУчет = НаСчетеВедетсяПартионныйУчет(Счет);
	
	Для Каждого ТекСтрокаОстатки Из Остатки Цикл
		Движение = Движения.Хозрасчетный.Добавить();
		Движение.Период = Дата;
		Движение.Организация = Организация;
		
		Если Счет.Вид=ВидСчета.Активный или Счет.Вид=ВидСчета.АктивноПассивный Тогда
			
			Движение.СчетДт = Счет;
			
			Если Счет.Валютный Тогда
				Движение.ВалютаДт = ТекСтрокаОстатки.Валюта;
				Движение.ВалютнаяСуммаДт = ТекСтрокаОстатки.ВалютнаяСумма;
			КонецЕсли;
			
			Если Счет.Количественный Тогда
				Движение.КоличествоДт = ТекСтрокаОстатки.Количество;
			КонецЕсли;
			
			УстановитьСубконто(Движение.СчетДт,Движение.СубконтоДт,1,ТекСтрокаОстатки.Субконто1);
			УстановитьСубконто(Движение.СчетДт,Движение.СубконтоДт,2,ТекСтрокаОстатки.Субконто2);
			УстановитьСубконто(Движение.СчетДт,Движение.СубконтоДт,3,ТекСтрокаОстатки.Субконто3);
			УстановитьСубконто(Движение.СчетДт,Движение.СубконтоДт,4,ТекСтрокаОстатки.Субконто4);
			
			Если НаСчетеВедетсяПартионныйУчет Тогда
				Движение.СубконтоДт.Партия = Ссылка;
			КонецЕсли;
			
			Если Не Счет.Забалансовый Тогда
				Движение.СчетКт = СчетИсточник;
			КонецЕсли; 
			
			Движение.Сумма = ТекСтрокаОстатки.Сумма;
			
		Иначе
			
			Если Не Счет.Забалансовый Тогда
				Движение.СчетДт = СчетИсточник;
			КонецЕсли;	
			
			Движение.СчетКт = Счет;
			
			Если Счет.Валютный Тогда
				Движение.ВалютаКт = ТекСтрокаОстатки.Валюта;
				Движение.ВалютнаяСуммаКт = ТекСтрокаОстатки.ВалютнаяСумма;
			КонецЕсли;
			
			Если Счет.Количественный Тогда
				Движение.КоличествоКт = ТекСтрокаОстатки.Количество;
			КонецЕсли;
			
			УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,1,ТекСтрокаОстатки.Субконто1);
			УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,2,ТекСтрокаОстатки.Субконто2);
			УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,3,ТекСтрокаОстатки.Субконто3);
			УстановитьСубконто(Движение.СчетКт,Движение.СубконтоКт,4,ТекСтрокаОстатки.Субконто4);
			
			Если НаСчетеВедетсяПартионныйУчет Тогда
				Движение.СубконтоКт.Партия = Ссылка;
			КонецЕсли;
			
			Движение.Сумма = ТекСтрокаОстатки.Сумма;
			
		КонецЕсли;	
		
	КонецЦикла;
	
	//Если СчетИсточник=ПланыСчетов.Хозрасчетный.НайтиПоКоду("000") Тогда
	//
	//	Движение = Движения.Хозрасчетный.Добавить();
	//	Движение.Период = Дата;
	//	Движение.Организация = Организация;
	//	
	//	Если Счет.Вид=ВидСчета.Активный или Счет.Вид=ВидСчета.АктивноПассивный Тогда
	//		
	//		Движение.СчетДт = Счет;
	//		
	//		Движение.СчетКт = СчетИсточник;
	//		
	//		Движение.Сумма =- Остатки.Итог("Сумма");
	//		
	//	Иначе
	//					
	//		Движение.СчетДт = СчетИсточник;
	//		
	//		Движение.СчетКт = Счет;
	//		
	//		Движение.Сумма = -Остатки.Итог("Сумма");
	//		
	//	КонецЕсли;	
	//
	//КонецЕсли; 
	
	Движения.Хозрасчетный.Записать();

	
КонецПроцедуры

Функция ПечатьДокумента(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	
	//Макет = ПолучитьОбщийМакет(ИмяМакета);
	
	//Руководители = ОтветственныеЛица(Организация, Дата);	
	//Область.Параметры.Заполнить(Руководители);
	//Область = Макет.ПолучитьОбласть("ПП");
	//Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	
	//ТабДок.Вывести(Область);
	//ТабДок.ФиксацияСверху=0;
	//ТабДок.ФиксацияСлева=0;
	//ТабДок.ЭкземпляровНаСтранице=0;
	//ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	
	ТабДокумент = ПечатьДокумента(ИмяМакета);
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "");
	
КонецПроцедуры // Печать()


