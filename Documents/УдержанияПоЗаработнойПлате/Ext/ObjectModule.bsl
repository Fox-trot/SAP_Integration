
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("","");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ДвиженияПоРасчетнымРегистрам();
	
	ДвиженияПоБУ();
	
КонецПроцедуры

Процедура ДвиженияПоБУ()
	
	тз=новый ТаблицаЗначений;
	тз.Колонки.Добавить("СчетДт");
	тз.Колонки.Добавить("СубконтоДт1");
	тз.Колонки.Добавить("СубконтоДт2");
	тз.Колонки.Добавить("СубконтоДт3");
	тз.Колонки.Добавить("СчетКт");
	тз.Колонки.Добавить("СубконтоКт1");
	тз.Колонки.Добавить("СубконтоКт2");
	тз.Колонки.Добавить("СубконтоКт3");
	тз.Колонки.Добавить("Сумма",Новый ОписаниеТипов(Новый КвалификаторыЧисла(15,2)));
	
	Для Каждого ТекСтрокаРасчеты Из Расчеты Цикл
		
		Для н=1 По СписокУдержаний.Количество() Цикл
			
			ВидРасчета=СписокУдержаний[н-1].ВидРасчета;
			
			Если ВидРасчета.НеПроводить Тогда
				Продолжить;
			КонецЕсли; 
			
			//Если ВходитВГруппуУдержаний(ВидРасчета,Справочники.ГруппыУдержаний.ПрочиеРасходы) Тогда
			//	Продолжить;
			//КонецЕсли; 
			
			Результат=0;
			
			Если ТекСтрокаРасчеты["н"+Строка(н)]<>0 Тогда
				
				Результат=ТекСтрокаРасчеты["н"+Строка(н)];
				
			КонецЕсли; 
			
			Если Результат<>0 Тогда
				
				СтрокаТз = тз.Добавить();
				Если ВходитВГруппуУдержаний(ВидРасчета,Справочники.ГруппыУдержаний.ПрочиеРасходы) Тогда
					СтрокаТз.СчетДт = ВидРасчета.СчетДт;
					СтрокаТз.СубконтоДт1 = ВидРасчета.СубконтоДт1;
					СтрокаТз.СубконтоДт2 = ВидРасчета.СубконтоДт2;
					СтрокаТз.СубконтоДт3 = ВидРасчета.СубконтоДт3;
				Иначе
					СтрокаТз.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("6710");
					СтрокаТз.СубконтоДт1 = ТекСтрокаРасчеты.Сотрудник;
					СтрокаТз.СубконтоДт2 = ТекСтрокаРасчеты.Сотрудник;
					СтрокаТз.СубконтоДт3 = ТекСтрокаРасчеты.Сотрудник;
				КонецЕсли;
				СтрокаТз.СчетКт = ВидРасчета.СчетБУ;
				Если ЗначениеЗаполнено(ВидРасчета.СубконтоБУ1) Тогда
					СтрокаТз.СубконтоКт1 = ВидРасчета.СубконтоБУ1;
				Иначе
					СтрокаТз.СубконтоКт1 = ТекСтрокаРасчеты.Сотрудник;
				КонецЕсли;
				СтрокаТз.СубконтоКт2 = ВидРасчета.СубконтоБУ2;
				СтрокаТз.СубконтоКт3 = ВидРасчета.СубконтоБУ3;
				СтрокаТз.Сумма = Результат;
				
			КонецЕсли; 
			
		КонецЦикла; 
		
		
	КонецЦикла;
	
	тз.Свернуть("СчетДт,СубконтоДт1,СубконтоДт2,СубконтоДт3,СчетКт,СубконтоКт1,СубконтоКт2,СубконтоКт3","Сумма");
	
	Для каждого СтрокаТз Из Тз Цикл
		
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = "";     
		
		Проводка.СчетДт      = СтрокаТз.СчетДт;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаТз.СубконтоДт1);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаТз.СубконтоДт2);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаТз.СубконтоДт3);
		
		Проводка.СчетКт      = СтрокаТз.СчетКт;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаТз.СубконтоКт1);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,СтрокаТз.СубконтоКт2);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаТз.СубконтоКт3);
		Проводка.Сумма=СтрокаТз.Сумма;
	КонецЦикла; 
	
	
КонецПроцедуры

Процедура ДвиженияПоРасчетнымРегистрам()
	
	Если Подразделение.Пустая() Тогда
		Запрос=новый Запрос;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник,
		|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			&КонецПериода,
		|			Организация = &Организация
		|				И Сотрудник В (&СписокСотрудников)) КАК РаботникиОрганизацийСрезПоследних";
		
		Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(Дата));
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("СписокСотрудников",Расчеты.ВыгрузитьКолонку("Сотрудник"));
		
		СведенияОПодразделениях=Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	НТП=НачалоМесяца(Дата);
	КТП=КонецМесяца(Дата);
	
	
	Для Каждого ТекСтрокаРасчеты Из Расчеты Цикл
		
		Для н=1 По СписокУдержаний.Количество() Цикл
			
			ВидРасчета=СписокУдержаний[н-1].ВидРасчета;
			Результат=0;
			
			Если ТекСтрокаРасчеты["н"+Строка(н)]<>0 Тогда
				
				Результат=ТекСтрокаРасчеты["н"+Строка(н)];
				
			КонецЕсли; 
			
			Если Результат<>0 Тогда
				
				Движение = Движения.Удержания.Добавить();
				Движение.Сторно = Ложь;
				Движение.ВидРасчета = ВидРасчета;
				Движение.ПериодРегистрации = Дата;
				Движение.Организация = Организация;
				Движение.Сотрудник = ТекСтрокаРасчеты.Сотрудник;
				Движение.Результат = Результат;
				Движение.ДатаНачала = НТП;
				Движение.ДатаОкончания = КТП;
				
				Если Подразделение.Пустая() Тогда
					СведенияОПодразделении=СведенияОПодразделениях.Найти(ТекСтрокаРасчеты.Сотрудник);
					
					Если СведенияОПодразделении=Неопределено Тогда
						Если НЕ РасчетПоГруппеУволенных Тогда
						Сообщить("Нет данных о подразделении сотрудника "+ТекСтрокаРасчеты.Сотрудник.Наименование+" таб.№ "+ТекСтрокаРасчеты.Сотрудник.Код,СтатусСообщения.Важное);
						Отказ=истина;
						КонецЕсли;
					Иначе
						Движение.Подразделение = СведенияОПодразделении.ПодразделениеОрганизации;
					КонецЕсли;
				Иначе
					Движение.Подразделение = Подразделение;
				КонецЕсли;
				
			КонецЕсли; 
			
		КонецЦикла; 
		
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПечатьДокумента(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	
	//Макет = ПолучитьОбщийМакет(ИмяМакета);
	
	//Руководители = ОтветственныеЛица(Организация, Дата);	
	//Область.Параметры.Заполнить(Руководители);
	//Область = Макет.ПолучитьОбласть("ПП");
	//Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	
	//ТабДок.Вывести(Область);
	//ТабДок.ФиксацияСверху=0;
	//ТабДок.ФиксацияСлева=0;
	//ТабДок.ЭкземпляровНаСтранице=0;
	//ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	
	ТабДокумент = ПечатьДокумента(ИмяМакета);
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "");
	
КонецПроцедуры // Печать()

