
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ПлатежнаяВедомость","Платежная ведомость");
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	
	Выплачено=0;
	Депонировано=0;
	
	Для Каждого СтрокаСотрудники из Сотрудники  Цикл
		Если СтрокаСотрудники.Депонировать Тогда
			Депонировано=Депонировано+СтрокаСотрудники.СуммаКВыплате;
		Иначе	
			Выплачено=Выплачено+СтрокаСотрудники.СуммаКВыплате;
		КонецЕсли;
	КонецЦикла; 
	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если не ЕстьПолныеПрава() Тогда
	Если РасчетныйПериод<>Константы.ТекущийРасчетныйПериод.Получить() Тогда
		Отказ=истина;
		Предупреждение("Для проведения документа смените расчетный период на "+Формат(РасчетныйПериод,"ДФ=MMMM.yyyy"));
	КонецЕсли; 
	Конецесли;
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	//ДвиженияПоРегистрам(Режим, Отказ, Заголовок,СтруктураШапкиДокумента);
	
КонецПроцедуры

//Процедура	ДвиженияПоРегистрам(Режим, Отказ, Заголовок,СтруктураШапкиДокумента);
//	
//	
//	Если Подразделение.Пустая() Тогда
//		
//		Запрос=новый Запрос;
//		Запрос.Текст=
//		"ВЫБРАТЬ
//		|	РаботникиОрганизацийСрезПоследних.Сотрудник,
//		|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
//		|ИЗ
//		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
//		|		&КонецПериода,
//		|		Организация = &Организация
//		|			И Сотрудник В (&СписокСотрудников)) КАК РаботникиОрганизацийСрезПоследних";
//		
//		Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(Дата));
//		Запрос.УстановитьПараметр("Организация",Организация);
//		Запрос.УстановитьПараметр("СписокСотрудников",Сотрудники.ВыгрузитьКолонку("Сотрудник"));
//		
//		СведенияОПодразделениях=Запрос.Выполнить().Выгрузить();
//	
//	КонецЕсли; 
//	
//	Для Каждого СтрокаСотрудники из Сотрудники Цикл
//		
//		Если СтрокаСотрудники.Депонировать Тогда
//			Продолжить;
//		КонецЕсли; 
//		
//		Расчет=Движения.Удержания.Добавить();
//		Расчет.ПериодРегистрации=НачалоМесяца(РасчетныйПериод);
//		
//		Расчет.Организация=Организация;
//		Расчет.Сотрудник=СтрокаСотрудники.Сотрудник;
//		Если не Подразделение.Пустая() Тогда
//			Расчет.Подразделение=Подразделение;
//		Иначе
//			СведенияОПодразделении=СведенияОПодразделениях.Найти(СтрокаСотрудники.Сотрудник);
//			
//			Если СведенияОПодразделении=Неопределено Тогда
//				Сообщить("Нет данных о подразделении сотрудника "+СтрокаСотрудники.Сотрудник.Наименование+" таб.№ "+СтрокаСотрудники.Сотрудник.Код,СтатусСообщения.Важное);
//				Отказ=истина;
//			Иначе
//				Расчет.Подразделение=СведенияОПодразделении.ПодразделениеОрганизации;
//			КонецЕсли; 
//		КонецЕсли; 
//		
//		Расчет.Результат=СтрокаСотрудники.СуммаКВыплате;
//		
//		Расчет.ДатаНачала=НачалоМесяца(МесяцВыплаты);
//		Расчет.ДатаОкончания=КонецМесяца(МесяцВыплаты);
//		Расчет.ВидРасчета=ВидРасчета;
//		Расчет.КодВидаРасчета=ВидРасчета.Код;
//		Расчет.ОчередностьРасчета=ВидРасчета.ОчередностьРасчета;
//		Расчет.Фиксированный=истина;
//		
//	КонецЦикла;	
//	
//	Движения.Удержания.Записать();
//	

//КонецПроцедуры

Функция СумТийин(Сумма)
	
	Тийин=Сумма-Цел(Сумма);
	Если Тийин=0 Тогда
		Возврат Строка(Цел(Сумма))+" сум 00 т.";
	Иначе	
		Возврат Строка(Цел(Сумма))+" сум "+Прав(Строка(Тийин),2)+" т.";
	КонецЕсли; 
	
КонецФункции	

Функция ПечатьПлатежнаяВедомость(ИмяМакета)
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет(ИмяМакета);
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
	
	Область = Макет.ПолучитьОбласть("ТитульныйЛист");
	Область.Параметры.Организация = Организация;
	Область.Параметры.СтруктурноеПодразделение= Подразделение;
	Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Месяц = Формат(МесяцВыплаты,"ДФ=MMMM.yyyy")+" г.";
	Область.Параметры.ОбщаяСуммаКВыплатеПрописью = СформироватьСуммуПрописью(Сотрудники.Итог("СуммаКВыплате"),Константы.ВалютаРегламентированногоУчета.Получить());
	Область.Параметры.ОбщаяСуммаКВыплате = СумТийин(Сотрудники.Итог("СуммаКВыплате"));
	Область.Параметры.ВидВыплаты = ВидРасчета;
	Область.Параметры.Заполнить(Руководители);
	ТабДок.Вывести(Область);
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	
	НомерСтраницы=2;
	ШапкаТаблицы=Макет.ПолучитьОбласть("Шапка");
	ШапкаТаблицы.Параметры.НомерСтраницы = НомерСтраницы;
	ТабДок.Вывести(ШапкаТаблицы);

	ИтогПоЛисту=Макет.ПолучитьОбласть("ИтогПоЛисту");
	
	КоличествоСтрокНаЛисте=32;
	ТекущаяСтрока=0;
	СтрокаТаблицы=Макет.ПолучитьОбласть("Строка");
	
	СуммаКВыплатеПоЛисту=0;
	
	Для Каждого СтрокаСотрудники из Сотрудники Цикл
		
		ТекущаяСтрока=ТекущаяСтрока+1;
		
		Если ТекущаяСтрока>КоличествоСтрокНаЛисте Тогда
			ИтогПоЛисту.Параметры.СуммаКВыплатеПоЛисту = СуммаКВыплатеПоЛисту;
			ТабДок.Вывести(ИтогПоЛисту);
			
			НомерСтраницы=НомерСтраницы+1;
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ШапкаТаблицы.Параметры.НомерСтраницы = НомерСтраницы;
			ТабДок.Вывести(ШапкаТаблицы);
			ТекущаяСтрока=1;
			СуммаКВыплатеПоЛисту=0;
		КонецЕсли;
		
		СуммаКВыплатеПоЛисту=СуммаКВыплатеПоЛисту+СтрокаСотрудники.СуммаКВыплате;
		СтрокаТаблицы.Параметры.Заполнить(СтрокаСотрудники);		
		ТабДок.Вывести(СтрокаТаблицы);
		
	КонецЦикла; 
	
	ИтогПоЛисту.Параметры.СуммаКВыплатеПоЛисту = СуммаКВыплатеПоЛисту;
	ТабДок.Вывести(ИтогПоЛисту);
			
	ПодвалТаблицы=Макет.ПолучитьОбласть("Подвал");
	ПодвалТаблицы.Параметры.НомерСтраницы = НомерСтраницы;
	ПодвалТаблицы.Параметры.СуммаКВыплате = Сотрудники.Итог("СуммаКВыплате");
	ТабДок.Вывести(ПодвалТаблицы);
	
	ТабДок.ФиксацияСверху=0;
	ТабДок.ФиксацияСлева=0;
	ТабДок.ЭкземпляровНаСтранице=0;
	ТабДок.ТолькоПросмотр = Истина;
	
	Возврат ТабДок;
КонецФункции

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета="ПлатежнаяВедомость" Тогда
		ТабДокумент = ПечатьПлатежнаяВедомость(ИмяМакета);
	КонецЕсли; 
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "");
	
КонецПроцедуры // Печать()

Процедура ОбработкаЗаполнения(Основание)
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПроизвольныеРасчеты") Тогда
		
		ПроцентВыплаты=100;
		
		Если ВвестиЧисло(ПроцентВыплаты,"Введите % выплаты",10,1) Тогда
		
		КонецЕсли; 
		
		// Заполнение шапки
		Организация = Основание.Организация;
		Подразделение = Основание.Подразделение;
		Для Каждого ТекСтрокаРасчеты Из Основание.Расчеты Цикл
			Если ТекСтрокаРасчеты.СпособРасчета=Перечисления.СпособыРасчетаНачислений.Суммой Тогда
				НоваяСтрока = Сотрудники.Добавить();
				НоваяСтрока.СуммаКВыплате = Окр(ТекСтрокаРасчеты.Параметр*ПроцентВыплаты/100);
				НоваяСтрока.Сотрудник = ТекСтрокаРасчеты.Сотрудник;
				НоваяСтрока.ТабельныйНомер = ТекСтрокаРасчеты.ТабельныйНомер;
			КонецЕсли; 
		КонецЦикла;
		
		Если Сотрудники.Количество()=0 Тогда
			
			Предупреждение("Нет сотрудников к выплате!");
		
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если не ЕстьПолныеПрава() Тогда
	Если РасчетныйПериод<>Константы.ТекущийРасчетныйПериод.Получить() Тогда
		Отказ=истина;
		Предупреждение("Для отмены проведения документа смените расчетный период на "+Формат(РасчетныйПериод,"ДФ=MMMM.yyyy"));
	КонецЕсли; 
	Конецесли;
	
КонецПроцедуры

