
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Т8_от_5_1_2004" Тогда
		ТабДокумент = ПечатьТ8	(ИмяМакета);
		
	ИначеЕсли ИмяМакета = "Т8а_от_5_1_2004" тогда
		ТабДокумент = ПечатьТ8а(ИмяМакета);
		
	КонецЕсли;
		
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(ЭтотОбъект,"Увольнение из организации "));
	
КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура;
	СтруктураПечатныхФорм.Вставить("Т8а_от_5_1_2004", "Форма Т-8а");
	СтруктураПечатныхФорм.Вставить("Т8_от_5_1_2004",  "Форма Т-8");
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Формирует запрос по документу
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечати(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	Ссылка);
	Запрос.УстановитьПараметр("Руководитель"  ,	Перечисления.ОтветственныеЛицаОрганизаций.Руководитель);
	Запрос.УстановитьПараметр("ДатаДокумента" ,	Дата);
	Запрос.УстановитьПараметр("Организация"   ,	Организация);

	Если Режим = "ПоРеквизитамДокумента" Тогда

		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность КАК ДолжностьРуководителя,
		|	УвольнениеИзОрганизаций.Номер КАК НомерДок,
		|	УвольнениеИзОрганизаций.Дата КАК ДатаДок,
		|	ВЫРАЗИТЬ(УвольнениеИзОрганизаций.Организация.НаименованиеПолное КАК СТРОКА(300)) КАК НазваниеОрганизации,
		|	УвольнениеИзОрганизаций.Организация.КодПоОКПО КАК КодПоОКПО,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) <> """"
		|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "".""
		|			ИНАЧЕ """"
		|		КОНЕЦ + ВЫБОР
		|			КОГДА ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) <> """"
		|				ТОГДА "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
		|			ИНАЧЕ """"
		|		КОНЕЦ, ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование) КАК ФИОРуководителя,
		|	УвольнениеИзОрганизаций.Организация.Префикс
		|ИЗ
		|	Документ.ПриказОбУвольнении КАК УвольнениеИзОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(&ДатаДокумента, ОтветственноеЛицо = &Руководитель) КАК ОтветственныеЛицаОрганизацийСрезПоследних
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаДокумента, ) КАК ФИОФизЛицСрезПоследних
		|			ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|		ПО УвольнениеИзОрганизаций.Организация = ОтветственныеЛицаОрганизацийСрезПоследних.СтруктурнаяЕдиница
		|ГДЕ
		|	УвольнениеИзОрганизаций.Ссылка = &ДокументСсылка";

	ИначеЕсли Режим = "ПоШапкеДокумента" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1 КАК НомерСтроки,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ПриказОбУвольнении.Сотрудник.ФизическоеЛицо.Наименование) КАК Работник,
		|	ПриказОбУвольнении.ТабельныйНомер,
		|	ПриказОбУвольнении.ПричинаУвольнения КАК СтатьяТКРФ,
		|	ПриказОбУвольнении.ДатаУвольнения,
		|	Работники.Подразделение,
		|	Работники.Должность
		|ИЗ
		|	Документ.ПриказОбУвольнении КАК ПриказОбУвольнении
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СписокДат.Сотрудник КАК Сотрудник,
		|			РаботникиОрганизаций.ПодразделениеОрганизации КАК Подразделение,
		|			РаботникиОрганизаций.Должность КАК Должность
		|		ИЗ
		|			(ВЫБРАТЬ
		|				РаботникиВнутри.Сотрудник КАК Сотрудник,
		|				МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения
		|			ИЗ
		|				РегистрСведений.РаботникиОрганизаций КАК РаботникиВнутри
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриказОбУвольнении КАК Док
		|					ПО РаботникиВнутри.Период < Док.ДатаУвольнения
		|						И РаботникиВнутри.Сотрудник = Док.Сотрудник
		|			ГДЕ
		|				Док.Ссылка = &ДокументСсылка
		|			
		|			СГРУППИРОВАТЬ ПО
		|				РаботникиВнутри.Сотрудник) КАК СписокДат
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|				ПО СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизаций.Период
		|					И СписокДат.Сотрудник = РаботникиОрганизаций.Сотрудник) КАК Работники
		|		ПО ПриказОбУвольнении.Сотрудник = Работники.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
		|				&ДатаДокумента,
		|				ФизЛицо В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ПриказОбУвольнении.Сотрудник.ФизическоеЛицо
		|					ИЗ
		|						Документ.ПриказОбУвольнении КАК ПриказОбУвольнении
		|					ГДЕ
		|						ПриказОбУвольнении.Ссылка = &ДокументСсылка)) КАК ФИОФизЛицСрезПоследних
		|		ПО ПриказОбУвольнении.Сотрудник.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|ГДЕ
		|	ПриказОбУвольнении.Ссылка = &ДокументСсылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ ПО
		|	НомерСтроки";
		
	ИначеЕсли Режим = "ПоТабличнойЧастиДокумента" Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПриказОбУвольненииСотрудники.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ПриказОбУвольненииСотрудники.Сотрудник.ФизическоеЛицо.Наименование) КАК Работник,
		|	ПриказОбУвольненииСотрудники.ТабельныйНомер,
		|	ПриказОбУвольненииСотрудники.ПричинаУвольнения КАК СтатьяТКРФ,
		|	ПриказОбУвольненииСотрудники.ДатаУвольнения,
		|	Работники.Подразделение,
		|	Работники.Должность
		|ИЗ
		|	Документ.ПриказОбУвольнении.Сотрудники КАК ПриказОбУвольненииСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СписокДат.Сотрудник КАК Сотрудник,
		|			РаботникиОрганизаций.ПодразделениеОрганизации КАК Подразделение,
		|			РаботникиОрганизаций.Должность КАК Должность
		|		ИЗ
		|			(ВЫБРАТЬ
		|				РаботникиВнутри.Сотрудник КАК Сотрудник,
		|				МАКСИМУМ(РаботникиВнутри.Период) КАК ДатаПоследнегоИзменения
		|			ИЗ
		|				РегистрСведений.РаботникиОрганизаций КАК РаботникиВнутри
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриказОбУвольнении.Сотрудники КАК Док
		|					ПО РаботникиВнутри.Период < Док.ДатаУвольнения
		|						И РаботникиВнутри.Сотрудник = Док.Сотрудник
		|			ГДЕ
		|				Док.Ссылка = &ДокументСсылка
		|			
		|			СГРУППИРОВАТЬ ПО
		|				РаботникиВнутри.Сотрудник) КАК СписокДат
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|				ПО СписокДат.ДатаПоследнегоИзменения = РаботникиОрганизаций.Период
		|					И СписокДат.Сотрудник = РаботникиОрганизаций.Сотрудник) КАК Работники
		|		ПО ПриказОбУвольненииСотрудники.Сотрудник = Работники.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
		|				&ДатаДокумента,
		|				ФизЛицо В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ПриказОбУвольненииСотрудники.Сотрудник.ФизическоеЛицо
		|					ИЗ
		|						Документ.ПриказОбУвольнении.Сотрудники КАК ПриказОбУвольненииСотрудники
		|					ГДЕ
		|						ПриказОбУвольненииСотрудники.Ссылка = &ДокументСсылка)) КАК ФИОФизЛицСрезПоследних
		|		ПО ПриказОбУвольненииСотрудники.Сотрудник.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
		|ГДЕ
		|	ПриказОбУвольненииСотрудники.Ссылка = &ДокументСсылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ ПО
		|	НомерСтроки";

	Иначе
		Возврат Неопределено;
		
	КонецЕсли;

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросДляПечати()

#Если Клиент Тогда

// Функция формирует табличный документ с печатной формой "Т-8а",
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
 Функция ПечатьТ8а(ИмяМакета)

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УвольнениеИзОрганизации_Т8а";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	// получаем данные для печати
	ВыборкаДляШапки = СформироватьЗапросДляПечати("ПоРеквизитамДокумента").Выбрать();
	Если Списком Тогда
		ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента").Выбрать();
	Иначе
		ВыборкаРаботники = СформироватьЗапросДляПечати("ПоШапкеДокумента").Выбрать();
	КонецЕсли;
	ВсегоСтрокДокумента = ВыборкаРаботники.Количество();

	// запоминаем области макета
	Макет = ПолучитьМакет(ИмяМакета);
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа.
	ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати"); // повторяющаяся шапка страницы
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");// Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРаботник"); // строка работника

	// массив с двумя строками - для разбиения на страницы
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
	
	// выводим данные о руководителях организации
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
 		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки);// Для подвала.
	КонецЕсли;

	// Начинаем формировать выходной документ
	ТабДокумент.Вывести(ОбластьМакетаШапка); // Шапка документа.

	ВыведеноСтраниц = 0; ВыведеноСтрок = 0;
	// выводим строки по работникам
	Пока ВыборкаРаботники.Следующий() Цикл
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВыборкаРаботники);
		
		//уберем из табельного номера префикс
		ОбластьМакета.Параметры.ТабельныйНомер = ВыборкаРаботники.ТабельныйНомер;
		
		// разбиение на страницы
		ВыведеноСтрок = ВыведеноСтрок + 1;
		// Проверим, уместится ли строка на странице или надо открывать новую страницу
		ВывестиПодвалЛиста = Не ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		Если Не ВывестиПодвалЛиста и ВыведеноСтрок = ВсегоСтрокДокумента Тогда
			ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
			ВывестиПодвалЛиста = Не ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		КонецЕсли;
		Если ВывестиПодвалЛиста Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ПовторятьПриПечатиСтроки);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;

	// если не было ни одного работника - выводим пустой бланк
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьМакета);
	ВыводимыеОбласти.Добавить(ОбластьМакетаПодвал);
	Для Сч = 1 По ОбластьМакета.Параметры.Количество() Цикл
		ОбластьМакета.Параметры.Установить(Сч - 1,""); 
	КонецЦикла;
	ОбластьМакета.Параметры.Работник = " " + Символы.ПС + " ";
	Пока ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти, Ложь) Цикл
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;
	
	// выводим предварительно подготовленный Подвал документа.
	ТабДокумент.Вывести(ОбластьМакетаПодвал);

	Возврат ТабДокумент;

КонецФункции // ПечатьТ8а()

// Функция формирует табличный документ с печатной формой "Т-8",
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьТ8(ИмяМакета)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УвольнениеИзОрганизации_Т8";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	// получаем данные для печати
	ВыборкаДляШапки   = СформироватьЗапросДляПечати("ПоРеквизитамДокумента").Выбрать();
	Если Списком Тогда
		ВыборкаРаботники = СформироватьЗапросДляПечати("ПоТабличнойЧастиДокумента").Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Иначе
		ВыборкаРаботники = СформироватьЗапросДляПечати("ПоШапкеДокумента").Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КонецЕсли;

	// запоминаем области макета
	Макет = ПолучитьМакет(ИмяМакета);
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); // Шапка документа
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал"); // Подвал документа
	ОбластьМакета = Макет.ПолучитьОбласть("Работник"); // строка работника

	// выводим данные о руководителях организации
	Если ВыборкаДляШапки.Следующий() Тогда
		ОбластьМакетаШапка.Параметры.Заполнить(ВыборкаДляШапки); // Шапка документа.
		ОбластьМакетаШапка.Параметры.НазваниеОрганизации	= СокрЛП(ОбластьМакетаШапка.Параметры.НазваниеОрганизации);
		ОбластьМакетаПодвал.Параметры.Заполнить(ВыборкаДляШапки); // Для подвала.
		НомерДокДляПечати	= ВыборкаДляШапки.НомерДок;
	КонецЕсли;
	
	// Начинаем формировать выходной документ
	Пока ВыборкаРаботники.Следующий() Цикл

		ВложеннаяВыборка = ВыборкаРаботники.Выбрать(); 
		ВложеннаяВыборка.Следующий();

		// Каждый приказ на отдельной странице.
		Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		// Шапка документа.
		Если Сотрудники.Количество() > 1 Тогда
			ОбластьМакетаШапка.Параметры.НомерДок = НомерДокДляПечати + "/" + ВыборкаРаботники.НомерСтроки;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		// Данные по работнику.
		ОбластьМакета.Параметры.Заполнить(ВложеннаяВыборка);
		//ПредставлениеДатыДоговора                       = Формат(ВыборкаРаботники.ТрудовойДоговорДата, "ДЛФ=DD");
		//ОбластьМакета.Параметры.ТрудовойДоговорЧисло    = ?(ЗначениеЗаполнено(ВыборкаРаботники.ТрудовойДоговорДата), СокрЛП(Лев(ПредставлениеДатыДоговора,2)), "      ");
		//ОбластьМакета.Параметры.ТрудовойДоговорМесяцГод = ?(ЗначениеЗаполнено(ВыборкаРаботники.ТрудовойДоговорДата), СокрЛП(Прав(ПредставлениеДатыДоговора, СтрДлина(ПредставлениеДатыДоговора)-2)), "                     г.");
		ПредставлениеДатыУвольнения                     = Формат(ВложеннаяВыборка.ДатаУвольнения, "ДЛФ=DD");
		ОбластьМакета.Параметры.ДатаУвольненияЧисло     = ?(ЗначениеЗаполнено(ВложеннаяВыборка.ДатаУвольнения), СокрЛП(Лев(ПредставлениеДатыУвольнения,2)), "      ");
		ОбластьМакета.Параметры.ДатаУвольненияМесяцГод  = ?(ЗначениеЗаполнено(ВложеннаяВыборка.ДатаУвольнения),  СокрЛП(Прав(ПредставлениеДатыУвольнения, СтрДлина(ПредставлениеДатыУвольнения)-2)), "                     г.");
		
		//уберем из табельного номера префикс
		ОбластьМакета.Параметры.ТабельныйНомер = ВложеннаяВыборка.ТабельныйНомер;
		
		ТабДокумент.Вывести(ОбластьМакета);

		// Подвал документа.
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		
	КонецЦикла;
	
	// если не было ни одного работника - выводим пустой бланк
	Если ТабДокумент.ВысотаТаблицы = 0 Тогда
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		ТабДокумент.Вывести(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьТ8()

#КонецЕсли


////////////////////////////////////////////////////////////////////////////////

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	
	ДобавитьПрефиксУзла(Префикс);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Списком Тогда
		
		Сотрудник="";
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	ПроверитьСотрудников(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	
	Если Списком Тогда
		ПроверитьДубли( Отказ, Заголовок,"Сотрудник"," сотрудник ");
		ПроверитьДубли( Отказ, Заголовок,"ТабельныйНомер"," табельный № ");
	КонецЕсли; 
	
	ДвиженияПоРегистрам(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	
	глДанныеОСотрудниках="";	
	глДанныеОСотрудникахРассчитаны=ложь;

КонецПроцедуры                                                                         

Процедура ПроверитьДубли( Отказ, Заголовок,ИмяПоля,ОписаниеПоля) Экспорт
	
	ТаблицаДублей = Сотрудники.Выгрузить();
	
	// Подсчитываем количество повторений сотрудников.
	ТаблицаДублей.Колонки.Добавить("КоличествоПовторений");
	ТаблицаДублей.ЗаполнитьЗначения(1, "КоличествоПовторений");
	ТаблицаДублей.Свернуть(ИмяПоля, "КоличествоПовторений");
	
	// Если количество повторений > 1, выдаем сообщение об ошибке.
	Если ?(ТаблицаДублей.Количество() > 0, ТаблицаДублей.Итог("КоличествоПовторений") / ТаблицаДублей.Количество(), 0) > 1 Тогда
		
		ТекстСообщенияОбОшибке = "";
		
		// Цикл по каждому найденному повторению.
		Для Каждого СтрокаТаблицыДублей Из ТаблицаДублей Цикл
			
			Если СтрокаТаблицыДублей.КоличествоПовторений = 1 Тогда
				Продолжить; // повторений нет.
			КонецЕсли;
			
			// Добавим перевод строки, если требуется.
			ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке 
			                       + ?(ЗначениеНеЗаполнено(ТекстСообщенияОбОшибке), "", "
			                                                                            |");
			
			ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке
			                       + "В строках №№ "; 
								   
			// Выводим номера строк.
			СписокНомеровСтрок = "";
			МассивСтрок = Сотрудники.НайтиСтроки(Новый Структура(ИмяПоля, СтрокаТаблицыДублей[ИмяПоля]));
			Для Каждого Строка Из МассивСтрок Цикл
				СписокНомеровСтрок = СписокНомеровСтрок + ?(ЗначениеНеЗаполнено(СписокНомеровСтрок), "", ", ") + Строка.НомерСтроки;
			КонецЦикла;
			
			
			ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке
			                       + СписокНомеровСтрок
			                       + " табличной части указан один и тот же "+ОписаниеПоля+".";
								   
		КонецЦикла;
														  
		ОшибкаПриПроведении(ТекстСообщенияОбОшибке, Отказ, Заголовок);
		
	КонецЕсли;
	
КонецПроцедуры 

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	Если не Списком Тогда
		СтруктураОбязательныхПолей = Новый Структура();
		СтруктураОбязательныхПолей.Вставить("Организация");
		СтруктураОбязательныхПолей.Вставить("Сотрудник","Не выбран сотрудник.");
		СтруктураОбязательныхПолей.Вставить("ДатаУвольнения","Не заполнена дата увольнения.");
		
		ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	Иначе
		СтруктураОбязательныхПолей = Новый Структура();
		СтруктураОбязательныхПолей.Вставить("Организация");
		//СтруктураОбязательныхПолей.Вставить("ДатаУвольнения","Не заполнена дата увольнения.");
		ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
		
		СтруктураОбязательныхПолей = Новый Структура();
		СтруктураОбязательныхПолей.Вставить("Сотрудник","Не выбран сотрудник.");
		
		ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Сотрудники", СтруктураОбязательныхПолей, Отказ, Заголовок);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДвиженияПоРегистрам(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	
	Если не Списком Тогда
		СформироватьДвиженияПоСотруднику(СтруктураШапкиДокумента,Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	Иначе
		Для Каждого СтрокаСотрудники из Сотрудники Цикл
			СформироватьДвиженияПоСотруднику(СтрокаСотрудники,Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
		КонецЦикла; 
	КонецЕсли; 		
	
КонецПроцедуры 

Процедура СформироватьДвиженияПоСотруднику(Реквизиты,Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	
	Сведения=СведенияОСотруднике(Реквизиты.Сотрудник,Организация,Реквизиты.ДатаУвольнения-1);
	
	Если Сведения = Неопределено Тогда
		Сообщить("Не найдены сведения о сотруднике "+Строка(Реквизиты.Сотрудник));
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	//=======================================
	Движение=Движения.РаботникиОрганизаций.Добавить();	
	ЗаполнитьЗначенияСвойств(Движение, Сведения);
	Движение.Организация=Организация;
	Движение.Сотрудник=Реквизиты.Сотрудник;
	Движение.Период=Реквизиты.ДатаУвольнения;
	
	Движение.ТабельныйНомер=Реквизиты.ТабельныйНомер;
	
	Движение.ПричинаИзмененияСостояния=Перечисления.ПричиныИзмененияСостояния.Увольнение;
	Движение.ДополнительнаяИнформация=Реквизиты.ПричинаУвольнения;
	
	Движение.Категория=Сведения.Категория;
	Движение.ПодразделениеОрганизации=Сведения.Подразделение;
	Движение.ТипСотрудника=Сведения.ТипСотрудника;
	
	//=======================================
	Движение=Движения.ДанныеДляРасчетаЗП.Добавить();		
	Движение.Организация=Организация;
	Движение.Сотрудник=Реквизиты.Сотрудник;
	ЗаполнитьЗначенияСвойств(Движение,Сведения);
	Движение.Период=Реквизиты.ДатаУвольнения;
	
	//=======================================
	Движение=Движения.ДанныеДляРасчетаПН.Добавить();		
	Движение.Организация=Организация;
	Движение.Сотрудник=Реквизиты.Сотрудник;
	Движение.Период=Реквизиты.ДатаУвольнения;
	Движение.СпособРасчетаПН =Сведения.СпособРасчетаПН;
	
	//=======================================
	Движение=Движения.СпособыОтраженияРасходовПоЗПБУ.Добавить();		
	Движение.Организация=Организация;
	Движение.Сотрудник=Реквизиты.Сотрудник;
	Движение.Период=Реквизиты.ДатаУвольнения;
	Движение.СпособОтраженияРасходов=Сведения.СпособОтраженияРасходовБУ;
	//=======================================
	Движение=Движения.ПроцентВыплатыНаПластиковуюКарту.Добавить();
	Движение.Организация=Организация;
	Движение.Период=Реквизиты.ДатаУвольнения;
	Движение.Сотрудник=Реквизиты.Сотрудник;
	Движение.Процент=Сведения.ПроцентВыплатыНаПластиковуюКарту;
	
КонецПроцедуры

Процедура ПроверитьСотрудников(Режим, Отказ, Заголовок, СтруктураШапкиДокумента);
	
	МассивСотрудников=новый Массив;
	Если не Списком Тогда
		МассивСотрудников.Добавить(СтруктураШапкиДокумента.Сотрудник);
		
		Запрос=новый Запрос;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	ПриказОбУвольнении.Сотрудник,
		|	ДатыПриема.ДатаПриема,
		|	ПриказОбУвольнении.ДатаУвольнения
		|ИЗ
		|	Документ.ПриказОбУвольнении КАК ПриказОбУвольнении
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			РаботникиОрганизаций.Регистратор КАК Документ,
		|			РаботникиОрганизаций.Период КАК ДатаПриема,
		|			РаботникиОрганизаций.Сотрудник КАК Сотрудник
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|		ГДЕ
		|			РаботникиОрганизаций.Организация = &Организация
		|			И РаботникиОрганизаций.Сотрудник В(&МассивСотрудников)
		|			И РаботникиОрганизаций.ПричинаИзмененияСостояния = &ПриемНаРаботу) КАК ДатыПриема
		|		ПО ПриказОбУвольнении.Сотрудник = ДатыПриема.Сотрудник
		|ГДЕ
		|	ПриказОбУвольнении.Ссылка = &Ссылка";
		
	Иначе	
		МассивСотрудников=Сотрудники.ВыгрузитьКолонку("Сотрудник");
		
		Запрос=новый Запрос;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	ПриказОбУвольненииСотрудники.Сотрудник,
		|	ДатыПриема.ДатаПриема,
		|	ПриказОбУвольненииСотрудники.ДатаУвольнения
		|ИЗ
		|	Документ.ПриказОбУвольнении.Сотрудники КАК ПриказОбУвольненииСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			РаботникиОрганизаций.Регистратор КАК Документ,
		|			РаботникиОрганизаций.Период КАК ДатаПриема,
		|			РаботникиОрганизаций.Сотрудник КАК Сотрудник
		|		ИЗ
		|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|		ГДЕ
		|			РаботникиОрганизаций.Организация = &Организация
		|			И РаботникиОрганизаций.Сотрудник В(&МассивСотрудников)
		|			И РаботникиОрганизаций.ПричинаИзмененияСостояния = &ПриемНаРаботу) КАК ДатыПриема
		|		ПО ПриказОбУвольненииСотрудники.Сотрудник = ДатыПриема.Сотрудник
		|ГДЕ
		|	ПриказОбУвольненииСотрудники.Ссылка = &Ссылка";
	КонецЕсли;
	
	
	Запрос.УстановитьПараметр("ПриемНаРаботу", 	Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("МассивСотрудников", МассивСотрудников);
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("Ссылка",    Ссылка);
	
	ВыборкаДоков=Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДоков.Следующий() Цикл
		
		Если не ЗначениеЗаполнено(ВыборкаДоков.ДатаПриема) Тогда
			Сообщить("Сотрудник "+ВыборкаДоков.Сотрудник.Наименование+" не числится в организации, дата увольнения: "+строка(ВыборкаДоков.ДатаУвольнения));
			Отказ=истина;
		Иначе
			Если ВыборкаДоков.ДатаПриема>ВыборкаДоков.ДатаУвольнения Тогда
				Сообщить("Не верная дата увольнения!",СтатусСообщения.Важное);
				Сообщить("Сотрудник "+ВыборкаДоков.Сотрудник.Наименование+" принят с "+строка(ВыборкаДоков.ДатаПриема)+", дата увольнения: "+строка(ВыборкаДоков.ДатаУвольнения),СтатусСообщения.Важное);
				Отказ=истина;
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЦикла; 
	
	
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ 
	|	РаботникиОрганизаций.Регистратор КАК Документ,
	|	РаботникиОрганизаций.Период КАК ДатаУвольнения,
	|	РаботникиОрганизаций.Сотрудник
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.Организация = &Организация
	|	И РаботникиОрганизаций.Сотрудник В(&МассивСотрудников)
	|	И РаботникиОрганизаций.ПричинаИзмененияСостояния = &Увольнение";
	Запрос.УстановитьПараметр("Увольнение", 	Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("МассивСотрудников", МассивСотрудников);
	Запрос.УстановитьПараметр("Организация",    Организация);
	
	ВыборкаДоков=Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаМассива из МассивСотрудников Цикл
		СтрокаВыборки=ВыборкаДоков.Найти(СтрокаМассива,"Сотрудник");	
		Если СтрокаВыборки<>неопределено Тогда
			Сообщить("На сотрудника "+СтрокаМассива+" уже оформлялся приказ об увольнении: "+СтрокаВыборки.Документ+", дата увольнения: "+строка(СтрокаВыборки.ДатаУвольнения));
		    Отказ=истина;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры 

Процедура ОбработкаЗаполнения(Основание)
	Если ТипЗнч(Основание) = Тип("СправочникСсылка.Сотрудники") Тогда
		Сотрудник = Основание.Ссылка;
		ТабельныйНомер = Сотрудник.Код;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	глДанныеОСотрудниках="";	
	глДанныеОСотрудникахРассчитаны=ложь;

КонецПроцедуры


