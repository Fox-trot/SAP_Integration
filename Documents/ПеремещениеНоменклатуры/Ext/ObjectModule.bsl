// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыБухУчета Экспорт; // (Регл)
Перем мДокументОснование       Экспорт;

Перем мУчетнаяПолитика;                 // (Общ)

Перем мВалютаРегламентированногоУчета Экспорт;

//#Если Клиент Тогда

Функция ПолучитьТаблицуМатериалов()
	
	Запрос = Новый Запрос;
	
	Если ПараметрыСеанса.ВедетсяПартионныйУчет Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК Номенклатура,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт2 КАК Склад,
		|	ХозрасчетныйДвиженияССубконто.КоличествоКт КАК Количество,
		|	ХозрасчетныйДвиженияССубконто.Сумма,
		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1.Код КАК КодНоменклатуры,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто.КоличествоКт <> 0
		|			ТОГДА ХозрасчетныйДвиженияССубконто.Сумма / ХозрасчетныйДвиженияССубконто.КоличествоКт
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Цена
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			,
		|			,
		|			Регистратор = &Ссылка
		|				И СубконтоКт1 ССЫЛКА Справочник.Номенклатура,
		|			,
		|			) КАК ХозрасчетныйДвиженияССубконто
		|ГДЕ
		|	ХозрасчетныйДвиженияССубконто.Сумма <> 0";
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеНоменклатурыМатериалы.Сумма,
		|	ПеремещениеНоменклатурыМатериалы.Номенклатура,
		|	ПеремещениеНоменклатурыМатериалы.Номенклатура.Код КАК КодНоменклатуры,
		|	ПеремещениеНоменклатурыМатериалы.Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ПеремещениеНоменклатурыМатериалы.Количество,
		|	ВЫБОР
		|		КОГДА ПеремещениеНоменклатурыМатериалы.Количество <> 0
		|			ТОГДА ПеремещениеНоменклатурыМатериалы.Сумма / ПеремещениеНоменклатурыМатериалы.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Цена
		|ИЗ
		|	Документ.ПеремещениеНоменклатуры.Материалы КАК ПеремещениеНоменклатурыМатериалы
		|ГДЕ
		|	ПеремещениеНоменклатурыМатериалы.Ссылка = &Ссылка";
		
	КонецЕсли;

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции	

Функция ПечатьНакладная()
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Накладная");
	
	Руководители = ОтветственныеЛица(Организация, Дата);	
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Номер = ПолучитьНомерНаПечать(ЭтотОбъект);
	Область.Параметры.Дата = Формат(Дата,"ДФ=dd.MM.yyyy")+" г.";
	Область.Параметры.Организация = Организация;
	Область.Параметры.Склад = Склад;
	Область.Параметры.СкладПолучатель = СкладПолучатель;
	
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка");
	
	тМатериалы = ПолучитьТаблицуМатериалов();
	
	нпп = 0;
	Для Каждого СтрокаНоменклатуры из тМатериалы Цикл
		нпп = нпп + 1;
		Область.Параметры.Заполнить(СтрокаНоменклатуры);
		Область.Параметры.НомерСтроки = нпп;
		ТабДок.Вывести(Область);
	КонецЦикла; 
	
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.Количество = тМатериалы.Итог("Количество");
	Область.Параметры.Сумма = тМатериалы.Итог("Сумма");
	Область.Параметры.СуммаПрописью = СформироватьСуммуПрописью(тМатериалы.Итог("Сумма"),Константы.ВалютаРегламентированногоУчета.Получить());
	Область.Параметры.Отправитель = ДанныеФизЛица(Организация,Склад.МОЛ.ФизическоеЛицо,Дата).Представление;
	Область.Параметры.Получатель = ДанныеФизЛица(Организация,СкладПолучатель.МОЛ.ФизическоеЛицо,Дата).Представление;
	
	ТабДок.Вывести(Область);
	
	ТабДок.ФиксацияСверху=0;
	ТабДок.ФиксацияСлева=0;
	ТабДок.ЭкземпляровНаСтранице=0;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;

	Возврат ТабДок;

КонецФункции // ПечатьМ11()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если      ИмяМакета = "Накладная" Тогда
		ТабДокумент = ПечатьНакладная();
		
	КонецЕсли;
	
	НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, СформироватьЗаголовокДокумента(Ссылка), НепосредственнаяПечать);
	
КонецПроцедуры // Печать()

//#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("Накладная","Накладная");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
// Параметры: 
//  РезультатЗапросаПоТоварам - результат запроса по табличной части "Товары",
//  СтруктураШапкиДокумента   - выборка по результату запроса по шапке документа.
//
// Возвращаемое значение:
//  Сформированная таблиица значений.
//
Функция ПодготовитьТаблицуТоваров(РезультатЗапросаПоТоварам, СтруктураШапкиДокумента)

	ТаблицаМатериалов = РезультатЗапросаПоТоварам.Выгрузить();

	ТаблицаМатериалов.Колонки.Добавить("ДокументОприходования");
	ТаблицаМатериалов.Колонки.Добавить("Регистратор");
	ТаблицаМатериалов.Колонки.Добавить("Склад");
	ТаблицаМатериалов.Колонки.Добавить("Организация");
	ТаблицаМатериалов.Колонки.Добавить("ДоговорКонтрагента");
	ТаблицаМатериалов.Колонки.Добавить("Валюта");
	ТаблицаМатериалов.Колонки.Добавить("ВходящийНДС");
	ТаблицаМатериалов.Колонки.Добавить("КоэффОплаты");
	КоэффОплаты      = 1;
	ТаблицаМатериалов.ЗаполнитьЗначения(КоэффОплаты,   							"КоэффОплаты");
	ТаблицаМатериалов.ЗаполнитьЗначения(ЭтотОбъект,    							"Регистратор");
	ТаблицаМатериалов.ЗаполнитьЗначения(СтруктураШапкиДокумента.Склад,      	"Склад");
	ТаблицаМатериалов.ЗаполнитьЗначения(СтруктураШапкиДокумента.Организация,	"Организация");
	

	Возврат ТаблицаМатериалов;

КонецФункции // ПодготовитьТаблицуТоваров()

Процедура ДвиженияПоРегистрамПоУказаннойСтоимости(РежимПроведения,  Отказ, Заголовок, СтруктураШапкиДокумента)

	ПроверитьОстаткиМатериалов(Отказ,ЭтотОбъект,Материалы, Склад,Организация);
	Если ПараметрыСеанса.ВедетсяПартионныйУчет Тогда
		ДвиженияПоБУПоПартиям(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента);
	Иначе
		ДвиженияПоБУПоУказаннойСтоимости(РежимПроведения, Отказ, Заголовок ,СтруктураШапкиДокумента);
	КонецЕсли;	
		
КонецПроцедуры

Процедура ДвиженияПоБУПоУказаннойСтоимости(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	ПроводкиБУ = Движения.Хозрасчетный;
	
	Для Каждого СтрокаНоменклатуры Из Материалы Цикл
		
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = ?(ПолучательВТаблице,"Тр. №"+СтрокаНоменклатуры.Требование,"");     
		
		Проводка.СчетДт     =  СтрокаНоменклатуры.СчетДебет;
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаНоменклатуры.Номенклатура);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,?(ПолучательВТаблице,СтрокаНоменклатуры.СкладПолучатель,СкладПолучатель));
		Проводка.КоличествоДт = СтрокаНоменклатуры.Количество;
		
		Проводка.СчетКт     =  СтрокаНоменклатуры.Счет;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаНоменклатуры.Номенклатура);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
		Проводка.КоличествоКт = СтрокаНоменклатуры.Количество;
		
		Проводка.Сумма = СтрокаНоменклатуры.Сумма; 
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ДвиженияПоБУПоПартиям(Режим, Отказ, Заголовок ,СтруктураШапкиДокумента)
	
	ПроводкиБУ = Движения.Хозрасчетный;
	
	СписокМПЗ = СкладскойУчет.ПолучитьНовыйСписокМПЗ();
	Для Каждого СтрокаНоменклатуры Из Материалы Цикл
		СтрокаСписка = СписокМПЗ.Добавить();
		СтрокаСписка.Номенклатура = СтрокаНоменклатуры.Номенклатура;
		СтрокаСписка.Склад = Склад;
		СтрокаСписка.СчетУчета = СтрокаНоменклатуры.Счет;
		СтрокаСписка.Количество = СтрокаНоменклатуры.Количество;
	КонецЦикла;	
	
	ТПартии = СкладскойУчет.ПолучитьТаблицуПартийПоСпискуМПЗ(СписокМПЗ, Дата, Организация);
	
	ТМатериалы = Материалы.ВыгрузитьКолонки();
	ТМатериалы.Колонки.Добавить("Партия");
	
	Для Каждого СтрокаНоменклатуры Из Материалы Цикл
		
		КоличествоСписать = СтрокаНоменклатуры.Количество;
		
		Партии = ТПартии.НайтиСтроки(Новый Структура("Номенклатура,СчетУчета",СтрокаНоменклатуры.Номенклатура,СтрокаНоменклатуры.Счет));
		Для каждого Партия Из Партии Цикл
			
			КоличествоПоПартии = Партия.Количество;
			СуммаПоПартии = Партия.Сумма;
			Если КоличествоСписать < Партия.Количество Тогда
				КоличествоПоПартии = КоличествоСписать;
				СуммаПоПартии = Партия.Сумма/Партия.Количество*КоличествоПоПартии;
			КонецЕсли; 
			
			СтрокаТМатериалы = ТМатериалы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТМатериалы, СтрокаНоменклатуры);
			СтрокаТМатериалы.СкладПолучатель = ?(ПолучательВТаблице,СтрокаНоменклатуры.СкладПолучатель,СкладПолучатель);
			СтрокаТМатериалы.Партия = Партия.Партия;
			СтрокаТМатериалы.Количество = КоличествоПоПартии;
			СтрокаТМатериалы.Сумма = СуммаПоПартии;
			
			КоличествоСписать = КоличествоСписать - КоличествоПоПартии;
			
			Если КоличествоПоПартии = Партия.Количество Тогда
				ТПартии.Удалить(Партия);
			Иначе
				Партия.Количество = Партия.Количество - КоличествоПоПартии;
				Партия.Сумма = Партия.Сумма - СуммаПоПартии;
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЦикла;	
		
	Для Каждого СтрокаНоменклатуры Из ТМатериалы Цикл
		
		Проводка = ПроводкиБУ.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание = ?(ПолучательВТаблице,"Тр. №"+СтрокаНоменклатуры.Требование,"");     
		
		Проводка.СчетДт     =  СтрокаНоменклатуры.СчетДебет;   
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,1,СтрокаНоменклатуры.Номенклатура);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,2,СтрокаНоменклатуры.СкладПолучатель);
		УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,3,СтрокаНоменклатуры.Партия);
		Проводка.КоличествоДт = СтрокаНоменклатуры.Количество;
		
		Проводка.СчетКт     =  СтрокаНоменклатуры.Счет;
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,1,СтрокаНоменклатуры.Номенклатура);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,2,Склад);
		УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,3,СтрокаНоменклатуры.Партия);
		Проводка.КоличествоКт = СтрокаНоменклатуры.Количество;
		
		Проводка.Сумма = СтрокаНоменклатуры.Сумма; 
		
	КонецЦикла; 
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;

	Заголовок = ПредставлениеДокументаПриПроведении(Ссылка);

	СтруктураШапкиДокумента = СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента);
	
	Если НЕ Отказ Тогда
		ДвиженияПоРегистрамПоУказаннойСтоимости(РежимПроведения, Отказ, Заголовок, СтруктураШапкиДокумента);
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

Процедура ПроверитьЗаполнениеДокумента(Отказ, Заголовок, СтруктураШапкиДокумента)
	
	//Проверяем заполнение шапки
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	СтруктураОбязательныхПолей.Вставить("Склад","Не выбран склад.");
	Если НЕ ПолучательВТаблице Тогда
		СтруктураОбязательныхПолей.Вставить("СкладПолучатель","Не выбран получатель.");
	КонецЕсли;
	

	ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	//Проверяем заполнение табличной части 
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура","Не выбрана номенклатура");
	
	Если ОтражатьПоБУ Тогда
		СтруктураПолей.Вставить("Счет","Не указан счет учета номенклатуры");
		СтруктураПолей.Вставить("СчетДебет","Не указан счет учета номенклатуры");
	КонецЕсли; 
	Если ПолучательВТаблице Тогда
		СтруктураПолей.Вставить("СкладПолучатель","Не выбран получатель.");
	КонецЕсли;
	
	ПроверитьЗаполнениеТабличнойЧастиПлатежногоДокумента(ЭтотОбъект, "Материалы", СтруктураПолей, Отказ, Заголовок);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если СписыватьПоУказаннойСтоимости Тогда
		СуммаПоДокументу = Материалы.Итог("Сумма");
	Иначе	
		СуммаПоДокументу = 0;
	КонецЕсли; 
	
	КоличествоПоДокументу=Материалы.Итог("Количество");
	ПоказыватьТекущиеОстатки=ложь;
	
	Если РежимЗаписи=РежимЗаписиДокумента.Проведение Тогда
		
		УдалитьСтрокиСНулевымКоличеством(ЭтотОбъект,"Материалы");
		
	КонецЕсли;	

	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПересчитатьТаблицуПоЦенам() Экспорт
	Для каждого Строка Из Материалы Цикл
		Строка.сумма=Строка.Номенклатура.Цена*Строка.Количество;
	КонецЦикла; 
КонецПроцедуры

мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();