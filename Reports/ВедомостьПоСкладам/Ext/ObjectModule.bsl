Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;

#Если Клиент Тогда

Перем Запрос;

Процедура УстановитьТекстЗапроса()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстаткиИОбороты.Счет,
	|	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Номенклатура,
	|	ХозрасчетныйОстаткиИОбороты.Субконто2 КАК Склад,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК СуммаНаНачало,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК СуммаПриход,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК СуммаРасход,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК СуммаНаКонец,
	|	ХозрасчетныйОстаткиИОбороты.КоличествоНачальныйОстатокДт КАК КоличествоНаНачало,
	|	ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт КАК КоличествоПриход,
	|	ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт КАК КоличествоРасход,
	|	ХозрасчетныйОстаткиИОбороты.КоличествоКонечныйОстатокДт КАК КоличествоНаКонец,
	|	ХозрасчетныйОстаткиИОбороты.Организация,
	|	ХозрасчетныйОстаткиИОбороты.Субконто1.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.Субконто1.ЕдиницаДляОтчетов.Коэффициент, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.Субконто1.ЕдиницаДляОтчетов.Коэффициент
	|	КОНЕЦ КАК КоэффициентЕдиницаДляОтчетов,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ХозрасчетныйОстаткиИОбороты.Субконто1.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ХозрасчетныйОстаткиИОбороты.Субконто1.ЕдиницаХраненияОстатков.Коэффициент
	|	КОНЕЦ КАК КоэффициентЕдиницаХраненияОстатков
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а2800))
	|				ИЛИ Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.а2900)),
	|			,
	|			Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.Счет,
	|	ВТ.Номенклатура,
	|	ВТ.Склад,
	|	ВТ.СуммаНаНачало,
	|	ВТ.СуммаПриход,
	|	ВТ.СуммаРасход,
	|	ВТ.СуммаНаКонец,
	|	ВТ.КоличествоНаНачало КАК КоличествоДляХраненияОстатковНаНачало,
	|	ВТ.КоличествоПриход КАК КоличествоДляХраненияОстатковПриход,
	|	ВТ.КоличествоРасход КАК КоличествоДляХраненияОстатковРасход,
	|	ВТ.КоличествоНаКонец КАК КоличествоДляХраненияОстатковНаКонец,
	|	ВТ.Организация,
	|	ВТ.ЕдиницаИзмерения,
	|	ВТ.КоэффициентЕдиницаДляОтчетов,
	|	ВТ.КоэффициентЕдиницаХраненияОстатков,
	|	ВТ.КоличествоНаНачало * ВТ.КоэффициентЕдиницаХраненияОстатков / ВТ.КоэффициентЕдиницаДляОтчетов КАК КоличествоДляОтчетовНаНачало,
	|	ВТ.КоличествоПриход * ВТ.КоэффициентЕдиницаХраненияОстатков / ВТ.КоэффициентЕдиницаДляОтчетов КАК КоличествоДляОтчетовПриход,
	|	ВТ.КоличествоРасход / ВТ.КоэффициентЕдиницаДляОтчетов / ВТ.КоэффициентЕдиницаДляОтчетов КАК КоличествоДляОтчетовРасход,
	|	ВТ.КоличествоНаКонец * ВТ.КоэффициентЕдиницаХраненияОстатков / ВТ.КоэффициентЕдиницаДляОтчетов КАК КоличествоДляОтчетовНаКонец,
	|	ВТ.КоличествоНаНачало * ВТ.КоэффициентЕдиницаХраненияОстатков КАК КоличествоНаНачало,
	|	ВТ.КоличествоПриход * ВТ.КоэффициентЕдиницаХраненияОстатков КАК КоличествоПриход,
	|	ВТ.КоличествоРасход * ВТ.КоэффициентЕдиницаХраненияОстатков КАК КоличествоРасход,
	|	ВТ.КоличествоНаКонец * ВТ.КоэффициентЕдиницаХраненияОстатков КАК КоличествоНаКонец,
	|	ВТ.Номенклатура.ЕдиницаДляОтчетов КАК ЕдиницаДляОтчетов,
	|	ВТ.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков
	|ИЗ
	|	ВТ КАК ВТ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ";
	
	Запрос.Текст = ТекстЗапроса;

КонецПроцедуры
	
Процедура СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина, ВнешниеНаборыДанных = Неопределено) Экспорт
	
	Результат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ВыводЗаголовкаОтчета(ЭтотОбъект, Результат);
	ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных);
	КомпоновщикНастроек.Восстановить();
	НастройкаКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	СтандартныеОтчеты.ВывестиОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных, Истина, НастройкаКомпоновкиДанных);
		
	// Выполним дополнительную обработку Результата отчета
	ОбработкаРезультатаОтчета(Результат);
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом(ВнешниеНаборыДанных) Экспорт
	
	// Данные для компоновщика получаем запросом и передаем в СКД таблицу значений
	Запрос = Новый Запрос;
	
	УстановитьТекстЗапроса();
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",КонецДня(КонецПериода));
	
	Выборка = Запрос.Выполнить();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("Выборка", Выборка);

	//ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Период", Период);
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ТиповыеОтчеты.ДобавитьОтбор(КомпоновщикНастроек, "Организация", Организация);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыводЗаголовкаОтчета(ОтчетОбъект, Результат)
	
	МакетЗаголовок = ПолучитьОбщийМакет("ЗаголовокОтчета");
	ОбластьЗаголовок = МакетЗаголовок.ПолучитьОбласть("Заголовок");
		
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = ПолучитьТекстЗаголовка();

	Результат.Вывести(ОбластьЗаголовок);
			
КонецПроцедуры

Функция ПолучитьТекстЗаголовка(ОрганизацияВНачале = Истина) Экспорт 
	
	ЗаголовокОтчета = "Ведомость по складам";
	
	Возврат СтандартныеОтчеты.ПолучитьТекстЗаголовка(ЭтотОбъект, ЗаголовокОтчета, ОрганизацияВНачале);

КонецФункции

Процедура ОбработкаРезультатаОтчета(Результат)
	
	СтандартныеОтчеты.ОбработкаРезультатаОтчета(ЭтотОбъект, Результат);
	
КонецПроцедуры

// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтандартныеОтчеты.СохранитьНастройку(ЭтотОбъект);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	//ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "Период",  Период);
	
КонецПроцедуры

Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли