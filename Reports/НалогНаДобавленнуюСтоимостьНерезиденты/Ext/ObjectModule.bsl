
Функция СоздатьТаблицуСчетФактур(Счет=Неопределено) Экспорт
	
	Запрос=новый Запрос;
	
	ОтборПоСчету="";
	
	Если Счет=Неопределено Тогда
	Иначе
		Если не Счет.Пустая() Тогда
			ОтборПоСчету=ОтборПоСчету+" И СчетКт = &Счет ";
			Запрос.УстановитьПараметр("Счет",Счет); 
		КонецЕсли; 
	КонецЕсли; 
	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА УчетЗачетаНДСОбороты.Поставщик
	|		ИНАЧЕ УчетЗачетаНДСОбороты.ПериодМесяц
	|	КОНЕЦ КАК Поставщик,
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА УчетЗачетаНДСОбороты.Поставщик.ИНН
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ИНН,
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА УчетЗачетаНДСОбороты.Договор
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Договор,
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА УчетЗачетаНДСОбороты.ПриходныйДокумент
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ПриходныйДокумент,
	|	СУММА(УчетЗачетаНДСОбороты.СуммаОборот) КАК Сумма,
	|	СУММА(УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот) КАК НДС,
	|	СУММА(ВЫБОР
	|			КОГДА УчетЗачетаНДСОбороты.ЗачетНДС = &НДСВЗачет
	|				ТОГДА ВЫБОР
	|						КОГДА УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот <> 0
	|							ТОГДА УчетЗачетаНДСОбороты.СуммаОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаВЗачет,
	|	СУММА(ВЫБОР
	|			КОГДА УчетЗачетаНДСОбороты.ЗачетНДС = &НДСВЗачет
	|				ТОГДА УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСВЗачет,
	|	СУММА(ВЫБОР
	|			КОГДА УчетЗачетаНДСОбороты.ЗачетНДС = &НДСПо_ОС_НМА_НС
	|				ТОГДА ВЫБОР
	|						КОГДА УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот <> 0
	|							ТОГДА УчетЗачетаНДСОбороты.СуммаОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаОС,
	|	СУММА(ВЫБОР
	|			КОГДА УчетЗачетаНДСОбороты.ЗачетНДС = &НДСПо_ОС_НМА_НС
	|				ТОГДА УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСОС,
	|	СУММА(ВЫБОР
	|			КОГДА УчетЗачетаНДСОбороты.ЗачетНДС = &НДСУслугамВСтоимость_ОС_НМА_НС
	|				ТОГДА ВЫБОР
	|						КОГДА УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот <> 0
	|							ТОГДА УчетЗачетаНДСОбороты.СуммаОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаУслуги,
	|	СУММА(ВЫБОР
	|			КОГДА УчетЗачетаНДСОбороты.ЗачетНДС = &НДСУслугамВСтоимость_ОС_НМА_НС
	|				ТОГДА УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСУслуги,
	|	СУММА(ВЫБОР
	|			КОГДА УчетЗачетаНДСОбороты.ЗачетНДС = &НДСПоРазвлечениям
	|				ТОГДА ВЫБОР
	|						КОГДА УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот <> 0
	|							ТОГДА УчетЗачетаНДСОбороты.СуммаОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК суммаДосуг,
	|	СУММА(ВЫБОР
	|			КОГДА УчетЗачетаНДСОбороты.ЗачетНДС = &НДСПоРазвлечениям
	|				ТОГДА УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСДосуг,
	|	СУММА(ВЫБОР
	|			КОГДА УчетЗачетаНДСОбороты.ЗачетНДС = &НДСПоБезвозмездноПолученным
	|				ТОГДА ВЫБОР
	|						КОГДА УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот <> 0
	|							ТОГДА УчетЗачетаНДСОбороты.СуммаОборот
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаБезвозмездно,
	|	СУММА(ВЫБОР
	|			КОГДА УчетЗачетаНДСОбороты.ЗачетНДС = &НДСПоБезвозмездноПолученным
	|				ТОГДА УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НДСБезвозмездно,
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА УчетЗачетаНДСОбороты.Регистратор
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Регистратор,
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ДляСортировки
	|ИЗ
	|	РегистрНакопления.УчетЗачетаНДС.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Авто,
	|			Организация = &Организация
	|				И Поставщик.Инопартнер
	|				И (НЕ Поставщик.НеУчитыватьПриРасчетеНДС)
	|				И ВЫБОР КОГДА Договор = Значение(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) ТОГДА ИСТИНА ИНАЧЕ (НЕ Договор.НеУчитыватьПриРасчетеНДС) КОНЕЦ "+ОтборПоСчету+" ) КАК УчетЗачетаНДСОбороты
	|ГДЕ
	|	(НЕ УчетЗачетаНДСОбороты.СуммаНДСОборот + УчетЗачетаНДСОбороты.СуммаНДСПоУслугамОборот + УчетЗачетаНДСОбороты.СуммаНДСПоИмпортуОборот = 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА УчетЗачетаНДСОбороты.Поставщик
	|		ИНАЧЕ УчетЗачетаНДСОбороты.ПериодМесяц
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА УчетЗачетаНДСОбороты.Поставщик.ИНН
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА УчетЗачетаНДСОбороты.Договор
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА УчетЗачетаНДСОбороты.ПриходныйДокумент
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА УчетЗачетаНДСОбороты.Регистратор
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА УчетЗачетаНДСОбороты.ПериодМесяц = &ТекущийПериод
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДляСортировки,
	|	Поставщик";    //  "+ОтборПоСчету+"
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("ТекущийПериод",НачалоМесяца(КонецПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("НДСВЗачет",Перечисления.ЗачетНДС.НДСВЗачет);
	Запрос.УстановитьПараметр("НДСПо_ОС_НМА_НС",Перечисления.ЗачетНДС.НДСПо_ОС_НМА_НС);
	Запрос.УстановитьПараметр("НДСУслугамВСтоимость_ОС_НМА_НС",Перечисления.ЗачетНДС.НДСУслугамВСтоимость_ОС_НМА_НС);
	Запрос.УстановитьПараметр("НДСПоБезвозмездноПолученным",Перечисления.ЗачетНДС.НДСПоБезвозмездноПолученным);
	Запрос.УстановитьПараметр("НДСПоРазвлечениям",Перечисления.ЗачетНДС.НДСПоРазвлечениям);
	
	тз=Запрос.Выполнить().Выгрузить();
	Возврат тз;

КонецФункции // ()

Функция ПолучитьОборотПоСубсчету(тз,КодСчета,ВидОборота) Экспорт
	
	Оборот=0;
	
	Счет=ПланыСчетов.Хозрасчетный.НайтиПоКоду(КодСчета);
	
	Для каждого строкаТз из Тз цикл
		Если строкаТз.Счет=Счет или строкаТз.Счет.ПринадлежитЭлементу(Счет) тогда
			Если ВидОборота="Д" Тогда
				Оборот=Оборот+строкаТз.СуммаОборотДт;
			ИначеЕсли ВидОборота="К" Тогда
				Оборот=Оборот+строкаТз.СуммаОборотКт;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Оборот;
	
КонецФункции

Функция РасчетНДСНерезиденты_Получить(ПолучитьСтроку = Ложь, Стр = "") Экспорт
	Перем Строки;   	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(УслугиСвязиВходящие.Сумма) КАК Сумма,
	|	СУММА(УслугиСвязиВходящие.СуммаНДС) КАК СуммаНДС,
	|	УслугиСвязиВходящие.СтавкаНДС
	|ИЗ
	|	Документ.УслугиСвязи.Входящие КАК УслугиСвязиВходящие
	|ГДЕ
	|	УслугиСвязиВходящие.Ссылка.Проведен = ИСТИНА
	|	И УслугиСвязиВходящие.Ссылка.Организация = &Организация
	|	И УслугиСвязиВходящие.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	УслугиСвязиВходящие.СтавкаНДС";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(КонецПериода));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	ОборотыУслугиСвязи = Результат.Выгрузить();
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборотДт,
	|	ХозрасчетныйОбороты.СуммаОборотКт,
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.КорСчет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, , Счет = &Счет, , Организация = &Организация, КорСчет = &КорСчет, ) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.КорСубконто1.УчитыватьПриРасчетеНалогаНаПрибыль";

	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(КонецПериода));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("5211"));
	Запрос.УстановитьПараметр("КорСчет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("3190"));
	
	Обороты52и31 = Запрос.Выполнить().Выгрузить();
	
	а0102=ПолучитьОборотПоСубсчету(Обороты52и31,"5211","К"); 
	
	
	а020=ОборотыУслугиСвязи.Найти(Перечисления.СтавкиНДС.НДС20, "СтавкаНДС").Сумма; 
	б020=ОборотыУслугиСвязи.Найти(Перечисления.СтавкиНДС.НДС20, "СтавкаНДС").СуммаНДС;	
	тз=СоздатьТаблицуСчетФактур(ПланыСчетов.Хозрасчетный.ПустаяСсылка());   	
	а020 = а020 + тз.Итог("СуммаУслуги");
	б020 = б020 + тз.Итог("НДСУслуги");
	
	а01011=ОборотыУслугиСвязи.Найти(Перечисления.СтавкиНДС.БезНДС, "СтавкаНДС").Сумма; 
	
	а0101=а020+а01011; 
	б0101=б020;     	
	
	а010=а0102+а0101; 
	б010=б0101;     	
	
	Строки = Новый Структура;
	
	Строки.Вставить("а010", а010);
	Строки.Вставить("б010", б010);
	Строки.Вставить("а0101", а0101);
	Строки.Вставить("б0101", б0101);
	Строки.Вставить("а01011", а01011);
	Строки.Вставить("а0102", а0102);	
	Строки.Вставить("а020", а020);
	Строки.Вставить("б020", б020);
	
	// ДЛЯ КОНСОЛИДАЦИИ {
	
	Если Консолидированный Тогда
		НалоговаяОтчетность.ДобавитьЗначенияПараметровОтчетностиДляКонсолидации(Справочники.ПараметрыОтчетностиДляКонсолидации.НалогНаДобавленнуюСтоимость,Строки,НачалоДня(НачалоПериода),КонецДня(НачалоПериода));
	КонецЕсли;
	
	// } ДЛЯ КОНСОЛИДАЦИИ
	
	Если ПолучитьСтроку Тогда
		Возврат Строки[Стр];	
	Иначе
		Возврат Строки;
	КонецЕсли;         	
	
КонецФункции
 