#Если Клиент Тогда
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит таблицу значений - состав показателей отчета.
Перем мТаблицаСоставПоказателей Экспорт;

// Хранит структуру - состав показателей отчета,
// значение которых автоматически заполняется по учетным данным.
Перем мСтруктураВариантыЗаполнения Экспорт;

// Хранит дерево значений - структуру листов отчета.
Перем мДеревоСтраницОтчета Экспорт;

// Хранит признак выбора печатных листов
Перем мЕстьВыбранные Экспорт;

// Хранит имя выбранной формы отчета
Перем мВыбраннаяФорма Экспорт;

// Хранит признак скопированной формы.
Перем мСкопированаФорма Экспорт;

Перем мВерсияФормы Экспорт;

// Хранит ссылку на документ, хранящий данные отчета
Перем мСохраненныйДок Экспорт;

//Перем мКоммАвто Экспорт; // флажок на форме выбора страниц, если Истина, то пересчет автоматический убрать
Перем мСчетчикСтраниц Экспорт; // флажок на форме выбора страниц, если Истина, то пересчет автоматический убрать
Перем мАвтоВыборКодов Экспорт; // для флажка "отключить выбор значений из списка"

// Следующие переменные хранят границы периода построения отчета
// и перидичность
Перем мДатаНачалаПериодаОтчета Экспорт;
Перем мДатаКонцаПериодаОтчета  Экспорт;
Перем мПериодичность Экспорт;

Перем мПолноеИмяФайлаВнешнейОбработки Экспорт;

Перем мЗаписьЗапрещена Экспорт;

Перем мИнтервалАвтосохранения Экспорт;

Перем мПечатьСДвухмернымШтрихКодом Экспорт;
Перем мСекцияДляДвухмерногоШтрихКодаПредусмотрена Экспорт;

Перем мРезультатПоиска Экспорт;// таблица с результатами поиска
Перем мСчетчикиСтраницПриПоиске Экспорт;// таблица со счетчиками номеров листов при поиске
Перем мТаблицаФормОтчета Экспорт;
Перем мЗаписываетсяНовыйДокумент Экспорт;
Перем мВариант Экспорт;


Функция ПолучитьОборот(Выборка,КодКорСчета,ВидОборота);
	
	Оборот=0;
	
	КорСчет=ПланыСчетов.Хозрасчетный.НайтиПоКоду(КодКорСчета);
	
	Для каждого строкаВыборка из Выборка цикл
		Если строкаВыборка.КорСчет=КорСчет или строкаВыборка.КорСчет.ПринадлежитЭлементу(КорСчет) тогда
			Если ВидОборота="Д" Тогда
				Оборот=Оборот+строкаВыборка.СуммаОборотДт;
			ИначеЕсли ВидОборота="К" Тогда
				Оборот=Оборот+строкаВыборка.СуммаОборотКт;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Оборот;
КонецФункции


Функция РассчитатьПоказателиЗаПериод(Организация,НачалоПериода, КонецПериода) Экспорт
	
	Перем Выборка;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборотДт,
	|	ХозрасчетныйОбороты.СуммаОборотКт,
	|	ХозрасчетныйОбороты.Счет,
	|	ХозрасчетныйОбороты.КорСчет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В ИЕРАРХИИ (Значение(ПланСчетов.Хозрасчетный.А9900)),
	|			,
	|			ВЫБОР
	|				КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ Организация = &Организация
	|			КОНЕЦ,
	|			,
	|			) КАК ХозрасчетныйОбороты";

	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка=Запрос.Выполнить().Выгрузить();
	
	//а010 = ПолучитьОборот("9000","К")-ПолучитьОборот("9038","К")-ПолучитьОборот("9039","К");
	//а010 = ПолучитьОборот("9000","К")+ПолучитьОборот("9300","К")-ПолучитьОборот("9350","К");

	а010 = НалоговаяОтчетность.РассчитатьОбъемВыполненныхРаботЗаПериод(Организация,НачалоМесяца(НачалоПериода),КонецПериода);
	
	в020 = ПолучитьОборот(Выборка,"9100","Д");

	п=а010-в020;

	если п>0 тогда
		а030=п;
		в030=0;
	иначе
		а030=0;
		в030=(-1)*п;
	конецесли;

	в050=ПолучитьОборот(Выборка,"9410","Д");
	в060=ПолучитьОборот(Выборка,"9420","Д");
	в070=ПолучитьОборот(Выборка,"9430","Д");
	в080=ПолучитьОборот(Выборка,"9440","Д");

	в040=в050+в060+в070+в080;

	//а090=ПолучитьОборот("9300","К")+ПолучитьОборот("9038","К")+ПолучитьОборот("9039","К");
    //а090=ПолучитьОборот("9350","К");
	а090=ПолучитьОборот(Выборка,"9300","К");
	п=а030-в030-в040+а090;

	если п>0 тогда
		а100=п;
		в100=0;
	иначе
		а100=0;
		в100=(-1)*п;
	конецесли;

	а120=ПолучитьОборот(Выборка,"9520","К");
	а130=ПолучитьОборот(Выборка,"9530","К");
	а140=ПолучитьОборот(Выборка,"9550","К");
	а150=ПолучитьОборот(Выборка,"9540","К");

	а160=ПолучитьОборот(Выборка,"9500","К")-(а120+а130+а140+а150);

	а110=а120+а130+а140+а150+а160;

	в180=ПолучитьОборот(Выборка,"9610","Д");
	в190=0;
	в200=ПолучитьОборот(Выборка,"9620","Д");
	в210=ПолучитьОборот(Выборка,"9600","Д")-(в180+в190+в200);

	в170=в180+в190+в200+в210;

	п=а100-в100+а110-в170;

	если п>0 тогда
		а220=п;
		в220=0;
	иначе
		а220=0;
		в220=(-1)*п;
	конецесли;

	а230=ПолучитьОборот(Выборка,"9710","К");
	в230=ПолучитьОборот(Выборка,"9720","Д");

	п=а220-в220+а230-в230;

	если п>0 тогда
		а240=п;
		в240=0;
	иначе
		а240=0;
		в240=(-1)*п;
	конецесли;

	в250=ПолучитьОборот(Выборка,"9810","Д")+ПолучитьОборот(Выборка,"9830","Д");
	в260=ПолучитьОборот(Выборка,"9820","Д");

	п=а240-в240-в250-в260;

	если п>0 тогда
		а270=п;
		в270=0;
	иначе
		а270=0;
		в270=(-1)*п;
	конецесли;
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("а010",  а010);
	Параметры.Вставить("в020",  в020);
	Параметры.Вставить("а030",  а030);
	Параметры.Вставить("в030",  в030);
	Параметры.Вставить("в040",  в040);
	Параметры.Вставить("в050",  в050);
	Параметры.Вставить("в060",  в060);
	Параметры.Вставить("в070",  в070);
	Параметры.Вставить("в080",  в080);
	Параметры.Вставить("а090",  а090);
	Параметры.Вставить("а100",  а100);
	Параметры.Вставить("в100",  в100);
	Параметры.Вставить("а110",  а110);
	Параметры.Вставить("а120",  а120);
	Параметры.Вставить("а130",  а130);
	Параметры.Вставить("а140",  а140);
	Параметры.Вставить("а150",  а150);
	Параметры.Вставить("а160",  а160);
	Параметры.Вставить("в170",  в170);
	Параметры.Вставить("в180",  в180);
	Параметры.Вставить("в190",  в190);
	Параметры.Вставить("в200",  в200);
	Параметры.Вставить("в210",  в210);
	Параметры.Вставить("а220",  а220);
	Параметры.Вставить("в220",  в220);
	Параметры.Вставить("в230",  в230);
	Параметры.Вставить("а230",  а230);
	Параметры.Вставить("а240",  а240);
	Параметры.Вставить("в240",  в240);
	Параметры.Вставить("в250",  в250);
	Параметры.Вставить("в260",  в260);
	Параметры.Вставить("а270",  а270);
	Параметры.Вставить("в270",  в270);

	Возврат Параметры;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ 

ОписаниеТиповСтрока50  = ПолучитьОписаниеТиповСтроки(50);
ОписаниеТиповСтрока15  = ПолучитьОписаниеТиповСтроки(15);

мТаблицаСоставПоказателей    = Новый ТаблицаЗначений;
мТаблицаСоставПоказателей.Колонки.Добавить("ИмяПоляТаблДокумента",         ОписаниеТиповСтрока50);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоСоставу",       ОписаниеТиповСтрока50);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоФорме",         ОписаниеТиповСтрока50);
мТаблицаСоставПоказателей.Колонки.Добавить("ПризнМногострочности",         ОписаниеТиповСтрока15);
мТаблицаСоставПоказателей.Колонки.Добавить("ТипДанныхПоказателя",          ОписаниеТиповСтрока15);
мТаблицаСоставПоказателей.Колонки.Добавить("КодПоказателяПоСтруктуре",     ОписаниеТиповСтрока50);

мСтруктураВариантыЗаполнения = Новый Структура;

ОписаниеТиповСтрока = ПолучитьОписаниеТиповСтроки(0);

МассивТипов = Новый Массив;
МассивТипов.Добавить(Тип("Дата"));
ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));

мТаблицаФормОтчета = Новый ТаблицаЗначений;
мТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
мТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
мТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
мТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);

НоваяФорма = мТаблицаФормОтчета.Добавить();
НоваяФорма.ФормаОтчета        = "ФормаОтчета2013Кв1";
НоваяФорма.ОписаниеОтчета     = "ПРИЛОЖЕНИЕ N 1к Постановлению от 04.03.2013 г. МФ N 23 и ГНК N 2013-8,зарегистрированному МЮ 22.03.2013 г. N 2439";
НоваяФорма.ДатаНачалоДействия = '20130304';
НоваяФорма.ДатаКонецДействия  = '20171231';

НоваяФорма = мТаблицаФормОтчета.Добавить();
НоваяФорма.ФормаОтчета        = "ФормаОтчета2018Кв1";
НоваяФорма.ОписаниеОтчета     = "ПРИЛОЖЕНИЕ N 1к Постановлению от 04.03.2013 г. МФ N 23 и ГНК N 2013-8,зарегистрированному МЮ 22.03.2013 г. N 2439-5";
НоваяФорма.ДатаНачалоДействия = '20180101';
НоваяФорма.ДатаКонецДействия  = '20180930';

НоваяФорма = мТаблицаФормОтчета.Добавить();
НоваяФорма.ФормаОтчета        = "ФормаОтчета2018Кв3";
НоваяФорма.ОписаниеОтчета     = "ПРИЛОЖЕНИЕ N 1к Постановлению от 04.03.2015 г. МФ N 23 и ГНК N 2018-49, зарегистрированному МЮ 20.08.2018 г. N 2439-6";
НоваяФорма.ДатаНачалоДействия = '20181001';
НоваяФорма.ДатаКонецДействия  = ПустоеЗначениеТипа(Тип("Дата"));

#КонецЕсли
