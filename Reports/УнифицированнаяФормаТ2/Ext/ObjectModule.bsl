
#Если Клиент Тогда

Перем мДлинаСуток;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("Физлицо",		  Работник.ФизическоеЛицо);
	Запрос.УстановитьПараметр("Сотрудник",		  Работник);
	
	//|	СотрудникиОрганизаций.ФизическоеЛицо.Профсоюз КАК ЧленПрофсоюза,
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СотрудникиОрганизаций.Код КАК ТабельныйНомер,
	|	СотрудникиОрганизаций.ФизическоеЛицо.Наименование КАК Представление,
	|	СотрудникиОрганизаций.ФизическоеЛицо.ДатаРождения КАК ДатаРождения,
	|	СотрудникиОрганизаций.ФизическоеЛицо.МестоРождения КАК МестоРождения,
	|	"""" КАК МестоРожденияКодПоОКАТО,
	|	СотрудникиОрганизаций.ФизическоеЛицо.Пол КАК Пол,
	|	СотрудникиОрганизаций.ФизическоеЛицо.ИНН КАК ИНН,
	|	СотрудникиОрганизаций.ФизическоеЛицо.ИНПС КАК ИНПС,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ГражданствоФизЛицСрезПоследних.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Узбекистан)) = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Узбекистан)
	|			ТОГДА СотрудникиОрганизаций.ФизическоеЛицо.Национальность
	|		ИНАЧЕ ""Иностранный гражданин""
	|	КОНЕЦ КАК Гражданство,
	|	СемейноеПоложениеФизЛицСрезПоследних.СемейноеПоложение.Наименование КАК СемейноеПоложение,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид.Наименование КАК ВидДокумента,
	|	ЕСТЬNULL(ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид.КодИМНС, """") КАК КодИМНС,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан,
	|	ЕСТЬNULL(ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаВыдачи,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументКодПодразделения,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия,
	|	КонтактнаяИнформацияАдрес.Представление КАК АдресПоПаспорту,
	|	КонтактнаяИнформацияАдрес1.Представление КАК АдресФактический,
	|	КонтактнаяИнформацияАдрес.Поле1 КАК ИндексАдресПоПаспорту,
	|	КонтактнаяИнформацияАдрес1.Поле1 КАК ИндексАдресФактический,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДатаРегистрацииПоМестуЖительства,
	|	КонтактнаяИнформацияТелефон.Представление КАК Телефон,
	|	"""" КАК КатегорияЗапаса,
	|	СотрудникиОрганизаций.ФизическоеЛицо.ВУВоинскоеЗвание.Наименование КАК ВоинскоеЗвание,
	|	СотрудникиОрганизаций.ФизическоеЛицо.ВУСостав.Наименование КАК Состав,
	|	"""" КАК ВУС,
	|	СотрудникиОрганизаций.ФизическоеЛицо.ВУГодностьКВоеннойСлужбе.Наименование КАК Годность,
	|	СотрудникиОрганизаций.ФизическоеЛицо.ВУВоенкомат.Наименование КАК НаименованиеВоенкомата,
	|	"""" КАК НомерКомандыПартии,
	|	"""" КАК ЗабронированОрганизацией,
	|	"""" КАК СнятиеСУчета,
	|	РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение КАК ОрганизацияПриема,
	|	РаботникиОрганизацииСрезПоследних.Организация.Наименование КАК НаименованиеОрганизации,
	|	РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение.КодПоОКПО КАК КодПоОКПО,
	|	РаботникиОрганизацииСрезПоследних.ОбособленноеПодразделение.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизацииСрезПоследних.ТипСотрудника = ЗНАЧЕНИЕ(Перечисление.ТипСотрудника.Штатный)
	|			ТОГДА ""Основная""
	|		ИНАЧЕ ""Совместитель""
	|	КОНЕЦ КАК ВидРаботы,
	|	ФИОФизЛицСрезПоследних.ФизЛицо.Фотография КАК Фотография,
	|	НЕ РаботникиОрганизацииСрезПоследних.НеУдерживатьПрофвзносы КАК ЧленПрофсоюза
	|ИЗ
	|	Справочник.Сотрудники КАК СотрудникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаАктуальности,
	|				Сотрудник = &Сотрудник
	|					И ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)) КАК РаботникиОрганизацииСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ГражданствоФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияАдрес
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = КонтактнаяИнформацияАдрес.Объект
	|			И (КонтактнаяИнформацияАдрес.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И (КонтактнаяИнформацияАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияАдрес1
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = КонтактнаяИнформацияАдрес1.Объект
	|			И (КонтактнаяИнформацияАдрес1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И (КонтактнаяИнформацияАдрес1.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияТелефон
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = КонтактнаяИнформацияТелефон.Объект
	|			И (КонтактнаяИнформацияТелефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (КонтактнаяИнформацияТелефон.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СемейноеПоложениеФизЛиц.СрезПоследних(&ДатаАктуальности, ФизЛицо = &ФизЛицо) КАК СемейноеПоложениеФизЛицСрезПоследних
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = СемейноеПоложениеФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка = &Сотрудник";
	
	ВыборкаРезультата	=	Запрос.Выполнить().Выбрать();

	ДокументРезультат.Очистить();
 	Макет 				= 	ПолучитьМакет("Т2_от_5_1_2004");
	ПерваяСтраницаТ2	= 	Макет.ПолучитьОбласть("ПерваяСтраницаТ2");
	ВтораяСтраницаТ2	=	Макет.ПолучитьОбласть("ВтораяСтраницаТ2");
	ТретьяСтраницаТ2	=	Макет.ПолучитьОбласть("ТретьяСтраницаТ2");
	ЧетвертаяСтраницаТ2	=	Макет.ПолучитьОбласть("ЧетвертаяСтраницаТ2");
	ВтораяСтраницаТ2.Параметры.НомерДокумента = "№";
	Если ВыборкаРезультата.Следующий() тогда
		
		Запрос.УстановитьПараметр("ОрганизацияПриема", ВыборкаРезультата.ОрганизацияПриема);
		Фотография= ПерваяСтраницаТ2.рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
		Фотография.Верх = 46;
		Фотография.Лево = 143;
		Фотография.Высота=40;
		Фотография.Ширина=33;
		
		Фотография.РазмерКартинки = РазмерКартинки.АвтоРазмер;
		
		Если ЗначениеЗаполнено(ВыборкаРезультата.Фотография) Тогда
			Если ВыборкаРезультата.Фотография.получить()<> Неопределено Тогда
				
				Фотография.Картинка = ВыборкаРезультата.Фотография.получить();
				
			КонецЕсли; 
		КонецЕсли;

 //      ПерваяСтраницаТ2.Области.Фото.ТипЗначения = ПерваяСтраницаТ2.рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
		//Фотография = Новый Картинка("ВыборкаРезультата.Фотография.получить()");
		//ПерваяСтраницаТ2.Параметры.Фото = Фотография.Картинка;
		ПерваяСтраницаТ2.Параметры.Заполнить(ВыборкаРезультата);
		ВтораяСтраницаТ2.Параметры.Заполнить(ВыборкаРезультата);
		
		Если ВыборкаРезультата.Фамилия = NULL тогда
			ФИО		=	РазложитьСтрокуВМассивПодстрок(ВыборкаРезультата.Представление, " ");
			Если ФИО.Количество()	>	0	тогда
				Фамилия	=	ФИО[0];
			КонецЕсли;
			Если ФИО.Количество()	>	1	тогда
				Имя		=	ФИО[1];
			КонецЕсли;
			Если ФИО.Количество()	>	2	тогда
				Отчество=	ФИО[2];
			КонецЕсли;
			// ФИО
			ПерваяСтраницаТ2.Параметры.Фамилия					=	Фамилия;
			ПерваяСтраницаТ2.Параметры.Имя						=	Имя;
			ПерваяСтраницаТ2.Параметры.Отчество         		=	Отчество;
		КонецЕсли;
		
		ПерваяСтраницаТ2.Параметры.МестоРождения			= РегламентированнаяОтчетность.ПредставлениеМестаРождения(ВыборкаРезультата.МестоРождения);
		ПерваяСтраницаТ2.Параметры.ДатаАктуальности			= ДатаАктуальности;
	
		// ПАСПОРТ
			Если ВыборкаРезультата.ВидДокумента <> Null Тогда
				Если Найти("21,01",ВыборкаРезультата.КодИМНС) = 0 Тогда
					ВтораяСтраницаТ2.Параметры.ДатаВыдачи = "";
					ВтораяСтраницаТ2.Параметры.ДругойДокумент = ?(ЗначениеЗаполнено(ВыборкаРезультата.ВидДокумента),ВыборкаРезультата.ВидДокумента,"<вид документа не указан>") +
							" №" + ?(ЗначениеЗаполнено(ВыборкаРезультата.ДокументНомер),ВыборкаРезультата.ДокументНомер + " ","<номер документа не указан>") + ?(ЗначениеЗаполнено(ВыборкаРезультата.ДокументСерия),ВыборкаРезультата.ДокументСерия,"") + "; выдан: " + ?(ЗначениеЗаполнено(ВыборкаРезультата.ДокументКемВыдан),ВыборкаРезультата.ДокументКемВыдан,"<не указано> ") + Формат(ВыборкаРезультата.ДатаВыдачи,"ДЛФ=DD");
				Иначе	
					ВтораяСтраницаТ2.Параметры.НомерДокумента	= "Серия " + ?(ЗначениеЗаполнено(ВыборкаРезультата.ДокументСерия),ВыборкаРезультата.ДокументСерия,"") + "  № " + ?(ЗначениеЗаполнено(ВыборкаРезультата.ДокументНомер),ВыборкаРезультата.ДокументНомер + " ","");
					ВтораяСтраницаТ2.Параметры.КемВыданДокумент	= ?(ЗначениеЗаполнено(ВыборкаРезультата.ДокументКемВыдан),ВыборкаРезультата.ДокументКемВыдан,"") + ?(ЗначениеЗаполнено(ВыборкаРезультата.ДокументКодПодразделения)," № подразделения " + ВыборкаРезультата.ДокументКодПодразделения,"");
				КонецЕсли;
			КонецЕсли;
		
		// АДРЕСА
		Если ЗначениеЗаполнено(ВыборкаРезультата.ИндексАдресФактический) Тогда
			ВтораяСтраницаТ2.Параметры.АдресФактический	=	СтрЗаменить(ВыборкаРезультата.АдресФактический,ВыборкаРезультата.ИндексАдресФактический + ",","");
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаРезультата.ИндексАдресПоПаспорту) Тогда
			ВтораяСтраницаТ2.Параметры.АдресПоПаспорту	=	СтрЗаменить(ВыборкаРезультата.АдресПоПаспорту,ВыборкаРезультата.ИндексАдресПоПаспорту + ",","");
		КонецЕсли;
		
		// Воинский учет
		ВтораяСтраницаТ2.Параметры.КатегорияЗапаса = Лев(ВтораяСтраницаТ2.Параметры.КатегорияЗапаса,1);
		ВтораяСтраницаТ2.Параметры.Годность = Лев(ВтораяСтраницаТ2.Параметры.Годность,1);
	Иначе
		Запрос.УстановитьПараметр("ОрганизацияПриема", Справочники.Организации.ПустаяСсылка());
	КонецЕсли;

	// ПРИЕМ И ПЕРЕВОДЫ НА ДРУГУЮ РАБОТУ
	РеглВалюта = Константы.ВалютаРегламентированногоУчета.Получить();
	Запрос.УстановитьПараметр("РеглВалюта",РеглВалюта);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Работники.Период КАК Период,
	|	Работники.Сотрудник КАК Сотрудник,
	|	Работники.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
	|	Работники.Должность.Наименование КАК Должность,
	|	ВЫБОР
	|		КОГДА Работники.ОбособленноеПодразделение = &ОрганизацияПриема
	|			ТОГДА Работники.ПодразделениеОрганизации.Наименование
	|		ИНАЧЕ Работники.ПодразделениеОрганизации.Наименование + "" ("" + Работники.ОбособленноеПодразделение.Наименование + "")""
	|	КОНЕЦ КАК ПодразделениеОрганизации,
	|	Работники.Регистратор КАК Регистратор,
	|	Работники.Регистратор.Дата КАК ДатаПриказа,
	|	Работники.Регистратор.Номер КАК НомерПриказа
	|ПОМЕСТИТЬ ВТПеремещенияРаботника
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период";
	
	Запрос.Выполнить();
	ПеремещенияРаботникаТекст = "ВТПеремещенияРаботника";
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 13
	|	Работники.Должность КАК Должность,
	|	Работники.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|			ТОГДА ДОБАВИТЬКДАТЕ(Работники.Период, ДЕНЬ, -1)
	|		ИНАЧЕ Работники.Период
	|	КОНЕЦ КАК ДатаПеревода,
	|	Работники.ПричинаИзмененияСостояния,
	|	Работники.ДатаПриказа КАК ДатаПриказа,
	|	Работники.НомерПриказа КАК НомерПриказа,
	|	ВЫБОР
	|		КОГДА ПриказОбУвольнении.Списком
	|			ТОГДА УвольненияРаботники.ПричинаУвольнения.Наименование
	|		ИНАЧЕ ПриказОбУвольнении.ПричинаУвольнения.Наименование
	|	КОНЕЦ КАК ОснованиеУвольнения,
	|	ВЫБОР
	|		КОГДА ПриказОбУвольнении.Списком
	|			ТОГДА УвольненияРаботники.ДатаУвольнения
	|		ИНАЧЕ ПриказОбУвольнении.ДатаУвольнения
	|	КОНЕЦ КАК ДатаУвольнения,
	|	ВЫБОР
	|		КОГДА ПриказОбУвольнении.Списком
	|			ТОГДА УвольненияРаботники.Ссылка.Номер
	|		ИНАЧЕ ПриказОбУвольнении.Номер
	|	КОНЕЦ КАК НомерПриказаУвольнения,
	|	ВЫБОР
	|		КОГДА ПриказОбУвольнении.Списком
	|			ТОГДА УвольненияРаботники.Ссылка.Дата
	|		ИНАЧЕ ПриказОбУвольнении.Дата
	|	КОНЕЦ КАК ДатаПриказаУвольнения,
	|	ПлановыеНачисленияРаботниковОрганизаций.Размер КАК ТарифнаяСтавка
	|ИЗ
	|	" + ПеремещенияРаботникаТекст + " КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбУвольнении.Сотрудники КАК УвольненияРаботники
	|		ПО Работники.Сотрудник = УвольненияРаботники.Сотрудник
	|			И Работники.Регистратор = УвольненияРаботники.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОПриеме.Сотрудники КАК ПриемНаРаботуВОрганизациюРаботники
	|		ПО Работники.Сотрудник = ПриемНаРаботуВОрганизациюРаботники.ФизическоеЛицо
	|			И Работники.Регистратор = ПриемНаРаботуВОрганизациюРаботники.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВложенныйЗапрос.ДатаПеревода КАК ДатаПеревода,
	|			ПлановыеНачисленияРаботниковОрганизаций.Оклад КАК Размер
	|		ИЗ
	|			(ВЫБРАТЬ
	|				РаботникиОрганизаций.Период КАК ДатаПеревода,
	|				РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|				МАКСИМУМ(ПлановыеНачисленияРаботниковОрганизаций.Период) КАК Период
	|			ИЗ
	|				" + ПеремещенияРаботникаТекст + " КАК РаботникиОрганизаций
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляРасчетаЗП КАК ПлановыеНачисленияРаботниковОрганизаций
	|					ПО РаботникиОрганизаций.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|						И РаботникиОрганизаций.Период >= ПлановыеНачисленияРаботниковОрганизаций.Период
	|			ГДЕ
	|				ПлановыеНачисленияРаботниковОрганизаций.Оклад <> 0
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизаций.Период,
	|				РаботникиОрганизаций.Сотрудник) КАК ВложенныйЗапрос
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляРасчетаЗП КАК ПлановыеНачисленияРаботниковОрганизаций
	|				ПО ВложенныйЗапрос.Сотрудник = ПлановыеНачисленияРаботниковОрганизаций.Сотрудник
	|					И ВложенныйЗапрос.Период = ПлановыеНачисленияРаботниковОрганизаций.Период
	|		ГДЕ
	|			ПлановыеНачисленияРаботниковОрганизаций.Оклад <> 0) КАК ПлановыеНачисленияРаботниковОрганизаций
	|		ПО Работники.Период = ПлановыеНачисленияРаботниковОрганизаций.ДатаПеревода
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриказОбУвольнении КАК ПриказОбУвольнении
	|		ПО Работники.Регистратор.Ссылка = ПриказОбУвольнении.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПеревода";
	
	ВыборкаРезультата	=	Запрос.Выполнить().Выбрать();
	инд	=	0;
	ЧетвертаяСтраницаТ2.Параметры.Приказ = "Приказ (распоряжение) № ____________ от   ""____"" _______________ 20___г. ";
	ЧетвертаяСтраницаТ2.Параметры.ДатаУвольнения = '00010101';
	
	Пока ВыборкаРезультата.Следующий()	Цикл

		Если ВыборкаРезультата.ПричинаИзмененияСостояния = Перечисления.ПричиныИзмененияСостояния.Увольнение тогда
            
			//Встретили увольнение документом "Прием на работу" или "Увольнение"
			ЧетвертаяСтраницаТ2.Параметры["ОснованиеУвольнения"]	=	ВыборкаРезультата.ОснованиеУвольнения;
			ЧетвертаяСтраницаТ2.Параметры["ДатаУвольнения"]			=	ВыборкаРезультата.ДатаУвольнения;
			ЧетвертаяСтраницаТ2.Параметры["Приказ"] = "Приказ (распоряжение) № """ + СокрЛП(ВыборкаРезультата.НомерПриказаУвольнения) +  """ от " + Формат(ВыборкаРезультата.ДатаПриказаУвольнения, "ДЛФ=DD");
			
		Иначе// Кадровое назначение	
			
			ОписаниеТарифнаяСтавка = Формат(ВыборкаРезультата.ТарифнаяСтавка,"ЧЦ=15; ЧДЦ=2; ЧН=' '");
			
			инд	= инд + 1;
			
			ТретьяСтраницаТ2.Параметры["ДатаПеревода"+инд]			= ВыборкаРезультата.ДатаПеревода;
			ТретьяСтраницаТ2.Параметры["ПодразделениеПеревода"+инд]	= ВыборкаРезультата.ПодразделениеОрганизации;
			ТретьяСтраницаТ2.Параметры["ДолжностьПеревода"+инд]		= ВыборкаРезультата.Должность;
			ТретьяСтраницаТ2.Параметры["ТарифнаяСтавка"+инд]		= ОписаниеТарифнаяСтавка;
			ТретьяСтраницаТ2.Параметры["ОснованиеПеревода"+инд]		= "Пр.№ "+ СокрЛП(ВыборкаРезультата.НомерПриказа) +" от " + Формат(ВыборкаРезультата.ДатаПриказа, "ДФ=dd.MM.yyyy");
			
		КонецЕсли;

	КонецЦикла;
	//СТАЖ
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Сотрудник",		  Работник);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СотрудникиОрганизаций.ФизическоеЛицо,
		|	ТрудоваяДеятельностьФизЛиц.ПериодС КАК ПериодС,
		|	ТрудоваяДеятельностьФизЛиц.ПериодПо КАК ПериодПо,
		|	ЕСТЬNULL(ТрудоваяДеятельностьФизЛиц.ВключатьВОбщийСтаж, НЕОПРЕДЕЛЕНО) КАК ОбщийСтаж,
		|	ЕСТЬNULL(ТрудоваяДеятельностьФизЛиц.ВключатьВНепрерывныйСтаж, НЕОПРЕДЕЛЕНО) КАК НепрерывныйСтаж
		|ИЗ
		|	Справочник.Сотрудники КАК СотрудникиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТрудоваяДеятельностьФизЛиц КАК ТрудоваяДеятельностьФизЛиц
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ТрудоваяДеятельностьФизЛиц.Владелец
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка = &Сотрудник";
	
		ВыборкаСтажа = Запрос.Выполнить().Выбрать();
		инд	=	0;
		Лет = 0;
		Месяцев = 0;
		Дней = 0;
		ДнейСтажа =0;
		МесяцевСтажа =0;
		ЛетСтажа =0;
		
		Пока ВыборкаСтажа.Следующий()	Цикл
			
			Если (не ВыборкаСтажа.ОбщийСтаж = Неопределено) и (ВыборкаСтажа.ОбщийСтаж) Тогда
				//	инд	= инд + 1;
				ПолучитьСтаж(ВыборкаСтажа.ПериодПо, ВыборкаСтажа.ПериодС, Лет, Месяцев, Дней);
				
				ДнейСтажа =ДнейСтажа+Дней;
				Если   ДнейСтажа>=День(КонецМесяца(ВыборкаСтажа.ПериодС)) тогда
					ДнейСтажа =ДнейСтажа-День(КонецМесяца(ВыборкаСтажа.ПериодС))+Дней;
					МесяцевСтажа=МесяцевСтажа+1;
					Если ДнейСтажа>=День(КонецМесяца(ВыборкаСтажа.ПериодС)) тогда
						ДнейСтажа =ДнейСтажа-День(КонецМесяца(ВыборкаСтажа.ПериодС));
						МесяцевСтажа=МесяцевСтажа+1;
					КонецЕсли;
				КонецЕсли;
				МесяцевСтажа=МесяцевСтажа+Месяцев;
				Если   МесяцевСтажа>=12 тогда
					МесяцевСтажа =МесяцевСтажа-12+Месяцев;
					ЛетСтажа=ЛетСтажа+1;
					Если МесяцевСтажа>=12 тогда
						МесяцевСтажа =МесяцевСтажа-12;
						ЛетСтажа=ЛетСтажа+1;
					КонецЕсли;
				КонецЕсли;
				
				ЛетСтажа=ЛетСтажа+ Лет;
			КонецЕсли; 
		КонецЦикла;
			ВтораяСтраницаТ2.Параметры.ДнейСтажа1		= ДнейСтажа;
			ВтораяСтраницаТ2.Параметры.МесяцевСтажа1	= МесяцевСтажа;
			ВтораяСтраницаТ2.Параметры.ЛетСтажа1       	= ЛетСтажа;
		
		
 	//СЕМЬЯ
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Сотрудник",		  Работник);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СемьяФизЛиц.ФИО,
		|	СемьяФизЛиц.Родство,
		|	СемьяФизЛиц.ДатаРождения КАК ДатаРождения
		|ИЗ
		|	Справочник.Сотрудники КАК СотрудникиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СемьяФизЛиц КАК СемьяФизЛиц
		|		ПО СотрудникиОрганизаций.ФизическоеЛицо = СемьяФизЛиц.Владелец
		|ГДЕ
		|	СотрудникиОрганизаций.Ссылка = &Сотрудник";	
		
		ВыборкаРезультатаСемья	=	Запрос.Выполнить().Выбрать();

	инд	=	0;
	
	Пока ВыборкаРезультатаСемья.Следующий()	Цикл

			инд	= инд + 1;
			
			ВтораяСтраницаТ2.Параметры["СтепеньРодства"+инд]		    = ВыборкаРезультатаСемья.Родство;
			ВтораяСтраницаТ2.Параметры["ФИОРодственника"+инд]	        = ВыборкаРезультатаСемья.ФИО;
			ВтораяСтраницаТ2.Параметры["ГодРожденияРодственника"+инд]	= ВыборкаРезультатаСемья.ДатаРождения;

	КонецЦикла;
    //ОБРАЗОВАНИЕ
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Сотрудник",		  Работник);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбразованиеФизЛиц.УчебноеЗаведение.Наименование КАК УчебноеЗаведение,
	|	ОбразованиеФизЛиц.ДокументОбОбразовании КАК Документ,
	|	ОбразованиеФизЛиц.НомерДокумента КАК НомерДокумента,
	|	ОбразованиеФизЛиц.ДатаОкончания КАК ГодОкончания1,
	|	ОбразованиеФизЛиц.ВидОбразования.Наименование КАК Образование1,
	|	ОбразованиеФизЛиц.Специальность.Наименование КАК Специальность
	|ИЗ
	|	Справочник.Сотрудники КАК СотрудникиОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбразованиеФизЛиц КАК ОбразованиеФизЛиц
	|		ПО СотрудникиОрганизаций.ФизическоеЛицо = ОбразованиеФизЛиц.Владелец
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка = &Сотрудник";	
	
	ВыборкаРезультатаОбучение	=	Запрос.Выполнить().Выбрать();
	Пока ВыборкаРезультатаОбучение.Следующий()	Цикл
		
		ПерваяСтраницаТ2.Параметры.Образование1 = ВыборкаРезультатаОбучение.Образование1;
		ПерваяСтраницаТ2.Параметры.ОбразовательноеУчреждение1 = ВыборкаРезультатаОбучение.УчебноеЗаведение;
		ПерваяСтраницаТ2.Параметры.ГодОкончания1 = ВыборкаРезультатаОбучение.ГодОкончания1;
		ПерваяСтраницаТ2.Параметры.СпециальностьПоДиплому1 = ВыборкаРезультатаОбучение.Специальность;
		ПерваяСтраницаТ2.Параметры.ДипломСерияНомер1 = Строка(ВыборкаРезультатаОбучение.Документ) + "Серия "+ "Номер  "+СокрЛП(ВыборкаРезультатаОбучение.НомерДокумента);
	//	ПерваяСтраницаТ2.Параметры.Образование1 = ВыборкаРезультатаОбучение.Образование1
		
	КонецЦикла;
	
	
	
	
	// Вывод страниц документа
	ДокументРезультат.Присоединить(ПерваяСтраницаТ2);
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	ДокументРезультат.Присоединить(ВтораяСтраницаТ2);
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	ДокументРезультат.Присоединить(ТретьяСтраницаТ2);
//	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	ДокументРезультат.Присоединить(ЧетвертаяСтраницаТ2);
	
	//Параметры документа
	ДокументРезультат.ПолеСлева				= 0;
	ДокументРезультат.ПолеСправа			= 0;
	ДокументРезультат.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_Форма_Т2";
	ДокументРезультат.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	
КонецПроцедуры
 
//Вычисляет разность между двумя датами: в годах, месяцах, днях
Процедура ПолучитьСтаж(Знач ДатаОкончанияПериода, Знач ДатаНачалаПериода, Лет=0, Месяцев=0, Дней=0) 

	Если ДатаОкончанияПериода >= ДатаНачалаПериода тогда

		Лет1		=	Год(ДатаОкончанияПериода);
		Месяцев1	=	Месяц(ДатаОкончанияПериода);

		Если НачалоДня(ДатаОкончанияПериода) <> НачалоДня(КонецМесяца(ДатаОкончанияПериода)) тогда
			Дней1		=	День(ДатаОкончанияПериода);
		иначе
			Дней1		=	30;//В каждом месяце ровно 30 дней
		КонецЕсли;	 

		Лет2		=	Год(ДатаНачалаПериода);
		Месяцев2	=	Месяц(ДатаНачалаПериода);
		Если НачалоДня(ДатаНачалаПериода) <> НачалоДня(КонецМесяца(ДатаНачалаПериода)) тогда
			Дней2		=	День(ДатаНачалаПериода);
		иначе
			Дней2		=	30;//В каждом месяце ровно 30 дней
		КонецЕсли;	 

		Лет		=	Лет1		-	Лет2;
		Месяцев	=	Месяцев1	-	Месяцев2;
		Дней	=	Дней1		-	Дней2 ;//1 день на увольнение
		
		Если Дней < 0 Тогда
			Месяцев = Месяцев - 1;
			Дней = Дней + 30;
		КонецЕсли; 
		
		Если Месяцев < 0 Тогда
			Лет = Лет - 1;
			Месяцев = Месяцев + 12;
		КонецЕсли; 
		
	Иначе
		Лет = 0; 
		Месяцев = 0;
		Дней = 0;
	КонецЕсли;	
КонецПроцедуры //ПолучитьСтажЗаПериод

мДлинаСуток = 86400;

#КонецЕсли

