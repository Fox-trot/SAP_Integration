
Перем СписокНеоблагаемыхНачислений Экспорт ;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Расчитывает доход физ.лиц
// в том числе:
//  доход договорников;
//  доход членов наблюдатнльного совета;
//
// Параметры
//  ДоходФЛ  - доход физ.лиц
//  ДоходД   - доход договорников
//  ДоходН   - доход членов наблюдатнльного совета
//
Процедура РасчитатьДоходФЛ(ДоходФЛ, ДоходД, ДоходН)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ЕСТЬNULL(Начисления.Результат, 0)) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.Сотрудник.Договорник
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Договорники,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.Сотрудник.ЧленОрганаУправления
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Наблюдатели
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Активность
	|	И ВЫБОР
	|			КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Начисления.Организация = &Организация
	|		КОНЕЦ
	|	И Начисления.Результат <> 0
	|	И Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Начисления.ВидРасчета.ВидДохода = &ВидДохода
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ВидРасчета
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода" , КонецПериода);
	Запрос.УстановитьПараметр("Организация"  , Организация);
	Запрос.УстановитьПараметр("ВидДохода"    , Перечисления.ВидыДохода.ОплатаТруда);
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
			ДоходФЛ = Выборка.Результат;
			ДоходД  = Выборка.Договорники;
			ДоходН	= Выборка.Наблюдатели;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // РасчитатьДоходФЛ()

// Расчитывает имущественные доходы
// в том числе:
//  доходы от сдачи имущества в аренду;
//  дивиденды;
//  проценты;
//
// Параметры
//  Доход     - имущественные доходы
//  Аренда    - доходы от сдачи имущества в аренду
//  Дивиденды - дивиденды
//  Проценты  - проценты
//
Процедура РасчитатьИмущественныйДоход(Доход, Аренда, Дивиденды, Проценты)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.ВидРасчета КАК ВидРасчета,
	|	СУММА(ЕСТЬNULL(Начисления.Результат, 0)) КАК Результат,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ВидИмущественногоДохода = &Аренда
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Аренда,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ВидИмущественногоДохода = &Дивиденды
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Дивиденды,
	|	СУММА(ВЫБОР
	|			КОГДА Начисления.ВидРасчета.ВидИмущественногоДохода = &Проценты
	|				ТОГДА Начисления.Результат
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Проценты
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Активность
	|	И ВЫБОР
	|			КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Начисления.Организация = &Организация
	|		КОНЕЦ
	|	И Начисления.Результат <> 0
	|	И Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Начисления.ВидРасчета.ВидДохода = &ВидДохода
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ВидРасчета
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода" , КонецПериода);
	Запрос.УстановитьПараметр("Организация"  , Организация);
	Запрос.УстановитьПараметр("ВидДохода"    , Перечисления.ВидыДохода.ИмущественныйДоход);
	Запрос.УстановитьПараметр("Аренда"       , Перечисления.ВидыИмущественногоДохода.АрендаИмущества);
	Запрос.УстановитьПараметр("Дивиденды"    , Перечисления.ВидыИмущественногоДохода.Дивиденды);
	Запрос.УстановитьПараметр("Проценты"     , Перечисления.ВидыИмущественногоДохода.Проценты);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
			Доход     = Выборка.Результат;
			Аренда    = Выборка.Аренда;
			Дивиденды = Выборка.Дивиденды;
			Проценты  = Выборка.Проценты;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // РасчитатьИмущественныйДоход()

// Расчитывает доходы в виде материальной выгоды 
//
// Параметры
//  МатДоход - доходы в виде материальной выгоды
//
Процедура РасчитатьМатериальнуюВыгоду(МатДоход)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(Начисления.Результат, 0)) КАК Результат
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Активность
	|	И ВЫБОР
	|			КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Начисления.Организация = &Организация
	|		КОНЕЦ
	|	И Начисления.Результат <> 0
	|	И Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Начисления.ВидРасчета.ВидДохода = &ВидДохода";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода" , КонецПериода);
	Запрос.УстановитьПараметр("Организация"  , Организация);
	Запрос.УстановитьПараметр("ВидДохода"    , Перечисления.ВидыДохода.МатериальнаяВыгода);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		МатДоход = ?(Выборка.Результат = Null, 0, Выборка.Результат);
	КонецЕсли;
	
КонецПроцедуры // РасчитатьМатериальнуюВыгоду()

// Расчитывает прочие доходы
//
// Параметры
//  ПрДоход - прочие доходы
//
Процедура РасчитатьПрочиеДоходы(ПрДоход)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(Начисления.Результат, 0)) КАК Результат
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Активность
	|	И ВЫБОР
	|			КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Начисления.Организация = &Организация
	|		КОНЕЦ
	|	И Начисления.Результат <> 0
	|	И Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Начисления.ВидРасчета.ВидДохода = &ВидДохода";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода" , КонецПериода);
	Запрос.УстановитьПараметр("Организация"  , Организация);
	Запрос.УстановитьПараметр("ВидДохода"    , Перечисления.ВидыДохода.ПрочиеДоходы);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПрДоход = ?(Выборка.Результат = Null, 0, Выборка.Результат);
	КонецЕсли;
	
КонецПроцедуры // РасчитатьПрочиеДоходы()

// Формирует список льготных начислений, необлагаемых НДФЛ
//
Процедура ПолучитьСписокНачисленийНеоблагаемыхНДФЛ(СписокНеоблагаемыхНачислений)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Удержания.ВидРасчета.ВидЛьготыПоНДФЛ КАК Льгота,
	|	СУММА(ЕСТЬNULL(Удержания.Результат, 0)) КАК Сумма,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Удержания.Сотрудник) КАК Количество
	|ИЗ
	|	РегистрРасчета.Удержания КАК Удержания
	|ГДЕ
	|	Удержания.Активность
	|	И ВЫБОР
	|			КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Удержания.Организация = &Организация
	|		КОНЕЦ
	|	И Удержания.Результат <> 0
	|	И Удержания.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Удержания.ВидРасчета.ЛьготаПоНДФЛ
	|
	|СГРУППИРОВАТЬ ПО
	|	Удержания.ВидРасчета.ВидЛьготыПоНДФЛ";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода" , КонецПериода);
	Запрос.УстановитьПараметр("Организация"  , Организация);
	СписокНеоблагаемыхНачислений = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры // ПолучитьСписокНачисленийНеоблагаемыхНДФЛ()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЧисленностьСотрудниковПолучившихДоходы(Организация, НачалоПериода, КонецПериода, Работники, Совместители, Договорники, Иностранцы) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.ТипСотрудника,
	|	РаботникиОрганизацийСрезПоследних.НеРезидент
	|ПОМЕСТИТЬ ВР
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонДата, ) КАК РаботникиОрганизацийСрезПоследних
	|		ПО Начисления.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|ГДЕ
	|	Начисления.ПериодРегистрации МЕЖДУ &НачДата И &КонДата
	|	И Начисления.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.ТипСотрудника,
	|	РаботникиОрганизацийСрезПоследних.НеРезидент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(1) КАК Работники,
	|	СУММА(ВЫБОР
	|			КОГДА ВР.ТипСотрудника = &ТипСотрудника
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Совместители,
	|	СУММА(ВЫБОР
	|			КОГДА ВР.Сотрудник.Договорник
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Договорники,
	|	ВЫБОР
	|		КОГДА ВР.НеРезидент
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Иностранцы
	|ИЗ
	|	ВР КАК ВР
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ВР.НеРезидент
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ";     
	
    Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ТипСотрудника",Перечисления.ТипСотрудника.Совместитель);
	Запрос.УстановитьПараметр("НачДата",НачалоПериода);
	Запрос.УстановитьПараметр("КонДата",КонецПериода);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Работники    = Выборка.Работники;	
		Совместители = Выборка.Совместители;	
		Договорники  = Выборка.Договорники;	
		Иностранцы   = Выборка.Иностранцы;	
	КонецЕсли;
	
КонецПроцедуры                                  
 
Функция Приложение1_Получить(ПолучитьСтроку = Ложь, Стр = "") Экспорт
	
	// доходы физических лиц в виде оплаты труда (ст. 172, 173, 174, 175 НК)
	ДоходФЛ=0;	ДоходД=0;	ДоходН=0;
	РасчитатьДоходФЛ(ДоходФЛ, ДоходД, ДоходН);
	// имущественные доходы (ст. 176 НК))
	Доход=0;	Аренда=0;	Дивиденды=0;	Проценты=0;
	РасчитатьИмущественныйДоход(Доход, Аренда, Дивиденды, Проценты);
	// доходы в виде материальной выгоды (ст. 177 НК)
	МатДоход=0;
	РасчитатьМатериальнуюВыгоду(МатДоход);
	// прочие доходы (ст. 178 НК)
	ПрДоход=0;
	РасчитатьПрочиеДоходы(ПрДоход);
	
	а02  = ДоходФЛ;
	а021 = ДоходД;
	а022 = ДоходН;
	а03  = Доход;
	а031 = Аренда;
	а032 = Дивиденды;
	а033 = Проценты;
	а04  = МатДоход;
	а05  = ПрДоход;
	а01  = а02+а03+а04+а05;
	
	Строки = Новый Структура;
	Строки.Вставить("а01" , а01);
	Строки.Вставить("а02" , а02);
	Строки.Вставить("а021", а021);
	Строки.Вставить("а022", а022);
	Строки.Вставить("а03" , а03);
	Строки.Вставить("а031", а031);
	Строки.Вставить("а032", а032);
	Строки.Вставить("а033", а033);
	Строки.Вставить("а04" , а04);
	Строки.Вставить("а05" , а05);
	
	Если ПолучитьСтроку Тогда
		Возврат Строки[Стр];	
	Иначе
		Возврат Строки;
	КонецЕсли;         	
	
КонецФункции // Приложение1_Получить()
 
Функция Приложение2_Получить(ПолучитьСтроку = Ложь, Стр = "") Экспорт
	
	а01 = 0;
	а02к  = 0;	а02с  = 0;
	а03к  = 0;	а03с  = 0;
	а031к = 0;	а031с = 0;
	а032к = 0;	а032с = 0;
	а033к = 0;	а033с = 0;
	а034к = 0;	а034с = 0;
	н03к  = 0;	н03с  = 0;
	а04к  = 0;	а04с  = 0;
	а05к  = 0;	а05с  = 0;
	
	ПолучитьСписокНачисленийНеоблагаемыхНДФЛ(СписокНеоблагаемыхНачислений);
	Для каждого Строка Из СписокНеоблагаемыхНачислений Цикл
		
		Если Строка.Льгота.СтатьяЛьготыПоНДФЛ = Перечисления.СтатьиЛьготПоНДФЛ.Статья179 Тогда
			Если Строка.Льгота = Справочники.ЛьготыПоНДФЛ.ИпотечныйКредитМолодыхСемей Тогда
				а031к = Строка.Количество;
				а031с = Строка.Сумма;
			ИначеЕсли Строка.Льгота = Справочники.ЛьготыПоНДФЛ.ИпотечныйКредитКишлокКурилишБанка Тогда
				а032к = Строка.Количество;
				а032с = Строка.Сумма;
			ИначеЕсли Строка.Льгота = Справочники.ЛьготыПоНДФЛ.ОбучениеВУЗ Тогда
				а033к = Строка.Количество;
				а033с = Строка.Сумма;
			ИначеЕсли Строка.Льгота = Справочники.ЛьготыПоНДФЛ.ДобровольныйИНПС Тогда
				а034к = Строка.Количество;
				а034с = Строка.Сумма;
			Иначе	
				н03к = н03к + Строка.Количество;
				н03с = н03с + Строка.Сумма;
			КонецЕсли;
		ИначеЕсли Строка.Льгота.СтатьяЛьготыПоНДФЛ = Перечисления.СтатьиЛьготПоНДФЛ.Статья180 Тогда
				а04к = а04к + Строка.Количество;
				а04с = а04с + Строка.Сумма;
		ИначеЕсли Строка.Льгота.СтатьяЛьготыПоНДФЛ = Перечисления.СтатьиЛьготПоНДФЛ.ДругиеНПА Тогда
				а05к = а05к + Строка.Количество;
				а05с = а05с + Строка.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
	а03к = а031к + а032к + а033к + а034к + н03к;
	а03с = а031с + а032с + а033с + а034с + н03с;
	а02к = а03к + а04к;
	а02с = а03с + а04с;
	а01  = а02с + а05с;
	
	Строки = Новый Структура;
	Строки.Вставить("а01"   , а01);
	Строки.Вставить("а02к"  , а02к);
	Строки.Вставить("а02с"  , а02с);
	Строки.Вставить("а03к"  , а03к);
	Строки.Вставить("а03с"  , а03с);
	Строки.Вставить("а031к" , а031к);
	Строки.Вставить("а031с" , а031с);
	Строки.Вставить("а032к" , а032к);
	Строки.Вставить("а032с" , а032с);
	Строки.Вставить("а033к" , а033к);
	Строки.Вставить("а033с" , а033с);
	Строки.Вставить("а034к" , а034к);
	Строки.Вставить("а034с" , а034с);
	Строки.Вставить("а04к"  , а04к);
	Строки.Вставить("а04с"  , а04с);
	Строки.Вставить("а05к"  , а05к);
	Строки.Вставить("а05с"  , а05с);
	
	Если ПолучитьСтроку Тогда
		Возврат Строки[Стр];	
	Иначе
		Возврат Строки;
	КонецЕсли;         	
	
КонецФункции // Приложение2_Получить()
