
Перем ТаблицаДвижений;

Процедура Отчет(ТабДок,МассивСчетов,Заголовок,Организация,КонецПериода) Экспорт

	Макет = ПолучитьМакет("Отчет");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.Период КАК Период,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйДвиженияССубконто.СубконтоДт1),
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйДвиженияССубконто.СубконтоДт2),
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйДвиженияССубконто.СубконтоКт1),
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2 КАК СубконтоКт2,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйДвиженияССубконто.СубконтоКт2),
	|	СУММА(ХозрасчетныйДвиженияССубконто.Сумма) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, &КонецПериода,Организация=&Организация и Счет В (&Счета)) КАК ХозрасчетныйДвиженияССубконто
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	|	ХозрасчетныйДвиженияССубконто.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоКт1,
	|	СубконтоКт2,
	|	Период УБЫВ";

	Запрос.УстановитьПараметр("Счета", МассивСчетов);
	//Запрос.УстановитьПараметр("НачалоПериода", );
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
  	Запрос.УстановитьПараметр("Организация", Организация);

	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();

	
	//Возврат;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.Субконто2 КАК Субконто2,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКт,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ХозрасчетныйОстатки.Валюта КАК Валюта,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт КАК ВалютнаяСуммаОстатокДт,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт КАК ВалютнаяСуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&Счета), , Организация = &Организация) КАК ХозрасчетныйОстатки
	|ИТОГИ
	|	СУММА(СуммаОстатокДт),
	|	СУММА(СуммаОстатокКт),
	|	СУММА(СуммаОстаток),
	|	СУММА(ВалютнаяСуммаОстаток),
	|	СУММА(ВалютнаяСуммаОстатокДт),
	|	СУММА(ВалютнаяСуммаОстатокКт)
	|ПО
	|	Субконто1,
	|	Субконто2,
	|	Валюта";


	Запрос.УстановитьПараметр("Счета", МассивСчетов);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода)+1);
  	Запрос.УстановитьПараметр("Организация", Организация);

	Результат = Запрос.Выполнить();

	тз=новый ТаблицаЗначений; 
	тз.Колонки.Добавить("ДатаОбразования",Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты()));
	тз.Колонки.Добавить("Субконто",Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(100)));
	тз.Колонки.Добавить("Договор",Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(100)));
	тз.Колонки.Добавить("Валюта");
	тз.Колонки.Добавить("СКД",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СКДпросроченая",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СКК",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СККпросроченая",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));

	тз.Колонки.Добавить("СКДв",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СКДвпросроченая",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СККв",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СККвпросроченая",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	
	//дк=1;
	//МинСумма=0;
	
	Выборка1=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка1.Следующий() Цикл 
		
		Выборка2=Выборка1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка2.Следующий() Цикл 
		
		ВыборкаВалюта=Выборка2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВалюта.Следующий() Цикл 
			
			СтрокаТз=Тз.Добавить();
			СтрокаТз.ДатаОбразования=ПолучитьДатуОбразования(ВыборкаВалюта);
			
			СтрокаТз.субконто=сокрлп(ВыборкаВалюта.Субконто1.Наименование);
			СтрокаТз.договор=ВыборкаВалюта.Субконто2.Наименование; 
			СтрокаТз.Валюта=ВыборкаВалюта.Валюта; 
			СтрокаТз.скд=?(ВыборкаВалюта.СуммаОстаток>0,ВыборкаВалюта.СуммаОстаток,0);
			СтрокаТз.скк=?(ВыборкаВалюта.СуммаОстаток>0,0,-ВыборкаВалюта.СуммаОстаток);
			СтрокаТз.скдв=?(ВыборкаВалюта.ВалютнаяСуммаОстаток>0,ВыборкаВалюта.ВалютнаяСуммаОстаток,0);
			СтрокаТз.сккв=?(ВыборкаВалюта.ВалютнаяСуммаОстаток>0,0,-ВыборкаВалюта.ВалютнаяСуммаОстаток);
			
			Срок=(КонецПериода-СтрокаТз.ДатаОбразования)/(24*60*60);
			
			Если Срок>90 Тогда
				СтрокаТз.СКДпросроченая=?(ВыборкаВалюта.СуммаОстаток>0,ВыборкаВалюта.СуммаОстаток,0);
				СтрокаТз.СККпросроченая=?(ВыборкаВалюта.СуммаОстаток>0,0,-ВыборкаВалюта.СуммаОстаток);
				СтрокаТз.СКДвпросроченая=?(ВыборкаВалюта.ВалютнаяСуммаОстаток>0,ВыборкаВалюта.ВалютнаяСуммаОстаток,0);
				СтрокаТз.СККвпросроченая=?(ВыборкаВалюта.ВалютнаяСуммаОстаток>0,0,-ВыборкаВалюта.ВалютнаяСуммаОстаток);
			КонецЕсли; 
			
		КонецЦикла;      
		КонецЦикла;      
	КонецЦикла;      
	
	//тз.свернуть("порядок,субконто,договор","снд,снк,до,ко,скд,скк");
	тз.сортировать("субконто,договор,валюта");
	
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалВалюта = Макет.ПолучитьОбласть("ПодвалВалюта");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	Конец = Макет.ПолучитьОбласть("Конец");

	ТабДок.Очистить();
	
	ОбластьШапка.Параметры.Организация=организация;
	ОбластьШапка.Параметры.Заголовок=Заголовок;
	ОбластьШапка.Параметры.НаДату=Формат(КонецПериода,"ДФ=dd.MM.yyyy")+" г.";
	
	ТабДок.Вывести(ОбластьШапка);
	
	Для Каждого СтрокаТз из тз  Цикл
		
		ОбластьСтрока.Параметры.Заполнить(СтрокаТЗ);
		ТабДок.Вывести(ОбластьСтрока);
	
	КонецЦикла; 
	
	ОбластьПодвал.Параметры.скд=Тз.Итог("скд");
	ОбластьПодвал.Параметры.скк=Тз.Итог("скк");
	ОбластьПодвал.Параметры.СКДпросроченая=Тз.Итог("СКДпросроченая");
	ОбластьПодвал.Параметры.СККпросроченая=Тз.Итог("СККпросроченая");
	ТабДок.Вывести(ОбластьПодвал);
	
	
	тз.свернуть("валюта","скдв,сккв,СКДвпросроченая,СККвпросроченая");
	
	Для Каждого СтрокаТз из тз Цикл
		
		ОбластьПодвалВалюта.Параметры.Заполнить(СтрокаТз);
		ТабДок.Вывести(ОбластьПодвалВалюта);
	
	КонецЦикла; 
	
	
	
	ТабДок.Вывести(Конец);
	
	ТабДок.ФиксацияСверху=5;
	ТабДок.Автомасштаб=истина;
	
КонецПроцедуры

Процедура ОтчетБезДоговоров(ТабДок,МассивСчетов,Заголовок,Организация,КонецПериода) Экспорт

	Макет = ПолучитьМакет("ОтчетБезДоговоров");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.Период КАК Период,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйДвиженияССубконто.СубконтоДт1),
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
	|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйДвиженияССубконто.СубконтоКт1),
	|	СУММА(ХозрасчетныйДвиженияССубконто.Сумма) КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|		,
	|		&КонецПериода,
	|		Организация = &Организация
	|		    И Счет В (&Счета)) КАК ХозрасчетныйДвиженияССубконто
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	СубконтоДт1,
	|	СубконтоКт1,
	|	Период УБЫВ";

	Запрос.УстановитьПараметр("Счета", МассивСчетов);
	//Запрос.УстановитьПараметр("НачалоПериода", );
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
  	Запрос.УстановитьПараметр("Организация", Организация);

	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();

	
	//Возврат;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКт,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ХозрасчетныйОстатки.Валюта КАК Валюта,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт КАК ВалютнаяСуммаОстатокДт,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт КАК ВалютнаяСуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&КонецПериода, Счет В (&Счета), , Организация = &Организация) КАК ХозрасчетныйОстатки
	|ИТОГИ
	|	СУММА(СуммаОстатокДт),
	|	СУММА(СуммаОстатокКт),
	|	СУММА(СуммаОстаток),
	|	СУММА(ВалютнаяСуммаОстаток),
	|	СУММА(ВалютнаяСуммаОстатокДт),
	|	СУММА(ВалютнаяСуммаОстатокКт)
	|ПО
	|	Субконто1,
	|	Валюта";


	Запрос.УстановитьПараметр("Счета", МассивСчетов);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода)+1);
  	Запрос.УстановитьПараметр("Организация", Организация);

	Результат = Запрос.Выполнить();

	тз=новый ТаблицаЗначений; 
	тз.Колонки.Добавить("ДатаОбразования",Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты()));
	тз.Колонки.Добавить("Субконто",Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(100)));
	тз.Колонки.Добавить("Валюта");
	тз.Колонки.Добавить("СКД",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СКДпросроченая",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СКК",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СККпросроченая",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));

	тз.Колонки.Добавить("СКДв",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СКДвпросроченая",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СККв",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	тз.Колонки.Добавить("СККвпросроченая",Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(18,2)));
	
	//дк=1;
	//МинСумма=0;
	
	Выборка1=Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка1.Следующий() Цикл 
		
		ВыборкаВалюта=Выборка1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаВалюта.Следующий() Цикл 
			
			СтрокаТз=Тз.Добавить();
			СтрокаТз.ДатаОбразования=ПолучитьДатуОбразованияБезДоговоров(ВыборкаВалюта);
			
			СтрокаТз.субконто=сокрлп(ВыборкаВалюта.Субконто1.Наименование);
			СтрокаТз.Валюта=ВыборкаВалюта.Валюта; 
			СтрокаТз.скд=?(ВыборкаВалюта.СуммаОстаток>0,ВыборкаВалюта.СуммаОстаток,0);
			СтрокаТз.скк=?(ВыборкаВалюта.СуммаОстаток>0,0,-ВыборкаВалюта.СуммаОстаток);
			СтрокаТз.скдв=?(ВыборкаВалюта.ВалютнаяСуммаОстаток>0,ВыборкаВалюта.ВалютнаяСуммаОстаток,0);
			СтрокаТз.сккв=?(ВыборкаВалюта.ВалютнаяСуммаОстаток>0,0,-ВыборкаВалюта.ВалютнаяСуммаОстаток);
			
			Срок=(КонецПериода-СтрокаТз.ДатаОбразования)/(24*60*60);
			
			Если Срок>90 Тогда
				СтрокаТз.СКДпросроченая=?(ВыборкаВалюта.СуммаОстаток>0,ВыборкаВалюта.СуммаОстаток,0);
				СтрокаТз.СККпросроченая=?(ВыборкаВалюта.СуммаОстаток>0,0,-ВыборкаВалюта.СуммаОстаток);
				СтрокаТз.СКДвпросроченая=?(ВыборкаВалюта.ВалютнаяСуммаОстаток>0,ВыборкаВалюта.ВалютнаяСуммаОстаток,0);
				СтрокаТз.СККвпросроченая=?(ВыборкаВалюта.ВалютнаяСуммаОстаток>0,0,-ВыборкаВалюта.ВалютнаяСуммаОстаток);
			КонецЕсли; 
			
		КонецЦикла;      
	КонецЦикла;      
	
	//тз.свернуть("порядок,субконто,договор","снд,снк,до,ко,скд,скк");
	тз.сортировать("субконто,валюта");
	
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвалВалюта = Макет.ПолучитьОбласть("ПодвалВалюта");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	Конец = Макет.ПолучитьОбласть("Конец");

	ТабДок.Очистить();
	
	ОбластьШапка.Параметры.Организация=организация;
	ОбластьШапка.Параметры.Заголовок=Заголовок;
	ОбластьШапка.Параметры.НаДату=Формат(КонецПериода,"ДФ=dd.MM.yyyy")+" г.";
	
	ТабДок.Вывести(ОбластьШапка);
	
	Для Каждого СтрокаТз из тз  Цикл
		
		ОбластьСтрока.Параметры.Заполнить(СтрокаТЗ);
		ТабДок.Вывести(ОбластьСтрока);
	
	КонецЦикла; 
	
	ОбластьПодвал.Параметры.скд=Тз.Итог("скд");
	ОбластьПодвал.Параметры.скк=Тз.Итог("скк");
	ОбластьПодвал.Параметры.СКДпросроченая=Тз.Итог("СКДпросроченая");
	ОбластьПодвал.Параметры.СККпросроченая=Тз.Итог("СККпросроченая");
	ТабДок.Вывести(ОбластьПодвал);
	
	
	тз.свернуть("валюта","скдв,сккв,СКДвпросроченая,СККвпросроченая");
	
	Для Каждого СтрокаТз из тз Цикл
		
		ОбластьПодвалВалюта.Параметры.Заполнить(СтрокаТз);
		ТабДок.Вывести(ОбластьПодвалВалюта);
	
	КонецЦикла; 
	
	
	
	ТабДок.Вывести(Конец);
	
	ТабДок.ФиксацияСверху=5;
	ТабДок.Автомасштаб=истина;
	
КонецПроцедуры


Функция ПолучитьДатуОбразования(Выборка)
	
	Отбор=Новый Структура("СубконтоДт1,СубконтоДт2",Выборка.Субконто1,Выборка.Субконто2);
	
	д1=Дата(1,1,1);
	Массив=ТаблицаДвижений.НайтиСтроки(Отбор);	
	Если Массив.Количество()>0 Тогда
		
		Для кк=0 по Массив.Количество()-1 Цикл
			Если д1<Массив[кк].Период Тогда
				д1=Массив[кк].Период;
			Конецесли;	
		КонецЦикла;	
	
	КонецЕсли; 
	
	Отбор=Новый Структура("СубконтоКт1,СубконтоКт2",Выборка.Субконто1,Выборка.Субконто2);
	
	д2=Дата(1,1,1);
	Массив=ТаблицаДвижений.НайтиСтроки(Отбор);	
	Если Массив.Количество()>0 Тогда
		
		Для кк=0 по Массив.Количество()-1 Цикл
			Если д2<Массив[кк].Период Тогда
				д2=Массив[кк].Период;
			Конецесли;	
		КонецЦикла;	
	
	КонецЕсли; 
	
	Если д1>д2 Тогда
		Возврат д1;
	Иначе	
		Возврат д2;
	КонецЕсли; 
	
КонецФункции	

Функция ПолучитьДатуОбразованияБезДоговоров(Выборка)
	
	Отбор=Новый Структура("СубконтоДт1",Выборка.Субконто1);
	
	д1=Дата(1,1,1);
	Массив=ТаблицаДвижений.НайтиСтроки(Отбор);	
	Если Массив.Количество()>0 Тогда
		
		Для кк=0 по Массив.Количество()-1 Цикл
			Если д1<Массив[кк].Период Тогда
				д1=Массив[кк].Период;
			Конецесли;	
		КонецЦикла;	
	
	КонецЕсли; 
	
	Отбор=Новый Структура("СубконтоКт1",Выборка.Субконто1);
	
	д2=Дата(1,1,1);
	Массив=ТаблицаДвижений.НайтиСтроки(Отбор);	
	Если Массив.Количество()>0 Тогда
		
		Для кк=0 по Массив.Количество()-1 Цикл
			Если д2<Массив[кк].Период Тогда
				д2=Массив[кк].Период;
			Конецесли;	
		КонецЦикла;	
	
	КонецЕсли; 
	
	Если д1>д2 Тогда
		Возврат д1;
	Иначе	
		Возврат д2;
	КонецЕсли; 
	
КонецФункции	
