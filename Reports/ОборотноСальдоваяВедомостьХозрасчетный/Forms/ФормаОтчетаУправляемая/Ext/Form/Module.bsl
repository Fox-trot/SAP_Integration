
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ (НА СЕРВЕРЕ)

&НаСервере
Процедура СохранитьНастройки()

	Перем Настройки;
	
	Настройки = Новый Структура;
	Настройки.Вставить("ДатаНач", Отчет.ДатаНач);
	Настройки.Вставить("ДатаКон", Отчет.ДатаКон);
	Настройки.Вставить("Организация", Отчет.Организация);
	
	ХранилищеОбщихНастроек.Сохранить("Отчет.ОборотноСальдоваяВедомостьХозрасчетный", "ФормаОтчетаУправляемая", Настройки);
 
КонецПроцедуры // СохранитьНастройки()

&НаСервере
Процедура ЗагрузитьНастройки()

	Перем ЗначениеНастроек;
	
	ЗначениеНастроек = ХранилищеОбщихНастроек.Загрузить("Отчет.ОборотноСальдоваяВедомостьХозрасчетный", "ФормаОтчетаУправляемая");
	Если ЗначениеНастроек = Неопределено Тогда
		Отчет.ДатаНач = НачалоГода(ТекущаяДата());
		Отчет.ДатаКон = КонецМесяца(ТекущаяДата());
	ИначеЕсли ТипЗнч(ЗначениеНастроек) = Тип("Структура") Тогда
		ЗначениеНастроек.Свойство("ДатаНач", Отчет.ДатаНач);
		ЗначениеНастроек.Свойство("ДатаКон", Отчет.ДатаКон);
		ЗначениеНастроек.Свойство("Организация", Отчет.Организация);
	КонецЕсли;

КонецПроцедуры // ЗагрузитьНастройки()

&НаСервере
Процедура ОбновитьОтчетНаСервере()

	ТекОтчет = РеквизитФормыВЗначение("Отчет");
	ТекОтчет.СформироватьОтчет(Результат);
	
КонецПроцедуры // ОбновитьОтчетНаСервере()

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ (НА СЕРВЕРЕ БЕЗ КОНТЕКСТА)

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ (НА КЛИЕНТЕ)

// Управляет пометками кнопок командной панели
//
// Параметры:
//	Нет.
//
&НаКлиенте
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	КоманднаяПанель.ПодчиненныеЭлементы.ФормаЗаголовок.Пометка = ПоказыватьЗаголовок;
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура - обработчик команды "УстановитьЗаголовок".
//
&НаКлиенте
Процедура УстановитьЗаголовок(Команда)

	ПоказыватьЗаголовок = НЕ ПоказыватьЗаголовок;
	Результат.Область("R1:R" + Результат.Области.Заголовок.Низ).Видимость = ПоказыватьЗаголовок;
	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры // УстановитьЗаголовок()

// Процедура - обработчик команды "УстановитьНастройки".
//
&НаКлиенте
Процедура УстановитьНастройки(Команда)

	ФормаНастройка = ПолучитьФорму("Отчет.ОборотноСальдоваяВедомостьХозрасчетный.Форма.ФормаНастроекУправляемая",, ЭтаФорма);
	
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		ОбновитьОтчетНаСервере();
	КонецЕсли;

КонецПроцедуры // УстановитьНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Процедура - обработчик события "ПриСозданииНаСервере" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекПользователь = ПроцедурыСервера.ПараметрСеанса("ТекущийПользователь");
	Отчет.Организация = ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнаяОрганизация");
	
	//ЗагрузитьНастройки();
	
КонецПроцедуры // ПриСозданииНаСервере()

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Установка значений по умолчанию
	//Отчет.ВыводитьРазвернутоеСальдо	= Истина;
	//Отчет.ПоСубсчетамИСубконто		= Истина;
	//Отчет.ПоВалютам					= Истина;
	//Отчет.ПоЗабалансовымСчетам		= Истина;
	ПоказыватьЗаголовок				= Истина;
	
КонецПроцедуры // ПриОткрытии()

// Процедура - обработчик события "ПриЗакрытии" формы.
//
&НаКлиенте
Процедура ПриЗакрытии()
	
	//СохранитьНастройки();
	
КонецПроцедуры // ПриЗакрытии()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ШАПКИ

// Процедура - обработчик команды "УстановитьИнтервал".
//
&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода();
	Диалог.Период.ДатаНачала	= Отчет.ДатаНач;
	Диалог.Период.ДатаОкончания	= Отчет.ДатаКон;
	
	Если Диалог.Редактировать() Тогда
		Отчет.ДатаНач = Диалог.Период.ДатаНачала;
		Отчет.ДатаКон = Диалог.Период.ДатаОкончания;
	КонецЕсли;

КонецПроцедуры // УстановитьИнтервал()
