////////////////////////////////////////////////////////////////////////////////
// ЭлектронныеДокументыКлиентСервер: механизм обмена электронными документами.
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Получает текстовое представление версии электронного документа.
//
// Параметры:
//  СсылкаНаВладельца - Ссылка на объект ИБ, состояние версии электронного документа которого необходимо получить.
//
Функция ПолучитьТекстСостоянияЭД(СсылкаНаВладельца, Форма = Неопределено) Экспорт
	
	Гиперссылка = Ложь;
	ТекстСостоянияЭД = ЭлектронныеДокументыСлужебныйВызовСервера.venkonТекстСостоянияЭД(СсылкаНаВладельца, Гиперссылка);
		
	Возврат ТекстСостоянияЭД;
	
КонецФункции

// Формирует текст сообщения, подставляя значения
// параметров в шаблоны сообщений.
//
// Параметры
//  ВидПоля       - Строка - может принимать значения:
//                  Поле, Колонка, Список
//  ВидСообщения  - Строка - может принимать значения:
//                  Заполнение, Корректность
//  Параметр1     - Строка - имя поля
//  Параметр2     - Строка - номер строки
//  Параметр3     - Строка - имя списка
//  Параметр4     - Строка - текст сообщения о некорректности заполнения
//
// Возвращаемое значение:
//   Строка - текст сообщения
//
Функция ПолучитьТекстСообщения(ВидПоля = "Поле", ВидСообщения = "Заполнение",
	Параметр1 = "", Параметр2 = "",	Параметр3 = "", Параметр4 = "") Экспорт

	ТекстСообщения = "";

	Если ВРег(ВидПоля) = "ПОЛЕ" Тогда
		Если ВРег(ВидСообщения) = "ЗАПОЛНЕНИЕ" Тогда
			Шаблон = НСтр("ru = 'Поле ""%1"" не заполнено.'");
		ИначеЕсли ВРег(ВидСообщения) = "КОРРЕКТНОСТЬ" Тогда
			Шаблон = НСтр("ru = 'Поле ""%1"" заполнено некорректно.
                           |
                           |%4'");
		КонецЕсли;
	ИначеЕсли ВРег(ВидПоля) = "КОЛОНКА" Тогда
		Если ВРег(ВидСообщения) = "ЗАПОЛНЕНИЕ" Тогда
			Шаблон = НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""%3"".'");
		ИначеЕсли ВРег(ВидСообщения) = "КОРРЕКТНОСТЬ" Тогда
			Шаблон = НСтр("ru = 'Некорректно заполнена колонка ""%1"" в строке %2 списка ""%3"".
                           |
                           |%4'");
		КонецЕсли;
	ИначеЕсли ВРег(ВидПоля) = "СПИСОК" Тогда
		Если ВРег(ВидСообщения) = "ЗАПОЛНЕНИЕ" Тогда
			Шаблон = НСтр("ru = 'Не введено ни одной строки в список ""%3"".'");
		ИначеЕсли ВРег(ВидСообщения) = "КОРРЕКТНОСТЬ" Тогда
			Шаблон = НСтр("ru = 'Некорректно заполнен список ""%3"".
                           |
                           |%4'");
		КонецЕсли;
	КонецЕсли;

	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Шаблон, Параметр1, Параметр2, Параметр3, Параметр4);

КонецФункции

// Заполняет текстовое представление версии электронного документа.
//
// Параметры:
//  ДокументСсылка - Ссылка на объект ИБ, состояние версии электронного документа которого необходимо получить.
//  ДекорацияСостояниеЭДО - Элемент формы "декорация", в заголовок которого пишется состояние ЭДО.
//
Процедура ЗаполнитьСостояниеЭДО(ДокументСсылка, ДекорацияСостояниеЭДО) Экспорт
	
	ЭлементФормыДоступность = Истина;
	ТекстСостоянияЭДО = ЭлектронныеДокументыСлужебныйВызовСервера.venkonТекстСостоянияЭД(ДокументСсылка, ЭлементФормыДоступность);
	
	ДекорацияСостояниеЭДО.Видимость = Не ПустаяСтрока(ТекстСостоянияЭДО);
	ДекорацияСостояниеЭДО.Заголовок = ТекстСостоянияЭДО;
	ДекорацияСостояниеЭДО.Доступность = ЭлементФормыДоступность;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЙ ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Определяет необходимость конкретного действия из перечня действий.
//
// Параметры:
//  ПереченьДействий - Строка, перечень действий, которые должны быть совершены с объектом
//  Действие - Строка, конкретное действие, которое нужно найти в перечне действий
// 
// Возвращаемое значение:
//  Булево - Если действие найдено - возвращается Истина, иначе Ложь
//
Функция ЕстьДействие(ПереченьДействий, Действие) Экспорт
	
	Если Найти(ПереченьДействий, Действие) > 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

// Ищет подменю ЭДО в форме документа или форме списка документов
//
Функция ПодменюЭДО(ЭлементыФормы) Экспорт
	
	Подменю = Неопределено;
	
	// Если подменю в командной панели формы
	Подменю = ЭлементыФормы.Найти("ЭД");
	Если Подменю = Неопределено Тогда
		Подменю = ЭлементыФормы.Найти("ФормаЭД");
	КонецЕсли;
	
	Возврат Подменю;
	
КонецФункции

// Обновляет пиктограмму подменю ЭДО формы документа или формы списка документов
//
Процедура ОбновитьПодменюЭДО(ПодменюЭДО, Картинка) Экспорт
	
	Если ПодменюЭДО = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПодменюЭДО.Картинка = Картинка Тогда
		Возврат;
	КонецЕсли;
	
	ПодменюЭДО.Картинка = Картинка;
	Если Не Картинка = БиблиотекаКартинок.ЭмблемаСервиса1СЭДО Тогда
		ПодменюЭДО.Подсказка = НСтр("ru = 'В сервисе Venkon-ЭДО есть новые документы'");
	Иначе
		ПодменюЭДО.Подсказка = НСтр("ru = 'Команды ЭДО'");
	КонецЕсли;
	
КонецПроцедуры

