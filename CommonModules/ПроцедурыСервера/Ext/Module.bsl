
Процедура ОпределитьТекущегоПользователя()  экспорт

	Если ПустаяСтрока(ИмяПользователя()) Тогда
		ИмяПользователя       = "НеАвторизован";
		ПолноеИмяПользователя = "Не авторизован";

	Иначе
		ИмяПользователя       = ИмяПользователя();

		Если ПустаяСтрока(ПолноеИмяПользователя()) Тогда
			ПолноеИмяПользователя = ИмяПользователя;
		Иначе
			ПолноеИмяПользователя = ПолноеИмяПользователя();
		КонецЕсли;

	КонецЕсли;

	ДлинаКодаПользователя = Метаданные.Справочники.Пользователи.ДлинаКода;
	
	Если СтрДлина(ИмяПользователя) > ДлинаКодаПользователя Тогда
		ИмяПользователя = Лев(ИмяПользователя, ДлинаКодаПользователя);
	КонецЕсли; 
	
	ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоКоду(ИмяПользователя);

КонецПроцедуры // ОпределитьТекущегоПользователя()

Функция ПараметрСеанса(ИмяПараметра) экспорт
	
	Возврат ПараметрыСеанса[ИмяПараметра];
	
КонецФункции	

Функция ПолучитьЗначениеПоУмолчанию_Сервер(Пользователь, Настройка) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("Настройка"   , ПланыВидовХарактеристик.НастройкиПользователей[Настройка]);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Значение
	|ИЗ
	|	РегистрСведений.НастройкиПользователей КАК РегистрЗначениеПрав
	|
	|ГДЕ
	|	Пользователь = &Пользователь
	| И Настройка    = &Настройка";

	Выборка = Запрос.Выполнить().Выбрать();

	ПустоеЗначение = ПланыВидовХарактеристик.НастройкиПользователей[Настройка].ТипЗначения.ПривестиЗначение();

	Если Выборка.Количество() = 0 Тогда
		
		Если (Настройка = "ОткрыватьПриЗапускеПанельФункций") ИЛИ (Настройка = "ПоказыватьОписанияПанелиФункций") Тогда
			Возврат Истина;
		КонецЕсли;
		
		Возврат ПустоеЗначение;

	ИначеЕсли Выборка.Следующий() Тогда

		Если ЗначениеНеЗаполнено(Выборка.Значение) Тогда
			Возврат ПустоеЗначение;
		Иначе
			Возврат Выборка.Значение;
		КонецЕсли;

	Иначе
		Возврат ПустоеЗначение;

	КонецЕсли;

КонецФункции // ПолучитьЗначениеПоУмолчанию()

// Процедура предназначена для заполнения общих реквизитов документов,
// вызывается в обработчиках событий "ПриОткрытии" в модулех форм всех документов.
//
// Параметры:
//  ДокументОбъект                 - объект редактируемого документа,
//  ТекПользователь                - ссылка на справочник, определяет текущего пользователя  
//  ВалютаРегламентированногоУчета - валюта регламентированного учета
//  ТипОперации                    - необязаетельный, строка вида операции ("Покупка" или "Продажа"),
//                                   если не передан, то реквизиты, зависящие от вида операции, не заполняются
//
Процедура ЗаполнитьШапкуДокумента_Сервер(ДокументОбъект, ДокументСсылка, ВалютаРегламентированногоУчета = Неопределено, ТипОперации = "") Экспорт

	Перем ТипЦен;

	МетаданныеДокумента = ДокументСсылка.Метаданные();
	ТекПользователь=ПроцедурыСервера.ПараметрСеанса("ТекущийПользователь");

	Если ЕстьРеквизитДокумента("ОтражатьПоБУ", МетаданныеДокумента) Тогда

		ДокументОбъект.ОтражатьПоБУ = истина;//НЕ ПолучитьЗначениеПоУмолчанию(ТекПользователь, "НеОтражатьДокументыВБухгалтерскомУчете");

	КонецЕсли;

	Если ЕстьРеквизитДокумента("Организация", МетаданныеДокумента) 
	  И (ЗначениеНеЗаполнено(ДокументОбъект.Организация)) Тогда
		ДокументОбъект.Организация = ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнаяОрганизация");
	КонецЕсли;

	Если ЕстьРеквизитДокумента("БанковскийСчет", МетаданныеДокумента) 
	  И (ЗначениеНеЗаполнено(ДокументОбъект.БанковскийСчет)) Тогда
		ДокументОбъект.БанковскийСчет = ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнаяОрганизация").ОсновнойБанковскийСчет;
	КонецЕсли;
	
	Если ЕстьРеквизитДокумента("Ответственный", МетаданныеДокумента) Тогда
		ДокументОбъект.Ответственный = ПроцедурыСервера.ПараметрСеанса("ТекущийПользователь");
	КонецЕсли;

	Если ЕстьРеквизитДокумента("ВидОперации", МетаданныеДокумента)
	   И (ЗначениеНеЗаполнено(ДокументОбъект.ВидОперации)) Тогда
		ДокументОбъект.ВидОперации = Перечисления[ДокументОбъект.ВидОперации.Метаданные().Имя][0];
	КонецЕсли;

	Если ЕстьРеквизитДокумента("Склад", МетаданныеДокумента)
	   И (ЗначениеНеЗаполнено(ДокументОбъект.Склад)) Тогда
		ДокументОбъект.Склад = ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнойСклад");
	КонецЕсли;

	Если ЕстьРеквизитДокумента("СтавкаНДС", МетаданныеДокумента)
	   И (ЗначениеНеЗаполнено(ДокументОбъект.СтавкаНДС)) Тогда
		ДокументОбъект.СтавкаНДС = ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ОсновнаяСтавкаНДС");
	КонецЕсли;

	Если ЕстьРеквизитДокумента("БанковскийСчет", МетаданныеДокумента)
	   И ЗначениеНеЗаполнено(ДокументОбъект.БанковскийСчет) Тогда
		ДокументОбъект.БанковскийСчет = ДокументОбъект.Организация.ОсновнойБанковскийСчет;
		Если ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокумента) Тогда
			ДокументОбъект.ВалютаДокумента = ДокументОбъект.Организация.ОсновнойБанковскийСчет.ВалютаДенежныхСредств;
		КонецЕсли;
	КонецЕсли;

	Если ЕстьРеквизитДокумента("СчетОрганизации", МетаданныеДокумента)
	   И ЗначениеНеЗаполнено(ДокументОбъект.СчетОрганизации) Тогда
		ДокументОбъект.СчетОрганизации = ДокументОбъект.Организация.ОсновнойБанковскийСчет;
		ДокументОбъект.ВалютаДокумента = ДокументОбъект.Организация.ОсновнойБанковскийСчет.ВалютаДенежныхСредств;
	КонецЕсли;

	Если ЕстьРеквизитДокумента("ВалютаДокумента", МетаданныеДокумента)
	   И (ЗначениеНеЗаполнено(ДокументОбъект.ВалютаДокумента)) Тогда
		ДокументОбъект.ВалютаДокумента = ВалютаРегламентированногоУчета;
	КонецЕсли;


КонецПроцедуры // ЗаполнитьШапкуДокумента()

Функция РольДоступна_Сервер(ИмяРоли) Экспорт
	
	Возврат РольДоступна(ИмяРоли);
	
КонецФункции

Функция ЭтоГлавныйУзел() Экспорт
	
	Если ПланыОбмена.ГлавныйУзел() = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;	
	
	Если ПланыОбмена.Полный.ЭтотУзел() = ПланыОбмена.ГлавныйУзел() Тогда
		Возврат Истина;
	КонецЕсли;	
	
	Возврат Ложь;
	
КонецФункции

Функция ВидыСубконтоСчета(Счет) Экспорт
	Возврат Счет.ВидыСубконто;
КонецФункции	

// Функция формирует представление суммы прописью в указанной валюте
//
// Возвращаемое значение:
//  Строка - сумма прописью
//
Функция СформироватьСуммуПрописью_Сервер(Сумма, Валюта) Экспорт

	Если Валюта.Наименование="USD" Тогда
		ФормСтрока = "Л = ru_RU; ДП = Ложь";
		ПарПредмета="доллар США,доллара США,долларов США,м,цент,цента,центов,м,2";
		Возврат ЧислоПрописью(Сумма, ФормСтрока, ПарПредмета);	
	ИначеЕсли Валюта.ПараметрыПрописиНаРусском = "" Тогда
		Возврат ФорматСумм(Сумма);
	Иначе
		Возврат ЧислоПрописью(Сумма,"ДП = Ложь",Валюта.ПараметрыПрописиНаРусском);
	КонецЕсли;

КонецФункции // СформироватьСуммуПрописью_Сервер()

&НаСервере
Процедура УстановитьНомерДокумента_Сервер(ДокументОбъект) Экспорт

	Если ЗначениеНеЗаполнено(ДокументОбъект.Организация.Префикс) Тогда

		ДокументОбъект.УстановитьНовыйНомер("00");

	Иначе

		ДокументОбъект.УстановитьНовыйНомер(ДокументОбъект.Организация.Префикс);
        		
	КонецЕсли;

КонецПроцедуры // УстановитьНомерДокумента()
