
Функция КалендарьПоГрафику(ГрафикРаботы,ДатаНачалаИнтервалаКалендаря,ДатаОкончанияИнтервалаКалендаря) экспорт	
	
	ДлинаСуток = 86400;
	
	ДнейВИнтервале = Окр((ДатаОкончанияИнтервалаКалендаря - ДатаНачалаИнтервалаКалендаря)/ДлинаСуток);
	Для инд = 0 по ДнейВИнтервале - 1 Цикл
		индДата    = ДатаНачалаИнтервалаКалендаря + инд * ДлинаСуток;
	КонецЦикла;
	ЗапросПоСменам = Новый Запрос;
	ЗапросПоСменам.УстановитьПараметр("ДатаНачалаИнтервалаКалендаря",  ДатаНачалаИнтервалаКалендаря);
	ЗапросПоСменам.УстановитьПараметр("ДатаОкончанияИнтервалаКалендаря", ДатаОкончанияИнтервалаКалендаря);
	ЗапросПоСменам.УстановитьПараметр("ГрафикРаботы", ГрафикРаботы);
	ЗапросПоСменам.УстановитьПараметр("ПоЧасам", 	Перечисления.ВидыУчетаВремени.ПоЧасам);
	ЗапросПоСменам.УстановитьПараметр("Вечерние", 	Перечисления.ВидыУчетаВремени.ПоВечернимЧасам);
	ЗапросПоСменам.УстановитьПараметр("Ночные", 	Перечисления.ВидыУчетаВремени.ПоНочнымЧасам);
	
	ЗапросПоСменам.Текст = "ВЫБРАТЬ
	                       |	ГрафикиРаботыПоВидамВремениЧасы.Дата,
	                       |	ГрафикиРаботыПоВидамВремениЧасы.ОсновноеЗначение КАК Часы,
	                       |	ГрафикиРаботыПоВидамВремениЧасы.ВидУчетаВремени,
	                       |	ГрафикиРаботыПоВидамВремениНочные.ОсновноеЗначение КАК НочныеЧасы,
	                       |	ГрафикиРаботыПоВидамВремениВечерние.ОсновноеЗначение КАК ВечерниеЧасы,
	                       |	ВЫБОР
	                       |		КОГДА ГрафикиРаботыПоВидамВремениЧасы.ОсновноеЗначение <> 0
	                       |			ТОГДА 1
	                       |		ИНАЧЕ 0
	                       |	КОНЕЦ КАК Дни
	                       |ИЗ
	                       |	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремениЧасы
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремениВечерние
	                       |		ПО ГрафикиРаботыПоВидамВремениЧасы.ГрафикРаботы = ГрафикиРаботыПоВидамВремениВечерние.ГрафикРаботы
	                       |			И ГрафикиРаботыПоВидамВремениЧасы.Дата = ГрафикиРаботыПоВидамВремениВечерние.Дата
	                       |			И (ГрафикиРаботыПоВидамВремениВечерние.ВидУчетаВремени = &Вечерние)
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремениНочные
	                       |		ПО ГрафикиРаботыПоВидамВремениЧасы.ГрафикРаботы = ГрафикиРаботыПоВидамВремениНочные.ГрафикРаботы
	                       |			И ГрафикиРаботыПоВидамВремениЧасы.Дата = ГрафикиРаботыПоВидамВремениНочные.Дата
	                       |			И (ГрафикиРаботыПоВидамВремениНочные.ВидУчетаВремени = &Ночные)
	                       |ГДЕ
	                       |	ГрафикиРаботыПоВидамВремениЧасы.ГрафикРаботы = &ГрафикРаботы
	                       |	И ГрафикиРаботыПоВидамВремениЧасы.Дата >= &ДатаНачалаИнтервалаКалендаря
	                       |	И ГрафикиРаботыПоВидамВремениЧасы.Дата <= &ДатаОкончанияИнтервалаКалендаря
	                       |	И ГрафикиРаботыПоВидамВремениЧасы.ВидУчетаВремени = &ПоЧасам";
	
	РезультатЗапроса  = ЗапросПоСменам.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;
	
КонецФункции	

Функция СведенияОСотрудниках(МассивСотрудников,Организация,ДатаСведений) экспорт
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Сотрудники.Наименование КАК ФИО,
	|	Сотрудники.ФизическоеЛицо.ИНН,
	|	Сотрудники.ФизическоеЛицо.ИНПС,
	|	Сотрудники.ФизическоеЛицо.Пол,
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации КАК Подразделение,
	|	РаботникиОрганизацийСрезПоследних.Должность,
	|	РаботникиОрганизацийСрезПоследних.ТипСотрудника,
	|	РаботникиОрганизацийСрезПоследних.Категория,
	|	РаботникиОрганизацийСрезПоследних.ТабельныйНомер,
	|	ДанныеДляРасчетаЗПСрезПоследних.*,
	|	ДанныеДляРасчетаПНСрезПоследних.СпособРасчетаПН,
	|	СпособыОтраженияРасходовПоЗПБУСрезПоследних.СпособОтраженияРасходов КАК СпособОтраженияРасходовБУ,
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	ПриемСотрудников.Период КАК ДатаПриема,
	|	РаботникиОрганизацийСрезПоследних.НеРезидент,
	|	РаботникиОрганизацийСрезПоследних.Надомник,
	|	РаботникиОрганизацийСрезПоследних.НеУдерживатьПрофвзносы,
	|	Сотрудники.ФизическоеЛицо.ДатаРождения КАК ДатаРождения,
	|	ТарифыПоРазрядам.Тариф КАК ТарифПоРазряду,
	|	ДатыУвольнения.ДатаУвольнения
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаСведений, Организация = &Организация) КАК РаботникиОрганизацийСрезПоследних
	|		ПО Сотрудники.Ссылка = РаботникиОрганизацийСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляРасчетаЗП.СрезПоследних(&ДатаСведений, Организация = &Организация) КАК ДанныеДляРасчетаЗПСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТарифыПоРазрядамСрезПоследних.Разряд КАК Разряд,
	|				ТарифыПоРазрядамСрезПоследних.Тариф КАК Тариф
	|			ИЗ
	|				РегистрСведений.ТарифыПоРазрядам.СрезПоследних(&ДатаСведений, ) КАК ТарифыПоРазрядамСрезПоследних) КАК ТарифыПоРазрядам
	|			ПО ДанныеДляРасчетаЗПСрезПоследних.Разряд = ТарифыПоРазрядам.Разряд
	|		ПО Сотрудники.Ссылка = ДанныеДляРасчетаЗПСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляРасчетаПН.СрезПоследних(&ДатаСведений, Организация = &Организация) КАК ДанныеДляРасчетаПНСрезПоследних
	|		ПО Сотрудники.Ссылка = ДанныеДляРасчетаПНСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоЗПБУ.СрезПоследних(&ДатаСведений, Организация = &Организация) КАК СпособыОтраженияРасходовПоЗПБУСрезПоследних
	|		ПО Сотрудники.Ссылка = СпособыОтраженияРасходовПоЗПБУСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПриемСотрудников
	|		ПО Сотрудники.Ссылка = ПриемСотрудников.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РаботникиОрганизаций.Период КАК ДатаУвольнения,
	|			РаботникиОрганизаций.Сотрудник КАК Сотрудник
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ГДЕ
	|			РаботникиОрганизаций.Организация = &Организация
	|			И РаботникиОрганизаций.ПричинаИзмененияСостояния = &Увольнение) КАК ДатыУвольнения
	|		ПО Сотрудники.Ссылка = ДатыУвольнения.Сотрудник
	|ГДЕ
	|	ПриемСотрудников.ПричинаИзмененияСостояния = &ПриемНаРаботу
	|	И Сотрудники.Ссылка В(&МассивСотрудников)
	|	И ПриемСотрудников.Сотрудник В(&МассивСотрудников)";
				 
	Запрос.УстановитьПараметр("ДатаСведений",ДатаСведений);
	Запрос.УстановитьПараметр("МассивСотрудников",МассивСотрудников);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ПриемНаРаботу",Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("Увольнение",Перечисления.ПричиныИзмененияСостояния.Увольнение);
	ВыборкаСотрудников=Запрос.Выполнить().Выгрузить();
	
	Возврат ВыборкаСотрудников;
	
КонецФункции	

Функция СведенияОСотрудникахДляСписка(Расчетчик,Организация,ДатаСведений) экспорт

	Запрос=новый Запрос;
	
	Условие="";
	//Если не Расчетчик.пустая() Тогда
	//	Условие =" и Сотрудник.Расчетчик=&Расчетчик";
	//	Запрос.УстановитьПараметр("Расчетчик",Расчетчик);
	//КонецЕсли; 

	Запрос.Текст=
	"ВЫБРАТЬ
	|	РаботникиОрганизаций.Сотрудник,
	|	РаботникиОрганизаций.Период КАК ДатаПриема
	|ПОМЕСТИТЬ ДатыПриема
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.Организация = &Организация
	|	И РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботникиОрганизаций.Сотрудник,
	|	РаботникиОрганизаций.Период КАК ДатаУвольнения
	|ПОМЕСТИТЬ ДатыУвольнения
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.Организация = &Организация
	|	И РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации КАК Подразделение,
	|	РаботникиОрганизацийСрезПоследних.Должность,
	|	ДанныеДляРасчетаЗПСрезПоследних.Оклад,
	|	ДанныеДляРасчетаЗПСрезПоследних.Тариф,
	|	ДанныеДляРасчетаЗПСрезПоследних.ФормаТруда,
	|	ДанныеДляРасчетаЗПСрезПоследних.Ставка,
	|	ДанныеДляРасчетаЗПСрезПоследних.Разряд,
	|	ДанныеДляРасчетаЗПСрезПоследних.ГрафикРаботы,
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	Сотрудники.ФизическоеЛицо.ИНПС КАК ИНПС,
	|	Сотрудники.ФизическоеЛицо.ИНН КАК ИНН,
	|	Сотрудники.ФизическоеЛицо.Пол КАК Пол,
	|	Сотрудники.ФизическоеЛицо.МестоРождения КАК МестоРождения,
	|	Сотрудники.ФизическоеЛицо.Национальность КАК Национальность,
	|	Сотрудники.ФизическоеЛицо.НомерПластКарточки КАК НомерПластКарточки,
	|	Сотрудники.ФизическоеЛицо.БанкКодПластКарточки КАК БанкКодПластКарточки,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументСерия,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументНомер,
	|	ДатыПриема.ДатаПриема,
	|	ДатыУвольнения.ДатаУвольнения,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументКемВыдан,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументДатаВыдачи,
	|	ПаспортныеДанныеФизЛицСрезПоследних.ДокументВид,
	|	Сотрудники.ФизическоеЛицо.ДатаРождения КАК ДатаРождения
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаСведений, Организация = &Организация) КАК РаботникиОрганизацийСрезПоследних
	|		ПО Сотрудники.Ссылка = РаботникиОрганизацийСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляРасчетаЗП.СрезПоследних(&ДатаСведений, Организация = &Организация) КАК ДанныеДляРасчетаЗПСрезПоследних
	|		ПО Сотрудники.Ссылка = ДанныеДляРасчетаЗПСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПаспортныеДанныеФизЛиц.СрезПоследних КАК ПаспортныеДанныеФизЛицСрезПоследних
	|		ПО (ПаспортныеДанныеФизЛицСрезПоследних.ФизЛицо = Сотрудники.ФизическоеЛицо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыПриема КАК ДатыПриема
	|		ПО (ДатыПриема.Сотрудник = Сотрудники.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДатыУвольнения КАК ДатыУвольнения
	|		ПО (ДатыУвольнения.Сотрудник = Сотрудники.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыПриема
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыУвольнения";
				 
	Запрос.УстановитьПараметр("ДатаСведений",ДатаСведений);                                                          
	Запрос.УстановитьПараметр("Организация",Организация);                                                            
	ВыборкаСотрудников=Запрос.Выполнить().Выгрузить();
	
	Возврат ВыборкаСотрудников;
	
КонецФункции	

Функция СведенияОСотруднике(Сотрудник,Организация,ДатаСведений) экспорт
	
	Перем Результат;
	
	//МассивСотрудников=Новый Массив;
	//МассивСотрудников.Добавить(Сотрудник);
	//Сведения=СведенияОСотрудниках(МассивСотрудников,Организация,ДатаСведений);
	//	
	//Возврат Сведения.Найти(Сотрудник,"Сотрудник");
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Сотрудники.Наименование КАК ФИО,
	|	Сотрудники.ФизическоеЛицо.ИНН,
	|	Сотрудники.ФизическоеЛицо.ИНПС,
	|	Сотрудники.ФизическоеЛицо.Пол,
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации КАК Подразделение,
	|	РаботникиОрганизацийСрезПоследних.Должность,
	|	РаботникиОрганизацийСрезПоследних.ТипСотрудника,
	|	РаботникиОрганизацийСрезПоследних.Категория,
	|	РаботникиОрганизацийСрезПоследних.ТабельныйНомер,
	|	ДанныеДляРасчетаЗПСрезПоследних.Период,
	|	ДанныеДляРасчетаЗПСрезПоследних.Регистратор,
	|	ДанныеДляРасчетаЗПСрезПоследних.НомерСтроки,
	|	ДанныеДляРасчетаЗПСрезПоследних.Активность,
	|	ДанныеДляРасчетаЗПСрезПоследних.Сотрудник,
	|	ДанныеДляРасчетаЗПСрезПоследних.Организация,
	|	ДанныеДляРасчетаЗПСрезПоследних.Оклад,
	|	ДанныеДляРасчетаЗПСрезПоследних.Тариф,
	|	ДанныеДляРасчетаЗПСрезПоследних.ФормаТруда,
	|	ДанныеДляРасчетаЗПСрезПоследних.Ставка,
	|	ДанныеДляРасчетаЗПСрезПоследних.Разряд,
	|	ДанныеДляРасчетаЗПСрезПоследних.ГрафикРаботы,
	|	ЕСТЬNULL(ДанныеДляРасчетаЗПСрезПоследних.ВВалюте, ЛОЖЬ) КАК ВВалюте,
	|	ДанныеДляРасчетаЗПСрезПоследних.Валюта,
	|	ДанныеДляРасчетаПНСрезПоследних.Период КАК Период1,
	|	ДанныеДляРасчетаПНСрезПоследних.Регистратор КАК Регистратор1,
	|	ДанныеДляРасчетаПНСрезПоследних.НомерСтроки КАК НомерСтроки1,
	|	ДанныеДляРасчетаПНСрезПоследних.Активность КАК Активность1,
	|	ДанныеДляРасчетаПНСрезПоследних.Сотрудник КАК Сотрудник1,
	|	ДанныеДляРасчетаПНСрезПоследних.Организация КАК Организация1,
	|	ДанныеДляРасчетаПНСрезПоследних.СпособРасчетаПН,
	|	СпособыОтраженияРасходовПоЗПБУСрезПоследних.СпособОтраженияРасходов КАК СпособОтраженияРасходовБУ,
	|	Сотрудники.Ссылка КАК Сотрудник,
	|	ПриемСотрудников.Период КАК ДатаПриема,
	|	РаботникиОрганизацийСрезПоследних.НеРезидент,
	|	РаботникиОрганизацийСрезПоследних.Надомник,
	|	РаботникиОрганизацийСрезПоследних.НеУдерживатьПрофвзносы,
	|	Сотрудники.ФизическоеЛицо.ДатаРождения КАК ДатаРождения,
	|	УвольнениеСотрудников.ДатаУвольнения,
	|	УвольнениеСотрудников.ПричинаУвольнения,
	|	ТарифыПоРазрядам.Тариф КАК ТарифПоРазряду,
	|	ПроцентВыплатыНаПластиковуюКарту.Процент КАК ПроцентВыплатыНаПластиковуюКарту,
	|	РаботникиОрганизацийСрезПоследних.НеУдерживатьВПенсионныйФонд
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|				&ДатаСведений,
	|				Организация = &Организация
	|					И Сотрудник = &Сотрудник) КАК РаботникиОрганизацийСрезПоследних
	|		ПО Сотрудники.Ссылка = РаботникиОрганизацийСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляРасчетаЗП.СрезПоследних(
	|				&ДатаСведений,
	|				Организация = &Организация
	|					И Сотрудник = &Сотрудник) КАК ДанныеДляРасчетаЗПСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ТарифыПоРазрядамСрезПоследних.Разряд КАК Разряд,
	|				ТарифыПоРазрядамСрезПоследних.Тариф КАК Тариф
	|			ИЗ
	|				РегистрСведений.ТарифыПоРазрядам.СрезПоследних(&ДатаСведений, ) КАК ТарифыПоРазрядамСрезПоследних) КАК ТарифыПоРазрядам
	|			ПО ДанныеДляРасчетаЗПСрезПоследних.Разряд = ТарифыПоРазрядам.Разряд
	|		ПО Сотрудники.Ссылка = ДанныеДляРасчетаЗПСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеДляРасчетаПН.СрезПоследних(
	|				&ДатаСведений,
	|				Организация = &Организация
	|					И Сотрудник = &Сотрудник) КАК ДанныеДляРасчетаПНСрезПоследних
	|		ПО Сотрудники.Ссылка = ДанныеДляРасчетаПНСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоЗПБУ.СрезПоследних(
	|				&ДатаСведений,
	|				Организация = &Организация
	|					И Сотрудник = &Сотрудник) КАК СпособыОтраженияРасходовПоЗПБУСрезПоследних
	|		ПО Сотрудники.Ссылка = СпособыОтраженияРасходовПоЗПБУСрезПоследних.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ПриемСотрудников
	|		ПО Сотрудники.Ссылка = ПриемСотрудников.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РаботникиОрганизаций.Период КАК ДатаУвольнения,
	|			РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|			РаботникиОрганизаций.ДополнительнаяИнформация КАК ПричинаУвольнения
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ГДЕ
	|			РаботникиОрганизаций.Сотрудник = &Сотрудник
	|			И РаботникиОрганизаций.ПричинаИзмененияСостояния = &Увольнение) КАК УвольнениеСотрудников
	|		ПО Сотрудники.Ссылка = УвольнениеСотрудников.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентВыплатыНаПластиковуюКарту.СрезПоследних(&ДатаСведений, Организация = &Организация) КАК ПроцентВыплатыНаПластиковуюКарту
	|		ПО Сотрудники.Ссылка = ПроцентВыплатыНаПластиковуюКарту.Сотрудник
	|ГДЕ
	|	ПриемСотрудников.ПричинаИзмененияСостояния = &ПриемНаРаботу
	|	И Сотрудники.Ссылка = &Сотрудник";
				 
	Запрос.УстановитьПараметр("ДатаСведений",ДатаСведений);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ПриемНаРаботу",Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	Запрос.УстановитьПараметр("Увольнение",Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Выборка=Запрос.Выполнить().Выгрузить();
	
	Результат = Выборка.Найти(Сотрудник,"Сотрудник");
	
	Если Результат = Неопределено Тогда
		//Сообщить("Не найдены сведения о сотруднике " + " """ + Сотрудник + """ ");
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции
	
Функция НайтиСотрудникаПоТабельномуНомеру(ТабельныйНомер,Расчетчик=Неопределено) Экспорт
	
	Если не Константы.ФильтроватьСписокСотрудниковПоРасчетчикам.Получить()  Тогда
		Возврат Справочники.Сотрудники.НайтиПоКоду(ТабельныйНомер);
	ИначеЕсли не РольДоступна(Метаданные.Роли.ПолныеПрава) Тогда
		Элем= Справочники.Сотрудники.НайтиПоКоду(ТабельныйНомер);
		Если Элем.Расчетчик<>Расчетчик Тогда
			Возврат Справочники.Сотрудники.ПустаяСсылка();
		Иначе
			Возврат Элем;
		КонецЕсли; 
	Иначе
		Возврат Справочники.Сотрудники.НайтиПоКоду(ТабельныйНомер);
	КонецЕсли;
	
КонецФункции	

Функция КоличествоНеПолныхМесяцев(ДатаНачала,ДатаОкончания) экспорт
	
	м1=Месяц(ДатаНачала);
	м2=Месяц(ДатаОкончания);
	
	Месяцев=м2-м1;
	
	Если Месяцев<0 Тогда
		Месяцев=Месяцев+12;
	КонецЕсли; 
	
	Месяцев=Месяцев+1;
	
	Возврат Месяцев;
КонецФункции

Функция ПериодыПересекаются(Начало1,Окончание1,Начало2,Окончание2) экспорт
	
	Если Начало1>Окончание1 или Начало2>Окончание2 Тогда
		Возврат Ложь;
	КонецЕсли; 
		
	н1=Начало1;
	о1=Окончание1;
	н2=Начало2;
	о2=Окончание2;
	
	Если н1=Дата(1,1,1) Тогда
		н1=Дата(1980,1,1);
	КонецЕсли; 
	
	Если н2=Дата(1,1,1) Тогда
		н2=Дата(1980,1,1);
	КонецЕсли; 
	
	Если о1=Дата(1,1,1) Тогда
		о1=Дата(2500,1,1);
	КонецЕсли; 
	
	Если о2=Дата(1,1,1) Тогда
		о2=Дата(2500,1,1);
	КонецЕсли; 
	
	
	
	Если н1<=н2 и  н2<=о1 Тогда
		Возврат истина;
	КонецЕсли; 	
	
	Если н1<=о2 и о2<=о1 Тогда
		Возврат истина;
	КонецЕсли; 	
	
	Если н2<=н1 и  н1<=о2 Тогда
		Возврат истина;
	КонецЕсли; 	
	
	Если н2<=о1 и о1<=о2 Тогда
		Возврат истина;
	КонецЕсли; 	
	
	Возврат Ложь;
	
КонецФункции	

Функция ДолжностьСотрудника(Сотрудник,ДатаСведений) экспорт
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	РаботникиОрганизацийСрезПоследних.Должность,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонецПериода, Сотрудник=&Сотрудник) КАК РаботникиОрганизацийСрезПоследних";
	
	Запрос.УстановитьПараметр("КонецПериода",ДатаСведений+1);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	
	ДолжностиСотрудников=Запрос.Выполнить().Выгрузить();
	
	Если ДолжностиСотрудников.Количество()>0 Тогда
		Возврат ДолжностиСотрудников[0].Должность;
	Иначе
		Возврат Справочники.ДолжностиОрганизаций.ПустаяСсылка();
	КонецЕсли; 
КонецФункции	

Функция ФИОСотрудника(Сотрудник,ДатаСведений=Неопределено) экспорт
	
	Перем ПолноеИмя, Фамилия, ИмяОтчество, Имя, Отчество;
	Перем ПозицияПервогоПробела, ПозицияВторогоПробела;
	
	ПолноеИмя = Сотрудник.Наименование;
	
	ПозицияПервогоПробела = Найти(ПолноеИмя, " ");
	Если ПозицияПервогоПробела = 0 Тогда
		Возврат ПолноеИмя;
	Иначе
		Фамилия = Лев(ПолноеИмя, ПозицияПервогоПробела);
		ИмяОтчество = Сред(ПолноеИмя, ПозицияПервогоПробела+1);
		ИмяОтчество = СокрЛ(ИмяОтчество);
		Имя = Лев(ИмяОтчество, 1)+".";
		
		ПозицияВторогоПробела = Найти(ИмяОтчество, " ");
		Если ПозицияВторогоПробела = 0 Тогда
			Возврат Фамилия+Имя;
		Иначе
			Отчество = Сред(ИмяОтчество, ПозицияВторогоПробела+1);
			Отчество = СокрЛ(Отчество);
			Отчество = Лев(Отчество, 1)+".";
			Возврат Фамилия+Имя+Отчество;
		КонецЕсли;
	КонецЕсли;

	
	//Запрос=новый Запрос;
	//Запрос.Текст=
	//"ВЫБРАТЬ
	//|	ФИОСотрудниковСрезПоследних.Фамилия,
	//|	ФИОСотрудниковСрезПоследних.Имя,
	//|	ФИОСотрудниковСрезПоследних.Отчество
	//|ИЗ
	//|	РегистрСведений.ФИОСотрудников.СрезПоследних(&КонецПериода, Сотрудник = &Сотрудник) КАК ФИОСотрудниковСрезПоследних";
	//
	//Запрос.УстановитьПараметр("КонецПериода",ДатаСведений+1);
	//Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	//
	//ФИОСотрудников=Запрос.Выполнить().Выгрузить();
	//Если ФИОСотрудников.Количество()>0 Тогда
	//	Возврат ПолучитьФамилиюИмяОтчество(ФИОСотрудников[0].Фамилия,ФИОСотрудников[0].Имя,ФИОСотрудников[0].Отчество);
	//Иначе
	//	Возврат Сотрудник.Наименование;
	//КонецЕсли; 
КонецФункции	

Функция ПодразделениеСотрудника(Сотрудник, ДатаСведений) экспорт
	
	Срез=РегистрыСведений.РаботникиОрганизаций.СрезПоследних(ДатаСведений,Новый Структура("Сотрудник",Сотрудник));
	
	Если Срез.Количество()>0 Тогда
		Возврат Срез[0].ПодразделениеОрганизации;
	Иначе
		Возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции
	
Функция ВходитВГруппуНачислений(Начисление,ГруппаНачислений) экспорт
	
	Строка=ГруппаНачислений.Расчеты.Найти(Начисление);
	Если Строка=неопределено Тогда
		Возврат ложь;
	Иначе
		Возврат истина;
	КонецЕсли; 
	
КонецФункции	

Функция ВходитВГруппуУдержаний(Удержание,ГруппаУдержаний) экспорт
	
	Строка=ГруппаУдержаний.Расчеты.Найти(Удержание);
	Если Строка=неопределено Тогда
		Возврат ложь;
	Иначе
		Возврат истина;
	КонецЕсли; 
	
КонецФункции	

Функция ПолучитьПодразделенияИСпособыОтраженияРасходов(НачалоСреза,КонецСреза,Сотрудник=неопределено,МассивСотрудников=неопределено) экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ПРЕДСТАВЛЕНИЕ(РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации),
	|	СпособыОтраженияРасходовПоЗПБУСрезПоследних.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияРасходовПоЗПБУСрезПоследних.СпособОтраженияРасходов),
	|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|	ПРЕДСТАВЛЕНИЕ(РаботникиОрганизацийСрезПоследних.Сотрудник),
	|	РаботникиОрганизацийСрезПоследних.Период КАК Период,
	|	0 КАК НомерРегистра
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&НачалоСреза, ) КАК РаботникиОрганизацийСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоЗПБУ.СрезПоследних(&НачалоСреза, ) КАК СпособыОтраженияРасходовПоЗПБУСрезПоследних
	|		ПО РаботникиОрганизацийСрезПоследних.Сотрудник = СпособыОтраженияРасходовПоЗПБУСрезПоследних.Сотрудник
	|			И РаботникиОрганизацийСрезПоследних.Сотрудник = СпособыОтраженияРасходовПоЗПБУСрезПоследних.Сотрудник
	|ГДЕ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник В(&СписокСотрудников)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РаботникиОрганизаций.ПодразделениеОрганизации,
	|	ПРЕДСТАВЛЕНИЕ(РаботникиОрганизаций.ПодразделениеОрганизации),
	|	СпособыОтраженияРасходовПоЗПБУ.СпособОтраженияРасходов,
	|	ПРЕДСТАВЛЕНИЕ(СпособыОтраженияРасходовПоЗПБУ.СпособОтраженияРасходов),
	|	РаботникиОрганизаций.Сотрудник,
	|	ПРЕДСТАВЛЕНИЕ(РаботникиОрганизаций.Сотрудник),
	|	РаботникиОрганизаций.Период,
	|	1
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоЗПБУ КАК СпособыОтраженияРасходовПоЗПБУ
	|		ПО РаботникиОрганизаций.Сотрудник = СпособыОтраженияРасходовПоЗПБУ.Сотрудник
	|			И РаботникиОрганизаций.Организация = СпособыОтраженияРасходовПоЗПБУ.Организация
	|			И РаботникиОрганизаций.Период = СпособыОтраженияРасходовПоЗПБУ.Период
	|ГДЕ
	|	РаботникиОрганизаций.Период МЕЖДУ &НачалоСреза И &КонецСреза
	|	И СпособыОтраженияРасходовПоЗПБУ.Период МЕЖДУ &НачалоСреза И &КонецСреза
	|	И РаботникиОрганизаций.Сотрудник В(&СписокСотрудников)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Период,
	|	ПодразделениеОрганизации,
	|	СпособОтраженияРасходов,
	|	НомерРегистра";
	
	Запрос.УстановитьПараметр("НачалоСреза", НачалоСреза);
	Запрос.УстановитьПараметр("КонецСреза",КонецСреза);
	
	Если МассивСотрудников<>Неопределено Тогда
		Запрос.УстановитьПараметр("СписокСотрудников", МассивСотрудников);
	Иначе
		МассивСотрудников=новый Массив;
		МассивСотрудников.Добавить(Сотрудник);
		Запрос.УстановитьПараметр("СписокСотрудников", МассивСотрудников);
	КонецЕсли; 
	
	Возврат Запрос.Выполнить().Выгрузить();
	
Конецфункции		

Функция ПолучитьМассивСотрудниковУКоторыхБылиПереводы(НачалоСреза,КонецСреза,МассивСотрудников=неопределено) экспорт
	Запрос=новый Запрос;
	Условие="";
	Если МассивСотрудников<>Неопределено Тогда
		Запрос.УстановитьПараметр("МассивСотрудников",МассивСотрудников);
		Условие=" И РаботникиОрганизаций.Сотрудник В (&МассивСотрудников) ";
	КонецЕсли; 
	Запрос.Текст=
	"ВЫБРАТЬ
	|	РаботникиОрганизаций.Сотрудник,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РаботникиОрганизаций.ПодразделениеОрганизации) КАК ПодразделениеОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РаботникиОрганизаций.Активность
	|"+Условие+"
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизаций.Сотрудник";
	Запрос.УстановитьПараметр("НачалоПериода",НачалоСреза);
	Запрос.УстановитьПараметр("КонецПериода",КонецСреза);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	
КонецФункции	

Функция БлижайшаяДатаПоМесяцу(Месяц,НекаяДата) Экспорт    
	Если Месяц=0 Тогда
		Возврат Дата(1,1,1);
	КонецЕсли;  
	
	год=год(НекаяДата);
	
	д=новый Массив;
	д.Добавить(Дата(год-1,Месяц,1));
	д.Добавить(Дата(год,Месяц,1));
	д.Добавить(Дата(год+1,Месяц,1));           
	
	МинРазница=9999999999;  
	к=0; 
	з=0;
	для н=1 по 3 Цикл 
		з=д[н-1]-НекаяДата;
		Если з<0 Тогда
			з=з*(-1);
		КонецЕсли;
		
		Если з<МинРазница Тогда
			МинРазница=з;
			к=н;
		КонецЕсли;
	КонецЦикла;
	
	Если к<>0 Тогда
		Возврат д[к-1];
	КонецЕсли;        
	
	Возврат Дата(1,1,1);
	
КонецФункции
	
Функция КоэффициентДоплаты(Сотрудник,НекаяДата,Организация)  Экспорт
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ДанныеДляРасчетаЗПСрезПоследних.КоэффициентКТарифу
	|ИЗ
	|	РегистрСведений.ДанныеДляРасчетаЗП.СрезПоследних(
	|			&ДатаСреза,
	|			Организация = &Организация
	|				И Сотрудник = &Сотрудник) КАК ДанныеДляРасчетаЗПСрезПоследних";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("ДатаСреза",НекаяДата);
	
	тз=Запрос.Выполнить().Выгрузить();
	
	Если тз.Количество()>0 Тогда
	
		КоэффициентКТарифу=тз[0].КоэффициентКТарифу;
		
	Иначе
		
		Возврат 1;
		
	КонецЕсли; 
	
	Если ЗначениеНеЗаполнено(КоэффициентКТарифу) Тогда
		Возврат 1;
	Иначе
		
		Запрос=новый Запрос;
		Запрос.Текст=
		"ВЫБРАТЬ
		|	СтавкиКоэффициентовКТарифуСрезПоследних.Коэффициент,
		|	СтавкиКоэффициентовКТарифуСрезПоследних.КоэффициентПоКонтракту
		|ИЗ
		|	РегистрСведений.СтавкиКоэффициентовКТарифу.СрезПоследних(&ДатаСреза, КоэффициентКТарифу = &КоэффициентКТарифу) КАК СтавкиКоэффициентовКТарифуСрезПоследних";
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
		Запрос.УстановитьПараметр("ДатаСреза",НекаяДата);
		Запрос.УстановитьПараметр("КоэффициентКТарифу",КоэффициентКТарифу);
	
		тз=Запрос.Выполнить().Выгрузить();
		
		Если тз.Количество()>0 Тогда
		
			Коэффициенты=тз[0];
			
			Если Сотрудник.ДатаОкончанияКонтракта<>Дата(1,1,1) Тогда
				Если Сотрудник.ДатаОкончанияКонтракта>=НекаяДата Тогда
					Возврат Коэффициенты.КоэффициентПоКонтракту;
					
				КонецЕсли;
			КонецЕсли;
			Возврат Коэффициенты.Коэффициент;
			
		Иначе	
			Возврат 1;
		КонецЕсли; 
	
	КонецЕсли; 
	
КонецФункции

Функция Тариф(Сотрудник,НекаяДата,Организация) Экспорт
	перем Тариф,Ставка;     
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ДанныеДляРасчетаЗПСрезПоследних.Ставка,
	|	ДанныеДляРасчетаЗПСрезПоследних.Разряд,
	|	ДанныеДляРасчетаЗПСрезПоследних.Тариф,
	|	ДанныеДляРасчетаЗПСрезПоследних.ВВалюте,
	|	ДанныеДляРасчетаЗПСрезПоследних.Валюта
	|ИЗ
	|	РегистрСведений.ДанныеДляРасчетаЗП.СрезПоследних(
	|			&ДатаСреза,
	|			Организация = &Организация
	|				И Сотрудник = &Сотрудник) КАК ДанныеДляРасчетаЗПСрезПоследних";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("ДатаСреза",НекаяДата);
	
	тз=Запрос.Выполнить().Выгрузить();
	
	Если тз.Количество()>0 Тогда
		
		Значения=тз[0];
		
		Ставка=Значения.Ставка;
		
		Если Ставка=0 Тогда
			Ставка=1;
		КонецЕсли;
		
		Тариф = Значения.Тариф*Ставка;
		
		Если Тариф = 0 Тогда
			
			Запрос=новый Запрос;
			Запрос.Текст=
			"ВЫБРАТЬ
			|	ТарифыПоРазрядамСрезПоследних.Тариф
			|ИЗ
			|	РегистрСведений.ТарифыПоРазрядам.СрезПоследних(&ДатаСреза, Разряд = &Разряд) КАК ТарифыПоРазрядамСрезПоследних";
			Запрос.УстановитьПараметр("ДатаСреза",НекаяДата);
			Запрос.УстановитьПараметр("Разряд",Значения.Разряд);
			
			Выборка=Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				Тариф = Выборка.Тариф*Ставка;
			Иначе
				Возврат 0;
			КонецЕсли; 
		КонецЕсли;
		
		Если Значения.ВВалюте Тогда
			
			Курс=ПолучитьКурсВалюты(Значения.Валюта,НекаяДата);
			Тариф=Тариф*Курс.Курс;
			
		КонецЕсли;
		
		Возврат Тариф;
	Иначе
		Возврат 0;
	КонецЕсли; 
КонецФункции

Функция Оклад(Сотрудник,НекаяДата,Организация) Экспорт
	перем Оклад,Ставка;     
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ДанныеДляРасчетаЗПСрезПоследних.Ставка,
	|	ДанныеДляРасчетаЗПСрезПоследних.Оклад,
	|	ДанныеДляРасчетаЗПСрезПоследних.ВВалюте,
	|	ДанныеДляРасчетаЗПСрезПоследних.Валюта
	|ИЗ
	|	РегистрСведений.ДанныеДляРасчетаЗП.СрезПоследних(
	|			&ДатаСреза,
	|			Организация = &Организация
	|				И Сотрудник = &Сотрудник) КАК ДанныеДляРасчетаЗПСрезПоследних";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("ДатаСреза",НекаяДата);
	
	тз=Запрос.Выполнить().Выгрузить();
	
	Если тз.Количество()>0 Тогда
		
		Значения=тз[0];
		
		Ставка=Значения.Ставка;
		
		Если Ставка=0 Тогда
			Ставка=1;
		КонецЕсли;
		
		Оклад = Значения.Оклад*Ставка;
		
		Если Значения.ВВалюте Тогда
			
			Курс=ПолучитьКурсВалюты(Значения.Валюта,НекаяДата);
			Оклад=Оклад*Курс.Курс;
			
		КонецЕсли;
		
		Возврат Оклад;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция ЗаЧас(Сотрудник,НекаяДата,Организация) Экспорт
	Перем зч;
	
	зч=0;
	Если зч=0 Тогда
		зч=Оклад(Сотрудник,НекаяДата,Организация);
		
		СведенияОСотруднике=СведенияОСотруднике(Сотрудник,Организация,НекаяДата);
		
		Часов=0;
		Если СведенияОСотруднике<>неопределено Тогда
			Календарь=КалендарьПоГрафику(СведенияОСотруднике.ГрафикРаботы,НачалоМесяца(НекаяДата),КонецМесяца(НекаяДата));	
			Часов=Календарь.Итог("Часы");
		КонецЕсли;	

		Если Часов<>0 Тогда
			зч=зч / Часов;
		иначе
			зч=0;
		КонецЕсли;
		
	КонецЕсли;
	Возврат зч;
КонецФункции

Функция АдресПропискиФизическогоЛица(ФизЛицо) Экспорт
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Объект", ФизЛицо);
	Запрос.УстановитьПараметр("Тип"   , Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("Вид"   , Справочники.ВидыКонтактнойИнформации.ЮрАдресФизЛица);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "";
	Иначе
		Возврат РезультатЗапроса.Выгрузить()[0].Представление;
	КонецЕсли;
	

КонецФункции // ()
 
функция ВходитВПодразделение(организация,Сотрудник,подразделение,нтп,ктп) экспорт
	//перем пер;  
	
	СрезПоследних=РегистрыСведений.РаботникиОрганизаций.СрезПоследних(ктп,Новый Структура("Организация,Сотрудник",организация,Сотрудник));
	
	Если СрезПоследних.Количество()>0 Тогда
		Если СрезПоследних[0].ПодразделениеОрганизации=подразделение Тогда
			Возврат Истина;	
		КонецЕсли; 
	КонецЕсли;
	
	СрезПоследних=РегистрыСведений.РаботникиОрганизаций.СрезПоследних(нтп,Новый Структура("Организация,Сотрудник",организация,Сотрудник));
	
	Если СрезПоследних.Количество()>0 Тогда
		Если СрезПоследних[0].ПодразделениеОрганизации=подразделение Тогда
			Возврат Истина;	
		КонецЕсли; 
	КонецЕсли;
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	РаботникиОрганизаций.ПодразделениеОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.Организация = &Организация
	|	И РаботникиОрганизаций.Сотрудник = &Сотрудник
	|	И РаботникиОрганизаций.Период МЕЖДУ &нтп И &ктп";
	
	Запрос.УстановитьПараметр("организация",организация);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("нтп",нтп);
	Запрос.УстановитьПараметр("ктп",ктп);
	
	тз=Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТз Из Тз Цикл
		
		Если СтрокаТз.ПодразделениеОрганизации=Подразделение Тогда
			Возврат Истина;		
		КонецЕсли; 
	
	КонецЦикла; 
	
	
	возврат Ложь;
	
КонецФункции
 
функция НайтиДатуНахожденияСотрудникаВПодразделении(Организация,Сотрудник,Подразделение,нтп,ктп) экспорт
	//перем пер;  
	
	СрезПоследних=РегистрыСведений.РаботникиОрганизаций.СрезПоследних(ктп,Новый Структура("Организация,Сотрудник",организация,Сотрудник));
	
	Если СрезПоследних.Количество()=0 Тогда
		Возврат ложь;	
	КонецЕсли;
	
	Если СрезПоследних[0].ПодразделениеОрганизации=подразделение Тогда
		Возврат ктп;	
	КонецЕсли; 
	
	СрезПоследних=РегистрыСведений.РаботникиОрганизаций.СрезПоследних(нтп,Новый Структура("Организация,Сотрудник",организация,Сотрудник));
	
	Если СрезПоследних[0].ПодразделениеОрганизации=подразделение Тогда
		Возврат нтп;	
	КонецЕсли; 
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	РаботникиОрганизаций.ПодразделениеОрганизации,
	|	РаботникиОрганизаций.Период
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|ГДЕ
	|	РаботникиОрганизаций.Организация = &Организация
	|	И РаботникиОрганизаций.Сотрудник = &Сотрудник
	|	И РаботникиОрганизаций.Период МЕЖДУ &нтп И &ктп";
	
	Запрос.УстановитьПараметр("организация",организация);
	Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
	Запрос.УстановитьПараметр("нтп",нтп);
	Запрос.УстановитьПараметр("ктп",ктп);
	
	тз=Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТз Из Тз Цикл
		
		Если СтрокаТз.ПодразделениеОрганизации=Подразделение Тогда
			Возврат СтрокаТз.Период;		
		КонецЕсли; 
	
	КонецЦикла; 
	
	
	возврат дата(1,1,1);
	
КонецФункции

Функция ВключатьВСписок(организация,Сотрудник,Подразделение,нтп,ктп) экспорт
	Если Сотрудник.ЭтоГруппа Тогда
		возврат ложь;
	КонецЕсли;
	Если Сотрудник.ПометкаУдаления Тогда
		возврат ложь;
	КонецЕсли;
	Если не ЗначениеНеЗаполнено(Подразделение) Тогда
		Если не ВходитВПодразделение(организация,Сотрудник,Подразделение,нтп,ктп) Тогда
			возврат ложь;
		КонецЕсли;
	КонецЕсли;
	
	//Если Сотр.ДатаПриема <> Дата(0) Тогда
	//	Если Сотр.ДатаПриема > КТП Тогда
	//		возврат 0;
	//	КонецЕсли;     
	//Иначе
	//	//Возврат 0;
	//КонецЕсли;
	//Если Сотр.ДатаУвольнения <> Дата(0) Тогда
	//	Если Сотр.ДатаУвольнения < НТП Тогда
	//		возврат 0;
	//	КонецЕсли;
	//КонецЕсли;
	
	возврат истина;
КонецФункции

Функция ПолучитьВыборкуДляРасчетаСальдо(Организация,ПериодРегистрации,Сотрудник=Неопределено,МассивСотрудников=Неопределено) Экспорт

	Запрос=новый Запрос;
		
	Условие1="";
	Условие2="";
	Условие3="";
	Если Сотрудник<>Неопределено Тогда
		Запрос.УстановитьПараметр("Сотрудник",Сотрудник);
		Условие1=" и Начисления.Сотрудник = &Сотрудник ";
		Условие2=" и Удержания.Сотрудник = &Сотрудник ";
		Условие3=" и Сальдо.Сотрудник = &Сотрудник ";
	КонецЕсли; 
	Если МассивСотрудников<>Неопределено Тогда
		Запрос.УстановитьПараметр("МассивСотрудников",МассивСотрудников);
		Условие1=" и Начисления.Сотрудник В (&МассивСотрудников) ";
		Условие2=" и Удержания.Сотрудник В (&МассивСотрудников) ";
		Условие3=" и Сальдо.Сотрудник В (&МассивСотрудников) ";
	КонецЕсли; 
		
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Начисления.Сотрудник КАК Сотрудник,
	|	Начисления.ВидРасчета,
	|	Начисления.Результат КАК Результат,
	|	Начисления.ВидРасчета.Код КАК КодВидаРасчета,
	|	Начисления.СправочникОснование КАК СправочникОснование,
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета В (&ВсеНачисления)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Начисление,
	|	ЛОЖЬ КАК Удержание,
	|	Начисления.Дни,
	|	Начисления.Часы,
	|	Начисления.ДатаНачала
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Организация = &Организация
	|	И Начисления.Активность
	|	И Начисления.ПериодРегистрации = &ПериодРегистрации
	| "+Условие1+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Удержания.Сотрудник,
	|	Удержания.ВидРасчета,
	|	Удержания.Результат,
	|	Удержания.ВидРасчета.Код,
	|	Удержания.СправочникОснование,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА Удержания.ВидРасчета В (&ВсеУдержания)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	0,
	|	0,
	|	Удержания.ДатаНачала
	|ИЗ
	|	РегистрРасчета.Удержания КАК Удержания
	|ГДЕ
	|	Удержания.Активность
	|	И Удержания.ПериодРегистрации = &ПериодРегистрации
	|	И Удержания.Организация = &Организация
	| "+Условие2+"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Сальдо.Сотрудник,
	|	Сальдо.ВидРасчета,
	|	Сальдо.Результат,
	|	Сальдо.ВидРасчета.Код,
	|	0,
	|	ЛОЖЬ,
	|	ЛОЖЬ,
	|	0,
	|	0,
	|	NULL
	|ИЗ
	|	РегистрРасчета.Сальдо КАК Сальдо
	|ГДЕ
	|	Сальдо.ПериодРегистрации = &ПериодРегистрации
	|	И Сальдо.Активность
	| "+Условие3+"
	|	И Сальдо.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВсеНачисления",Справочники.ГруппыНачислений.ВсеНачисления.Расчеты.ВыгрузитьКолонку("ВидРасчета"));
	Запрос.УстановитьПараметр("ВсеУдержания",Справочники.ГруппыУдержаний.ВсеУдержания.Расчеты.ВыгрузитьКолонку("ВидРасчета"));
	Запрос.УстановитьПараметр("ПериодРегистрации",ПериодРегистрации);
	
	возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ()
 
Функция РассчитатьСальдо(Выборка,Сальдо,Пенсия,ПенсияПМ,Оставлено) Экспорт
		
		Сальдо =0;
		Пенсия=0;
		ПенсияПМ=0;     
		Оставлено=0;
		
		Для к=1 По Выборка.Количество() Цикл
			
			Код=сокрлп(Выборка[к-1].КодВидаРасчета);
			ВР=Выборка[к-1].ВидРасчета;
			
			Если Выборка[к-1].Начисление тогда 
				Если ВходитВГруппуНачислений(ВР,Справочники.ГруппыНачислений.Пенсии) тогда 
					Пенсия=Пенсия+Выборка[к-1].Результат;  
				Иначе
					Сальдо=Сальдо+Выборка[к-1].Результат;    
				КонецЕсли;	
			ИначеЕсли Выборка[к-1].Удержание Тогда 
				Если Код="211" Тогда
					Если Не ЗначениеНеЗаполнено(Выборка[к-1].СправочникОснование) Тогда
						Если Выборка[к-1].СправочникОснование.Вид=Перечисления.ВидДляУдержанийВСбербанк.Пенсия Тогда
							Пенсия=Пенсия-Выборка[к-1].Результат;		    
						Иначе	
							Сальдо=Сальдо-Выборка[к-1].Результат;	
						КонецЕсли;
					Иначе
						Сальдо=Сальдо-Выборка[к-1].Результат;
					КонецЕсли;
				Иначе
					Сальдо=Сальдо-Выборка[к-1].Результат;
				КонецЕсли;
				
			ИначеЕсли Код="503" Тогда
				Сальдо=Сальдо+Выборка[к-1].Результат;
			ИначеЕсли Код="505" Тогда
				Сальдо=Сальдо-Выборка[к-1].Результат;
			ИначеЕсли Код="503п" Тогда
				Пенсия=Пенсия+Выборка[к-1].Результат;
			ИначеЕсли Код="505п" Тогда
				Пенсия=Пенсия-Выборка[к-1].Результат;
			ИначеЕсли Код="506" Тогда
				Оставлено=Оставлено+Выборка[к-1].Результат;
			ИначеЕсли Код="506п" Тогда
				//ОставленоП=ОставленоП+Выборка[к-1].Результат;
			ИначеЕсли ВходитВГруппуУдержаний(ВР,Справочники.ГруппыУдержаний.Выплаты) Тогда
				Если Код="400" Тогда
					Пенсия=Пенсия-Выборка[к-1].Результат; 
				Иначе
					Сальдо=Сальдо-Выборка[к-1].Результат;
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
		
		Если Пенсия<0 Тогда
			Сальдо=Сальдо+Пенсия;
			Пенсия=0;
		КонецЕсли;
		
		Если ПенсияПМ<0 Тогда
			Сальдо=Сальдо+ПенсияПМ;
			ПенсияПМ=0;
		КонецЕсли;
		
	КонецФункции

Функция РассчитатьСальдоДляВедомостей(Выборка,Сальдо,Пенсия,ПенсияПМ,Оставлено,ОставленоП,ДопЗП) Экспорт
		
		Сальдо =0;
		Пенсия=0;
		ПенсияПМ=0;     
		Оставлено=0;
		ОставленоП=0;
		
		Для к=1 По Выборка.Количество() Цикл
			
			Код=сокрлп(Выборка[к-1].КодВидаРасчета);
			ВР=Выборка[к-1].ВидРасчета;
			
			Если Выборка[к-1].Начисление тогда 
				Если ВходитВГруппуНачислений(ВР,Справочники.ГруппыНачислений.Пенсии) тогда 
					Пенсия=Пенсия+Выборка[к-1].Результат;  
				Иначе
					//Сальдо=Сальдо+Выборка[к-1].Результат;  
					
					Если Код="008" Тогда   
						ДопЗП=ДопЗп+окр(Выборка[к-1].Результат*0.75);
						Сальдо=Сальдо+Выборка[к-1].Результат-окр(Выборка[к-1].Результат*0.75);
					Иначе	
						Сальдо=Сальдо+Выборка[к-1].Результат; 
					КонецЕсли;	
				КонецЕсли;	
					
			ИначеЕсли Выборка[к-1].Удержание Тогда 
				Если Код="211" Тогда
					Если Не ЗначениеНеЗаполнено(Выборка[к-1].СправочникОснование) Тогда
						Если Выборка[к-1].СправочникОснование.Вид=Перечисления.ВидДляУдержанийВСбербанк.Пенсия Тогда
							Пенсия=Пенсия-Выборка[к-1].Результат;		    
						Иначе	
							Сальдо=Сальдо-Выборка[к-1].Результат;	
						КонецЕсли;
					Иначе
						Сальдо=Сальдо-Выборка[к-1].Результат;
					КонецЕсли;
				Иначе
					Сальдо=Сальдо-Выборка[к-1].Результат;
				КонецЕсли;
				
			ИначеЕсли Код="503" Тогда
				Сальдо=Сальдо+Выборка[к-1].Результат;
			ИначеЕсли Код="505" Тогда
				Сальдо=Сальдо-Выборка[к-1].Результат;
			ИначеЕсли Код="503п" Тогда
				Пенсия=Пенсия+Выборка[к-1].Результат;
			ИначеЕсли Код="505п" Тогда
				Пенсия=Пенсия-Выборка[к-1].Результат;
			ИначеЕсли Код="506" Тогда
				Оставлено=Оставлено+Выборка[к-1].Результат;
			ИначеЕсли Код="506п" Тогда
				ОставленоП=ОставленоП+Выборка[к-1].Результат;
			ИначеЕсли ВходитВГруппуУдержаний(ВР,Справочники.ГруппыУдержаний.Выплаты) Тогда
				Если Код="400" Тогда
					Пенсия=Пенсия-Выборка[к-1].Результат; 
				Иначе
					Сальдо=Сальдо-Выборка[к-1].Результат;
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
		
		Если Пенсия<0 Тогда
			Сальдо=Сальдо+Пенсия;
			Пенсия=0;
		КонецЕсли;
		
		Если ПенсияПМ<0 Тогда
			Сальдо=Сальдо+ПенсияПМ;
			ПенсияПМ=0;
		КонецЕсли;
		
	КонецФункции

Функция РассчитатьСуммуНаПластиковуюКарточку(СведенияОСотруднике,СведенияОШкале,НекаяДата,СуммаКВыплате) Экспорт    
	
	СуммаПК=0;      
	
	СуммаДепонент=0;
	Если СведенияОСотруднике<>Неопределено Тогда
		Если не ЗначениеНеЗаполнено(СведенияОСотруднике.ДатаУвольнения) Тогда
			Если СведенияОСотруднике.ДатаУвольнения<=КонецМесяца(НекаяДата) Тогда
				Возврат 0;
			КонецЕсли;	
		КонецЕсли;	  
		
		Если СведенияОСотруднике.НеУдерживатьНаПК тогда
			Возврат 0;
		КонецЕсли;	
		
		//ЖРДляМодулей.ВыбратьПериодПоОбъекту(Сотрудник,НекаяДата);
		//Пока ЖРДляМодулей.ПолучитьЗапись()=1 Цикл
		//	Если ЖРДляМодулей.ВидРасч=ВидРасчета.р600 Тогда   
		//		СуммаДепонент=СуммаДепонент+ЖРДляМодулей.Результат;
		//	КонецЕсли;	
		//КонецЦикла;	
		
	КонецЕсли;
	

	Для каждого СтрокаСведений Из СведенияОШкале Цикл
	
		Если (СуммаКВыплате-СуммаДепонент)<=СтрокаСведений.Сумма Тогда
			СуммаПК=(СуммаКВыплате-СуммаДепонент)*СтрокаСведений.Ставка/100; 
			Прервать;
		КонецЕсли;	
		
	КонецЦикла;
	
	СуммаНаРуки= СуммаКВыплате-СуммаДепонент-СуммаПК;
	
	СуммаНаРуки =цел(СуммаНаРуки/1000)*1000;
	
	СуммаПК = СуммаКВыплате-СуммаДепонент-СуммаНаРуки;
	
	
	Возврат окр(СуммаПК,0);
	
КонецФункции  

Функция ПолучитьСписокРаботающихСотрудников(Организация,ДатаСреза,Подразделение=Неопределено) Экспорт
	
	Запрос=новый Запрос;
	
	Условие="";
	
	Если Подразделение<>Неопределено Тогда
	
		Условие=" И РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации = &Подразделение ";
		Запрос.УстановитьПараметр("Подразделение",Подразделение);
	
	КонецЕсли; 
		
	Запрос.Текст=
	"ВЫБРАТЬ
	|	РаботникиОрганизацийСрезПоследних.Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации КАК Подразделение,
	|	РаботникиОрганизацийСрезПоследних.Должность,
	|	РаботникиОрганизацийСрезПоследних.ТипСотрудника,
	|	РаботникиОрганизацийСрезПоследних.Категория,
	|	РаботникиОрганизацийСрезПоследних.НеРезидент,
	|	РаботникиОрганизацийСрезПоследних.Надомник,
	|	РаботникиОрганизацийСрезПоследних.НеУдерживатьПрофвзносы,
	|	ДатаУвольнений.ДатаУвольнения,
	|	ДатыПриема.ДатаПриема,
	|	ДанныеДляРасчета.Оклад,
	|	ДанныеДляРасчета.ВВалюте,
	|	ДанныеДляРасчета.Валюта,
	|	ДанныеДляРасчета.Тариф,
	|	ДанныеДляРасчета.ФормаТруда,
	|	ДанныеДляРасчета.Ставка,
	|	ДанныеДляРасчета.Разряд,
	|	ДанныеДляРасчета.ГрафикРаботы,
	|	ЕстьNull(ПроцентВыплатыНаПластиковуюКарту.Процент, 0) КАК ПроцентВыплатыНаПластиковуюКарту
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК РаботникиОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|			РаботникиОрганизаций.Период КАК ДатаУвольнения
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ГДЕ
	|			РаботникиОрганизаций.Активность
	|			И РаботникиОрганизаций.Организация = &Организация
	|			И РаботникиОрганизаций.ПричинаИзмененияСостояния = &Увольнение) КАК ДатаУвольнений
	|		ПО РаботникиОрганизацийСрезПоследних.Сотрудник = ДатаУвольнений.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|			РаботникиОрганизаций.Период КАК ДатаПриема
	|		ИЗ
	|			РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ГДЕ
	|			РаботникиОрганизаций.Активность
	|			И РаботникиОрганизаций.Организация = &Организация
	|			И РаботникиОрганизаций.ПричинаИзмененияСостояния = &Прием) КАК ДатыПриема
	|		ПО РаботникиОрганизацийСрезПоследних.Сотрудник = ДатыПриема.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДанныеДляРасчетаЗПСрезПоследних.*
	|		ИЗ
	|			РегистрСведений.ДанныеДляРасчетаЗП.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК ДанныеДляРасчетаЗПСрезПоследних) КАК ДанныеДляРасчета
	|		ПО РаботникиОрганизацийСрезПоследних.Сотрудник = ДанныеДляРасчета.Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПроцентВыплатыНаПластиковуюКарту.СрезПоследних(&ДатаСреза, Организация = &Организация) КАК ПроцентВыплатыНаПластиковуюКарту
	|		ПО РаботникиОрганизацийСрезПоследних.Сотрудник = ПроцентВыплатыНаПластиковуюКарту.Сотрудник
	|ГДЕ
	|	ДатыПриема.ДатаПриема <= &ДатаСреза
	|	И (ДатаУвольнений.ДатаУвольнения ЕСТЬ NULL 
	|			ИЛИ (НЕ ДатаУвольнений.ДатаУвольнения ЕСТЬ NULL )
	|				И ДатаУвольнений.ДатаУвольнения >= &НачалоМесяца)"+Условие +"
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Код";    // "+Условие +"
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("НачалоМесяца",НачалоМесяца(ДатаСреза));
	Запрос.УстановитьПараметр("ДатаСреза",ДатаСреза);
	Запрос.УстановитьПараметр("Увольнение",Перечисления.ПричиныИзмененияСостояния.Увольнение);
	Запрос.УстановитьПараметр("Прием",Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

Функция ПолучитьСписокУволенныхПенсионеров(Организация, ДатаСреза) Экспорт
	
	Запрос = Новый запрос ;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сотрудники.Ссылка КАК Сотрудник,
	               |	Сотрудники.Код,
	               |	ДатыПриема.Период КАК ДатаПриема,
	               |	ДатыУвольнения.Период КАК ДатаУвольнения
	               |ИЗ
	               |	Справочник.Сотрудники КАК Сотрудники
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПенсионерахОрганизации.СрезПоследних(&Период, Организация = &Организация) КАК СведенияОПенсионерахОрганизацииСрезПоследних
	               |		ПО Сотрудники.ФизическоеЛицо = СведенияОПенсионерахОрганизацииСрезПоследних.Физлицо
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	               |			РаботникиОрганизацийСрезПоследних.Период КАК Период
	               |		ИЗ
	               |			РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиОрганизацийСрезПоследних) КАК ДатыУвольнения
	               |		ПО Сотрудники.Ссылка = ДатыУвольнения.Сотрудник
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	               |			РаботникиОрганизацийСрезПоследних.Период КАК Период
	               |		ИЗ
	               |			РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)) КАК РаботникиОрганизацийСрезПоследних) КАК ДатыПриема
	               |		ПО Сотрудники.Ссылка = ДатыПриема.Сотрудник
	               |ГДЕ
	               |	Сотрудники.Организация = &Организация
	               |	И (НЕ Сотрудники.ПометкаУдаления)
	               |	И СведенияОПенсионерахОрганизацииСрезПоследних.Пенсионер
	               |	И (ВЫБОР
	               |				КОГДА ЕСТЬNULL(ДатыУвольнения.Период, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЕСТЬNULL(ДатыУвольнения.Период, ДАТАВРЕМЯ(1, 1, 1)) < &Период
	               |			КОНЕЦ
	               |			ИЛИ ЕСТЬNULL(ДатыПриема.Период, ДАТАВРЕМЯ(1, 1, 1)) = ДАТАВРЕМЯ(1, 1, 1))";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Период", ДатаСреза);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции	

Функция ПолучитьМинРазмерЕСП(Организация,Период, ГрафикРаботыОсновной ) Экспорт
	
	Запрос = Новый	Запрос ;
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("МРОТЗаМесяц",ПолучитьМРОТЗаМесяц(Период));
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Период));
	Запрос.УстановитьПараметр("ГрафикРаботыОсновной",ГрафикРаботыОсновной);
	Запрос.УстановитьПараметр("ВидУчетаВремени", Перечисления.ВидыУчетаВремени.ПоДням);
	Запрос.УстановитьПараметр("ПричинаИзмененияСостоянияУвольнение", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	
	РежимРасчетаРабочегоВремени=Константы.РежимРасчетаРабочегоВремени.Получить();
	
	Если РежимРасчетаРабочегоВремени=Перечисления.РежимыРасчетаРабочегоВремени.Ручной Тогда
		ТекстДФ = 
		"ВЫБРАТЬ
		|	ТабельУчетаРабочегоВремениРабочееВремя.Сотрудник КАК Сотрудник,
		|	СУММА(ТабельУчетаРабочегоВремениРабочееВремя.Дни + ТабельУчетаРабочегоВремениРабочееВремя.ДниО + ТабельУчетаРабочегоВремениРабочееВремя.ДниБ) КАК ДнейФакт
		|ПОМЕСТИТЬ ВТФактДней
		|ИЗ
		|	Документ.ТабельУчетаРабочегоВремени КАК ТабельУчетаРабочегоВремени
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТабельУчетаРабочегоВремени.РабочееВремя КАК ТабельУчетаРабочегоВремениРабочееВремя
		|		ПО ТабельУчетаРабочегоВремени.Ссылка = ТабельУчетаРабочегоВремениРабочееВремя.Ссылка
		|ГДЕ
		|	ТабельУчетаРабочегоВремени.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ТабельУчетаРабочегоВремени.Организация = &Организация
		|	И ТабельУчетаРабочегоВремени.ПометкаУдаления = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабельУчетаРабочегоВремениРабочееВремя.Сотрудник";
	Иначе	
		ТекстДФ = 
		"ВЫБРАТЬ
		|	СУММА(УчетРабочегоВремениДанныеГрафика.ДополнительноеЗначениеФактическийПериодДействия) КАК ДнейФакт,
		|	УчетРабочегоВремениДанныеГрафика.Сотрудник
		|ПОМЕСТИТЬ ВТФактДней
		|ИЗ
		|	РегистрРасчета.УчетРабочегоВремени.ДанныеГрафика(Организация = &Организация) КАК УчетРабочегоВремениДанныеГрафика
		|ГДЕ
		|	УчетРабочегоВремениДанныеГрафика.ПериодДействия = &НачалоПериода
		|	И (УчетРабочегоВремениДанныеГрафика.Регистратор ССЫЛКА Документ.РасчетРабочегоВремени
		|			ИЛИ УчетРабочегоВремениДанныеГрафика.Регистратор ССЫЛКА Документ.РасчетОтпускных
		|			ИЛИ УчетРабочегоВремениДанныеГрафика.Регистратор ССЫЛКА Документ.РасчетБольничныхЛистов)
		|	И УчетРабочегоВремениДанныеГрафика.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	УчетРабочегоВремениДанныеГрафика.Сотрудник";
	КонецЕсли;
	
	Запрос.Текст = ТекстДФ+
	";
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ГрафикиРаботыПоВидамВремени.ОсновноеЗначение) КАК НормаДней
	|ПОМЕСТИТЬ ВТНормаДней
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыПоВидамВремени КАК ГрафикиРаботыПоВидамВремени
	|ГДЕ
	|	ГрафикиРаботыПоВидамВремени.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ГрафикиРаботыПоВидамВремени.ВидУчетаВремени = &ВидУчетаВремени
	|	И ГрафикиРаботыПоВидамВремени.ГрафикРаботы = &ГрафикРаботыОсновной
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА ВТФактДней.ДнейФакт >= ВТНормаДней.НормаДней
	|				ТОГДА ВТНормаДней.НормаДней
	|			ИНАЧЕ ВТФактДней.ДнейФакт
	|		КОНЕЦ) КАК ДнейДляРасчета
	|ПОМЕСТИТЬ ВТФактДнейДляРасчета
	|ИЗ
	|	ВТФактДней КАК ВТФактДней,
	|	ВТНормаДней КАК ВТНормаДней
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РаботникиОрганизацийСрезПоследних.Сотрудник) КАК Сотрудник
	|ПОМЕСТИТЬ ВТКолРаботников
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонецПериода, Организация = &Организация) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	РаботникиОрганизацийСрезПоследних.Организация = &Организация
	|	И РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния <> &ПричинаИзмененияСостоянияУвольнение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТКолРаботников.Сотрудник КАК КолРаботников,
	|	ВТНормаДней.НормаДней КАК НормаДней,
	|	ВТФактДнейДляРасчета.ДнейДляРасчета КАК ДнейФакт,
	|	&МРОТЗаМесяц КАК МРОТ,
	|	ВТФактДнейДляРасчета.ДнейДляРасчета / ВТНормаДней.НормаДней * &МРОТЗаМесяц КАК МинРазмерЕСП
	|ИЗ
	|	ВТНормаДней КАК ВТНормаДней,
	|	ВТФактДнейДляРасчета КАК ВТФактДнейДляРасчета,
	|	ВТКолРаботников КАК ВТКолРаботников
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ВТФактДней
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ВТНормаДней
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ВТФактДнейДляРасчета
	|	;
	|	
	|	////////////////////////////////////////////////////////////////////////////////
	|	УНИЧТОЖИТЬ ВТКолРаботников" ;
	
	Рез = Запрос.Выполнить().Выбрать();
	Если Рез.Количество()= 0 тогда
		Сообщить ("Проверьте настройки или нет данных в периоде!");	
	Конецесли;
	Возврат Рез ;
	
КонецФункции

Функция ОкладПоСтроке(Строка,Дата) Экспорт
	
	Если не Строка.ВВалюте Тогда
		Возврат Строка.Оклад;
	Иначе
		КурсВалюты=ПолучитьКурсВалюты(Строка.Валюта,КонецМесяца(Дата));
		Возврат Окр(Строка.Оклад*КурсВалюты.Курс,2);
	КонецЕсли;	
	
КонецФункции	

Функция ТарифПоСтроке(Строка,Дата) Экспорт
	
	Если не Строка.ВВалюте Тогда
		Возврат Строка.Тариф;
	Иначе
		КурсВалюты=ПолучитьКурсВалюты(Строка.Валюта,КонецМесяца(Дата));
		Возврат Окр(Строка.Тариф*КурсВалюты.Курс,2);
	КонецЕсли;	
	
КонецФункции	

Функция ПолучитьМРОТЗаМесяц(ДатаМесяца) Экспорт
	
	МРОТ=0;
	ТекущийМРОТ=0;
	ДнейВМесяце=День(КонецМесяца(ДатаМесяца));
	
	СведенияОМРОТ=РегистрыСведений.СведенияОМРОТ.СрезПоследних(НачалоМесяца(ДатаМесяца));
	Если СведенияОМРОТ.Количество()>0 Тогда
		ТекущийМРОТ=СведенияОМРОТ[0].Сумма;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОМРОТ.Период,
	|	СведенияОМРОТ.Сумма
	|ИЗ
	|	РегистрСведений.СведенияОМРОТ КАК СведенияОМРОТ
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(СведенияОМРОТ.Период, МЕСЯЦ) = &Период";
	
	Запрос.УстановитьПараметр("Период",НачалоМесяца(ДатаМесяца));
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();

	НачалоПериода=НачалоМесяца(ДатаМесяца);
	
	Пока Выборка.Следующий() Цикл
		
		Период=(Выборка.Период-НачалоПериода)/(24*60*60);
		
		Если Период>0 Тогда
			МРОТ=МРОТ+окр(ТекущийМРОТ/ДнейВМесяце*Период,2);	
		КонецЕсли;
		
		НачалоПериода=Выборка.Период;
		ТекущийМРОТ=Выборка.Сумма;
		
	КонецЦикла;
	
	Период=(КонецМесяца(ДатаМесяца)+1-НачалоПериода)/(24*60*60);
	
	Если Период>0 Тогда
		МРОТ=МРОТ+окр(ТекущийМРОТ/ДнейВМесяце*Период,2);	
	КонецЕсли;
	
	Возврат Окр(МРОТ,0);
	
КонецФункции	

Процедура ДобавитьСоответствие(ТаблицаСоответствий,БукваНаКирилице,БукваНаЛатинице)
	
	Строка=ТаблицаСоответствий.Добавить();
	Строка.БукваНаКирилице=НРег(БукваНаКирилице);
	Строка.БукваНаЛатинице=НРег(БукваНаЛатинице);
	
	Строка=ТаблицаСоответствий.Добавить();
	Строка.БукваНаКирилице=ВРег(БукваНаКирилице);  
	Строка.БукваНаЛатинице=ТРег(БукваНаЛатинице);
	
КонецПроцедуры

Функция ПеревестиНаЛатиницу(СтрокаНаКирилице) Экспорт
	
	ТаблицаСоответствий=Новый ТаблицаЗначений;
	ТаблицаСоответствий.Колонки.Добавить("БукваНаКирилице");
	ТаблицаСоответствий.Колонки.Добавить("БукваНаЛатинице");
	ДобавитьСоответствие(ТаблицаСоответствий," "," ");
	ДобавитьСоответствие(ТаблицаСоответствий,"а","a");
	ДобавитьСоответствие(ТаблицаСоответствий,"б","b");
	ДобавитьСоответствие(ТаблицаСоответствий,"в","v");
	ДобавитьСоответствие(ТаблицаСоответствий,"г","g");
	ДобавитьСоответствие(ТаблицаСоответствий,"д","d");
	ДобавитьСоответствие(ТаблицаСоответствий,"е","e");
	ДобавитьСоответствие(ТаблицаСоответствий,"ё","e");
	ДобавитьСоответствие(ТаблицаСоответствий,"ж","j");
	ДобавитьСоответствие(ТаблицаСоответствий,"з","z");
	ДобавитьСоответствие(ТаблицаСоответствий,"и","i");
	ДобавитьСоответствие(ТаблицаСоответствий,"й","y");
	ДобавитьСоответствие(ТаблицаСоответствий,"к","k");
	ДобавитьСоответствие(ТаблицаСоответствий,"л","l");
	ДобавитьСоответствие(ТаблицаСоответствий,"м","m");
	ДобавитьСоответствие(ТаблицаСоответствий,"н","n");
	ДобавитьСоответствие(ТаблицаСоответствий,"о","o");
	ДобавитьСоответствие(ТаблицаСоответствий,"п","p");
	ДобавитьСоответствие(ТаблицаСоответствий,"р","r");
	ДобавитьСоответствие(ТаблицаСоответствий,"с","s");
	ДобавитьСоответствие(ТаблицаСоответствий,"т","t");
	ДобавитьСоответствие(ТаблицаСоответствий,"у","u");
	ДобавитьСоответствие(ТаблицаСоответствий,"ф","f");
	ДобавитьСоответствие(ТаблицаСоответствий,"х","h");
	ДобавитьСоответствие(ТаблицаСоответствий,"ц","ts");
	ДобавитьСоответствие(ТаблицаСоответствий,"ч","ch");
	ДобавитьСоответствие(ТаблицаСоответствий,"ш","sh");
	ДобавитьСоответствие(ТаблицаСоответствий,"щ","sh");
	ДобавитьСоответствие(ТаблицаСоответствий,"э","e");
	ДобавитьСоответствие(ТаблицаСоответствий,"ю","yu");
	ДобавитьСоответствие(ТаблицаСоответствий,"я","ya");
	ДобавитьСоответствие(ТаблицаСоответствий,"ы","i");
	ДобавитьСоответствие(ТаблицаСоответствий,"ь","");
	ДобавитьСоответствие(ТаблицаСоответствий,"ъ","");
	ДобавитьСоответствие(ТаблицаСоответствий,"ў","o'");
	ДобавитьСоответствие(ТаблицаСоответствий,"қ","q");
	ДобавитьСоответствие(ТаблицаСоответствий,"ғ","g'");
	ДобавитьСоответствие(ТаблицаСоответствий,"-","-");
	ДобавитьСоответствие(ТаблицаСоответствий,".",".");
	ДобавитьСоответствие(ТаблицаСоответствий,"/","/");
	
	СтрокаНаЛатинице="";
	
	Для н=1 по СтрДлина(СтрокаНаКирилице) Цикл
		
		БукваНаКирилице=Сред(СтрокаНаКирилице,н,1);
		СтрокаТаблицы=ТаблицаСоответствий.Найти(БукваНаКирилице,"БукваНаКирилице");
		
		Если СтрокаТаблицы<>Неопределено Тогда
			
			СтрокаНаЛатинице=СтрокаНаЛатинице+СтрокаТаблицы.БукваНаЛатинице;
			
		Иначе
			
			//Сообщить(БукваНаКирилице);
			СтрокаНаЛатинице=СтрокаНаЛатинице+БукваНаКирилице;
			
		КонецЕсли;	
		
	КонецЦикла;	 
	
	Возврат СтрокаНаЛатинице;
	
	
	
	
КонецФункции	
