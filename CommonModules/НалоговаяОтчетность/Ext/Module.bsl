

Функция ПериодОтчета(НачалоПериода,КонецПериода) Экспорт
	МесяцОтчета=Месяц(КонецПериода);
	Если МесяцОтчета/3=Цел(МесяцОтчета/3) Тогда
		Квартал=МесяцОтчета/3;
		Возврат Строка(Квартал)+" квартал "+Год(КонецПериода)+" г.";
	ИначеЕсли НачалоПериода=НачалоМесяца(КонецПериода) Тогда
		Возврат Формат(КонецПериода,"ДФ=ММММ")+" "+Формат(КонецПериода,"ДФ=гггг")+" г.";
	Иначе	
		Возврат Формат(НачалоПериода,"ДФ=ММММ")+" - "+Формат(КонецПериода,"ДФ=ММММ")+" "+Формат(КонецПериода,"ДФ=гггг")+" г.";
	КонецЕсли;
КонецФункции         

Функция ПолучитьИННСотрудника(Сотрудник) Экспорт
	Возврат ?(ЗначениеЗаполнено(Сотрудник.ФизическоеЛицо),Сотрудник.ФизическоеЛицо.ИНН,"");
КонецФункции

Процедура ВывестиСтрокуПоКлеткам(Таб,НомерСтроки,НомерСтолбца,Знач СтрокаДляВывода) Экспорт
	
	СтрокаДляВывода=СокрЛП(СтрокаДляВывода);
	
	Для н=0 По СтрДлина(СтрокаДляВывода)-1  Цикл
		Область=Таб.Область("R"+строка(НомерСтроки)+"C"+строка(НомерСтолбца+н)+":R"+строка(НомерСтроки)+"C"+строка(НомерСтолбца+н));	  
		Область.Текст=Сред(СтрокаДляВывода,н+1,1);
	КонецЦикла;

КонецПроцедуры  
				  
Процедура ВывестиСтроку(Таб,НомерСтроки,НомерСтолбца,СтрокаДляВывода) Экспорт
	
	СтрокаДляВывода=СокрЛП(СтрокаДляВывода);
	
	Область=Таб.Область("R"+строка(НомерСтроки)+"C"+строка(НомерСтолбца)+":R"+строка(НомерСтроки)+"C"+строка(НомерСтолбца));	  
	Область.Текст=СтрокаДляВывода;

КонецПроцедуры  

Процедура ВывестиЧислоПоКлеткам(Таб,НомерСтроки,НомерСтолбца,ЧислоДляВывода,ВТысячах) Экспорт
																			
	Если ВТысячах Тогда
		ВывестиСтрокуПоКлеткам(Таб,НомерСтроки,НомерСтолбца,Формат(ЧислоДляВывода,"ЧЦ=18; ЧДЦ=2"));
	Иначе
		ВывестиСтрокуПоКлеткам(Таб,НомерСтроки,НомерСтолбца,Формат(ЧислоДляВывода/1000,"ЧЦ=18; ЧДЦ=1"));
	КонецЕсли;

КонецПроцедуры  

Функция ОчиститьОбласть(Таб,НомерСтроки) Экспорт
	для к=2 по 38 цикл
		Область	=Таб.Область("R"+строка(НомерСтроки)+"C"+строка(к)+":R"+строка(НомерСтроки)+"C"+строка(к));	  
		Если (Область.текст="0.00") или (Область.текст="0.0") Тогда
			Область.текст="";
		КонецЕсли;
	КонецЦикла;
КонецФункции

Процедура РассчитатьФОТзаПериод(Организация,НачалоПериода,КонецПериода,ФОТ,ОблагаемыйФОТ,СписокНеоблагаемыхНачислений) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.ВидРасчета,
	|	СУММА(Начисления.Результат) КАК Результат
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Активность
	|	И ВЫБОР
	|			КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Начисления.Организация = &Организация
	|		КОНЕЦ
	|	И Начисления.Результат <> 0
	|	И Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (НЕ Начисления.ВидРасчета В (&ПрочиеДоходы))
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ВидРасчета";
	
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(КонецПериода));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ПрочиеДоходы", Справочники.ГруппыНачислений.ПрочиеДоходы.Расчеты.ВыгрузитьКолонку("ВидРасчета"));
	
	тз=Запрос.Выполнить().Выгрузить(); 
	
	ФОТ=0;
	ОблагаемыйФОТ=0;   
	
	Для каждого СтрокаТз Из Тз Цикл
		ВР=СтрокаТз.ВидРасчета;
		Если ВходитВГруппуНачислений(ВР,Справочники.ГруппыНачислений.НачисленияВходящиеВФОТ) Тогда
			ФОТ=ФОТ+СтрокаТз.Результат;
			если ВходитВГруппуНачислений(ВР,Справочники.ГруппыНачислений.ОблагаетсяПенсионнымиВзносами) тогда
				ОблагаемыйФОТ=ОблагаемыйФОТ+СтрокаТз.Результат;
			Иначе
				Строка=СписокНеоблагаемыхНачислений.Добавить();
				Строка.Начисление=ВР;
				Строка.Сумма=СтрокаТз.Результат;
			конецесли;
		КонецЕсли; 	
	КонецЦикла; 
	
	СписокНеоблагаемыхНачислений.свернуть("Начисление","Сумма");  
	СписокНеоблагаемыхНачислений.сортировать("Начисление");  
	
КонецПроцедуры      

Процедура РассчитатьФОТзаПериод_ЕСП(Организация, НачалоПериода, КонецПериода, ФОТ = 0, ОблагаемыйФОТ = 0, СписокНеоблагаемыхНачислений) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.ВидРасчета,
	|	СУММА(Начисления.Результат) КАК Результат
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Активность
	|	И ВЫБОР
	|			КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Начисления.Организация = &Организация
	|		КОНЕЦ
	|	И Начисления.Результат <> 0
	|	И Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Начисления.ВидРасчета.ВидДохода = ЗНАЧЕНИЕ(Перечисление.ВидыДохода.ОплатаТруда)
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ВидРасчета";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода" , КонецПериода);
	Запрос.УстановитьПараметр("Организация"  , Организация);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТЗ Из ТЗ Цикл
		ВР = СтрокаТЗ.ВидРасчета;
		ФОТ = ФОТ + СтрокаТЗ.Результат;
		Если ВР.НеоблагаетсяЕСП Тогда
			Строка = СписокНеоблагаемыхНачислений.Добавить();
			Строка.Начисление = ВР;
			Строка.Сумма = СтрокаТЗ.Результат;
		Иначе
			ОблагаемыйФОТ = ОблагаемыйФОТ + СтрокаТЗ.Результат;
		КонецЕсли;
	КонецЦикла; 
	
	СписокНеоблагаемыхНачислений.Свернуть("Начисление","Сумма");  
	СписокНеоблагаемыхНачислений.Сортировать("Начисление");  
	
КонецПроцедуры // РассчитатьФОТзаПериод_ЕСП()

Процедура РассчитатьФОТзаПериод_ПФ(Организация, НачалоПериода, КонецПериода, ФОТ = 0, ОблагаемыйФОТ = 0, СписокНеоблагаемыхНачислений) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Начисления.ВидРасчета,
	|	СУММА(Начисления.Результат) КАК Результат
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|ГДЕ
	|	Начисления.Активность
	|	И ВЫБОР
	|			КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ Начисления.Организация = &Организация
	|		КОНЕЦ
	|	И Начисления.Результат <> 0
	|	И Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Начисления.ВидРасчета.ВидДохода = ЗНАЧЕНИЕ(Перечисление.ВидыДохода.ОплатаТруда)
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.ВидРасчета";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода" , КонецПериода);
	Запрос.УстановитьПараметр("Организация"  , Организация);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрокаТЗ Из ТЗ Цикл
		ВР = СтрокаТЗ.ВидРасчета;
		ФОТ = ФОТ + СтрокаТЗ.Результат;
		Если ВР.НеоблагаетсяПФ Тогда
			Строка = СписокНеоблагаемыхНачислений.Добавить();
			Строка.Начисление = ВР;
			Строка.Сумма = СтрокаТЗ.Результат;
		Иначе
			ОблагаемыйФОТ = ОблагаемыйФОТ + СтрокаТЗ.Результат;
		КонецЕсли;
	КонецЦикла; 
	
	СписокНеоблагаемыхНачислений.Свернуть("Начисление","Сумма");  
	СписокНеоблагаемыхНачислений.Сортировать("Начисление");  
	
КонецПроцедуры // РассчитатьФОТзаПериод_ПФ()

Функция НачисленоПоНалогу_ПоАналитике(Организация,Платеж,НачалоПериода,КонецПериода) экспорт    

	Если НачалоПериода>КонецПериода Тогда 
		Возврат 0;
	КонецЕсли;

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборотКт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет6400)
	|				ИЛИ Счет В ИЕРАРХИИ (&Счет6500),
	|			,
	|			ВЫБОР
	|					КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Организация = &Организация
	|				КОНЕЦ
	|				И Субконто1 = &Субконто,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	-ХозрасчетныйОбороты.СуммаОборотДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет6400)
	|				ИЛИ Счет В ИЕРАРХИИ (&Счет6500),
	|			,
	|			ВЫБОР
	|					КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Организация = &Организация
	|				КОНЕЦ
	|				И КорСубконто1 = &Субконто,
	|			КорСчет В ИЕРАРХИИ (&Счет6400)
	|				ИЛИ КорСчет В ИЕРАРХИИ (&Счет6500),
	|			) КАК ХозрасчетныйОбороты";
	
	Запрос.УстановитьПараметр("Субконто",Платеж);
	Запрос.УстановитьПараметр("Счет6400", ПланыСчетов.Хозрасчетный.НайтиПоКоду("6400"));
	Запрос.УстановитьПараметр("Счет6500", ПланыСчетов.Хозрасчетный.НайтиПоКоду("6500"));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(КонецПериода));
	
	Возврат Запрос.Выполнить().Выгрузить().Итог("Сумма");
КонецФункции

Функция НачисленоПоНалогу_ПоСчету(Организация,Платеж,НачалоПериода,КонецПериода) Экспорт
	
	Если НачалоПериода>КонецПериода Тогда 
		Возврат 0;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Платеж.СчетУчета) Тогда
		Возврат 0;
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборотКт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет = &Счет,
	|			,
	|			ВЫБОР
	|				КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ Организация = &Организация
	|			КОНЕЦ,
	|			,
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	-ХозрасчетныйОбороты.СуммаОборотДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет = &Счет,
	|			,
	|			ВЫБОР
	|				КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ Организация = &Организация
	|			КОНЕЦ,
	|			(КорСчет В ИЕРАРХИИ (&Счет6400)
	|				ИЛИ КорСчет В ИЕРАРХИИ (&Счет6500))
	|				И КорСчет <> &Счет,
	|			) КАК ХозрасчетныйОбороты";
	
	Запрос.УстановитьПараметр("Счет", Платеж.СчетУчета);
	Запрос.УстановитьПараметр("Счет6400", ПланыСчетов.Хозрасчетный.НайтиПоКоду("6400"));
	Запрос.УстановитьПараметр("Счет6500", ПланыСчетов.Хозрасчетный.НайтиПоКоду("6500"));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(КонецПериода));
	
	Возврат Запрос.Выполнить().Выгрузить().Итог("Сумма");
КонецФункции        

Функция ОплаченоПоНалогу_ПоАналитике(Организация,Платеж,НачалоПериода,КонецПериода) экспорт    

	Если НачалоПериода>КонецПериода Тогда 
		Возврат 0;
	КонецЕсли;

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборотДт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет6400)
	|				ИЛИ Счет В ИЕРАРХИИ (&Счет6500),
	|			,
	|			ВЫБОР
	|					КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Организация = &Организация
	|				КОНЕЦ
	|				И Субконто1 = &Субконто,
	|			КорСчет В ИЕРАРХИИ (&СчетаДенежныхСредств),
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	-ХозрасчетныйОбороты.СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В ИЕРАРХИИ (&Счет6400)
	|				ИЛИ Счет В ИЕРАРХИИ (&Счет6500),
	|			,
	|			ВЫБОР
	|					КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ Организация = &Организация
	|				КОНЕЦ
	|				И КорСубконто1 = &Субконто,
	|			КорСчет В ИЕРАРХИИ (&Счет6400)
	|				ИЛИ КорСчет В ИЕРАРХИИ (&Счет6500),
	|			) КАК ХозрасчетныйОбороты";
	
	Запрос.УстановитьПараметр("Субконто",Платеж);
	Запрос.УстановитьПараметр("Счет6400", ПланыСчетов.Хозрасчетный.НайтиПоКоду("6400"));
	Запрос.УстановитьПараметр("Счет6500", ПланыСчетов.Хозрасчетный.НайтиПоКоду("6500"));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(КонецПериода));
	
	СчетаДенежныхСредств=новый Массив;
	СчетаДенежныхСредств.Добавить(ПланыСчетов.Хозрасчетный.А5000);
	СчетаДенежныхСредств.Добавить(ПланыСчетов.Хозрасчетный.А5100);
	СчетаДенежныхСредств.Добавить(ПланыСчетов.Хозрасчетный.А5200);
	СчетаДенежныхСредств.Добавить(ПланыСчетов.Хозрасчетный.А5500);
	
	Запрос.УстановитьПараметр("СчетаДенежныхСредств", СчетаДенежныхСредств);
	
	Возврат Запрос.Выполнить().Выгрузить().Итог("Сумма");
КонецФункции

Функция ОплаченоПоНалогу_ПоСчету(Организация,Платеж,НачалоПериода,КонецПериода) Экспорт
	
	Если НачалоПериода>КонецПериода Тогда 
		Возврат 0;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Платеж.СчетУчета) Тогда
		Возврат 0;
	КонецЕсли;	

	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.СуммаОборотДт КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет = &СчетУчета "+?(ЗначениеЗаполнено(Платеж.СчетУчетаАванса)," ИЛИ Счет = &СчетУчетаАванса ","")+",
	|			,
	|			ВЫБОР
	|				КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ Организация = &Организация
	|			КОНЕЦ,
	|			КорСчет В ИЕРАРХИИ (&СчетаДенежныхСредств),
	|			) КАК ХозрасчетныйОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	-ХозрасчетныйОбороты.СуммаОборотКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет = &СчетУчета "+?(ЗначениеЗаполнено(Платеж.СчетУчетаАванса)," ИЛИ Счет = &СчетУчетаАванса ","")+",
	|			,
	|			ВЫБОР
	|				КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ Организация = &Организация
	|			КОНЕЦ,
	|			((КорСчет В ИЕРАРХИИ (&Счет6400)
	|				ИЛИ КорСчет В ИЕРАРХИИ (&Счет6500))
	|				И КорСчет <> &СчетУчета  "+?(ЗначениеЗаполнено(Платеж.СчетУчетаАванса)," И КорСчет <> &СчетУчетаАванса ","")+") или КорСчет В ИЕРАРХИИ (&СчетаДенежныхСредств),
	|			) КАК ХозрасчетныйОбороты";
	
	Запрос.УстановитьПараметр("СчетУчета", Платеж.СчетУчета);
	Запрос.УстановитьПараметр("СчетУчетаАванса", Платеж.СчетУчетаАванса);
	
	Запрос.УстановитьПараметр("Счет6400", ПланыСчетов.Хозрасчетный.НайтиПоКоду("6400"));
	Запрос.УстановитьПараметр("Счет6500", ПланыСчетов.Хозрасчетный.НайтиПоКоду("6500"));
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(КонецПериода));
	
	СчетаДенежныхСредств=новый Массив;
	СчетаДенежныхСредств.Добавить(ПланыСчетов.Хозрасчетный.А5000);
	СчетаДенежныхСредств.Добавить(ПланыСчетов.Хозрасчетный.А5100);
	СчетаДенежныхСредств.Добавить(ПланыСчетов.Хозрасчетный.А5200);
	СчетаДенежныхСредств.Добавить(ПланыСчетов.Хозрасчетный.А5500);
	
	Запрос.УстановитьПараметр("СчетаДенежныхСредств", СчетаДенежныхСредств);
	
	Возврат Запрос.Выполнить().Выгрузить().Итог("Сумма");
	
КонецФункции        

Функция НачисленоПоНалогу(Организация,Платеж,НачалоПериода,КонецПериода) экспорт
	Если Платеж.СчетУчета.ВидыСубконто.Количество()=0 Тогда
		Возврат НачисленоПоНалогу_ПоСчету(Организация,Платеж,НачалоПериода,КонецПериода);
	Иначе
		Возврат НачисленоПоНалогу_ПоАналитике(Организация,Платеж,НачалоПериода,КонецПериода);
	КонецЕсли;
КонецФункции

Функция ОплаченоПоНалогу(Организация,Платеж,НачалоПериода,КонецПериода) экспорт
	Если Платеж.СчетУчета.ВидыСубконто.Количество()=0 Тогда
		Возврат ОплаченоПоНалогу_ПоСчету(Организация,Платеж,НачалоПериода,КонецПериода);
	Иначе
		Возврат ОплаченоПоНалогу_ПоАналитике(Организация,Платеж,НачалоПериода,КонецПериода);
	КонецЕсли;
КонецФункции

Функция НачисленоПоНалогуЗаПредыдущийПериод(Организация,Платеж,НачалоПериода,КонецПериода,Периодичность) экспорт           
	
	датаПП1=НачалоПериода;
	Если Периодичность=3 Тогда
		датаПП2=КонецМесяца(ДобавитьМесяц(КонецКвартала(КонецПериода),-3));
	Иначе
		датаПП2=КонецМесяца(ДобавитьМесяц(КонецПериода,-1));
	КонецЕсли;                               
	
	Возврат НачисленоПоНалогу(Организация,Платеж,датаПП1,датаПП2);
	
КонецФункции  
		
Функция СтавкаПоПлатежу(Платеж,Дата) Экспорт
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	СтавкиПоПлатежамВБюджетСрезПоследних.Ставка
	|ИЗ
	|	РегистрСведений.СтавкиПоПлатежамВБюджет.СрезПоследних(&Дата, Платеж = &Платеж) КАК СтавкиПоПлатежамВБюджетСрезПоследних";
	
	Запрос.УстановитьПараметр("Платеж",Платеж);
	Запрос.УстановитьПараметр("Дата",Дата);
	Результат=Запрос.Выполнить();
    Выборка=Результат.Выбрать();
	Если выборка.Следующий() Тогда
		Возврат Выборка.Ставка;
	Иначе
		Возврат 0;
	КонецЕсли;	
КонецФункции	

Функция СтавкаПоПлатежуЛьготная(Платеж,Дата) Экспорт
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	СтавкиПоПлатежамВБюджетСрезПоследних.СтавкаЛьготная КАК Ставка
	|ИЗ
	|	РегистрСведений.СтавкиПоПлатежамВБюджет.СрезПоследних(&Дата, Платеж = &Платеж) КАК СтавкиПоПлатежамВБюджетСрезПоследних";
	
	Запрос.УстановитьПараметр("Платеж",Платеж);
	Запрос.УстановитьПараметр("Дата",Дата);
	Результат=Запрос.Выполнить();
    Выборка=Результат.Выбрать();
	Если выборка.Следующий() Тогда
		Возврат Выборка.Ставка;
	Иначе
		Возврат 0;
	КонецЕсли;	
КонецФункции	

Функция РассчитатьОбъемВыполненныхРаботЗаПериод(Организация,НачалоПериода,КонецПериода) Экспорт
	Перем БазаСумма;
	
	СчетаВыручки = Новый Массив;
	СчетаВыручки.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("9000"));
	Если Константы.Учитывать93счетПриРассчетеОбъемаВыполненныхРабот.Получить() Тогда
		СчетаВыручки.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("9300"));
	КонецЕсли;

	Счет99 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("9900");
	
	Если КонецПериода<НачалоПериода Тогда
		
		Возврат 0;
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.СуммаОборотКт КАК Объем
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет В ИЕРАРХИИ(&СчетаВыручки),
		|			,
		|			ВЫБОР
		|				КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ Организация = &Организация
		|			КОНЕЦ,
		|			,
		|			) КАК ХозрасчетныйОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ХозрасчетныйОбороты.СуммаОборотДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет В (&СчетаВыручки),
		|			,
		|			ВЫБОР
		|				КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ Организация = &Организация
		|			КОНЕЦ,
		|			(НЕ КорСчет В иерархии(&Счет99)),
		|			) КАК ХозрасчетныйОбороты";
		
		Запрос.УстановитьПараметр("НачалоПериода",НачалоМесяца(НачалоПериода));
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(КонецПериода));
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Запрос.УстановитьПараметр("СчетаВыручки", СчетаВыручки);
		Запрос.УстановитьПараметр("Счет99", Счет99);

		Результат = Запрос.Выполнить().Выгрузить();
		БазаСумма = Результат.Итог("Объем");
		
		Возврат БазаСумма;	
		
	КонецЕсли;
	
КонецФункции
			
Функция НомерМесяца(НекаяДата) Экспорт
	возврат лев("0",2-СтрДлина(Строка(Месяц(НекаяДата))))+Строка(Месяц(НекаяДата));
КонецФункции

Функция НомерКвартала(НекаяДата) Экспорт
	к=Месяц(НекаяДата)/3;
	Если Цел(к)=к Тогда
		Возврат к; 
	иначе
		Возврат Цел(к)+1; 
	КонецЕсли;

КонецФункции     

Функция ЧисленностьРаботников(Организация,НекаяДата) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РаботникиОрганизацийСрезПоследних.Сотрудник) КАК Сотрудник
	               |ИЗ
	               |	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	               |			&ДатаСреза,
	               |			Организация = &Организация
	               |				И (НЕ Сотрудник В
	               |						(ВЫБРАТЬ
	               |							РаботникиОрганизаций.Сотрудник
	               |						ИЗ
	               |							РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	               |						ГДЕ
	               |							РаботникиОрганизаций.Период < &ДатаСреза
	               |							И РаботникиОрганизаций.Организация = &Организация
	               |							И РаботникиОрганизаций.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)))) КАК РаботникиОрганизацийСрезПоследних";
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ДатаСреза",НекаяДата);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Численность=0;
	
	Если Выборка.Следующий() Тогда
		Численность=Выборка.Сотрудник;
	КонецЕсли;
	
	Возврат Формат(Численность,"ЧГ=");
	
КонецФункции         

Процедура ЧисленностьСотрудниковПолучившихДоходы(Организация,НачалоПериода,КонецПериода,Работники,Совместители) Экспорт 
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НачисленияСотрудников.Сотрудник) КАК Работники,
	//|	СУММА(ВЫБОР
	//|			КОГДА СведенияОСотрудниках.ТипСотрудника = ЗНАЧЕНИЕ(перечисление.типсотрудника.совместитель)
	//|				ТОГДА 1
	//|			ИНАЧЕ 0
	//|		КОНЕЦ) КАК Совместители
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		Начисления.Сотрудник КАК Сотрудник
	//|	ИЗ
	//|		РегистрРасчета.Начисления КАК Начисления
	//|	ГДЕ
	//|		Начисления.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	//|		И Начисления.Организация = &Организация
	//|		И Начисления.Результат <> 0
	//|	
	//|	СГРУППИРОВАТЬ ПО
	//|		Начисления.Сотрудник) КАК НачисленияСотрудников
	//|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//|			РаботникиОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	//|			РаботникиОрганизацийСрезПоследних.ТипСотрудника КАК ТипСотрудника
	//|		ИЗ
	//|			РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонецПериода, Организация = &Организация) КАК РаботникиОрганизацийСрезПоследних) КАК СведенияОСотрудниках
	//|		ПО НачисленияСотрудников.Сотрудник = СведенияОСотрудниках.Сотрудник";     
	//
	//Запрос.УстановитьПараметр("Организация",Организация);
	//Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
	//Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	//
	//Работники   = 0;	
	//Совместители   = 0;	
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//Если Выборка.Следующий() Тогда
	//	Работники   = Выборка.Работники;	
	//	Совместители   = Выборка.Совместители;	
	//КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.ТипСотрудника
	|ПОМЕСТИТЬ ВР
	|ИЗ
	|	РегистрРасчета.Начисления КАК Начисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонДата, ) КАК РаботникиОрганизацийСрезПоследних
	|		ПО Начисления.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	|ГДЕ
	|	Начисления.ПериодРегистрации МЕЖДУ &НачДата И &КонДата
	|	И Начисления.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.Сотрудник,
	|	РаботникиОрганизацийСрезПоследних.ТипСотрудника
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(1) КАК Работники,
	|	СУММА(ВЫБОР
	|			КОГДА ВР.ТипСотрудника = &ТипСотрудника
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Совместители,
	|	СУММА(ВЫБОР
	|			КОГДА ВР.Сотрудник.Договорник
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Договорники
	|ИЗ
	|	ВР КАК ВР";     
	
    Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ТипСотрудника",Перечисления.ТипСотрудника.Совместитель);
	Запрос.УстановитьПараметр("НачДата",НачалоПериода);
	Запрос.УстановитьПараметр("КонДата",КонецПериода);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Работники   = Выборка.Работники;	
		Совместители   = Выборка.Совместители;	
	КонецЕсли;
	
КонецПроцедуры                                  

Функция КодТелефонаДляНалоговойОтчетности(Организация) Экспорт
	Телефон=Организация.НомерТелефонаДляНалоговойОтчетности;
	
	Если лев(Телефон,1)="(" Тогда
		Телефон=Прав(Телефон,СтрДлина(Телефон)-1);
	КонецЕсли;                                    
	
	Если Найти(Телефон,")")<>0 Тогда
		Возврат лев(Телефон,Найти(Телефон,")")-1);
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции     

Функция НомерТелефонаДляНалоговойОтчетности(Организация) Экспорт
	Телефон=Организация.НомерТелефонаДляНалоговойОтчетности;
	
	Если лев(Телефон,1)="(" Тогда
		Телефон=Прав(Телефон,СтрДлина(Телефон)-1);
	КонецЕсли;                                    
	
	Если Найти(Телефон,")")<>0 Тогда
		Возврат Прав(Телефон,СтрДлина(Телефон)-Найти(Телефон,")"));
	Иначе
		Возврат Телефон;
	КонецЕсли;
	
КонецФункции      

//Функция Периодичность() Экспорт
//	Если Константа.СтатусОрганизации=Перечисление.СтатусОрганизации.КрупноеПредприятие Тогда
//		Возврат 1;
//	Иначе
//		Возврат 3;
//	КонецЕсли;
//КонецФункции  

Функция МесяцКвартала(НомерМесяцаВКвартале,НомерКвартала) Экспорт
	м = новый массив(13);
	м[1]="Январь";м[2]="Февраль";м[3]="Март";м[4]="Апрель";м[5]="Май";м[6]="Июнь";
	м[7]="Июль";м[8]="Август";м[9]="Сентябрь";м[10]="Октябрь";м[11]="Ноябрь";м[12]="Декабрь";
	
	НомерМесяца=(НомерКвартала-1)*3+НомерМесяцаВКвартале; 
	
	Возврат м[НомерМесяца];
	
КонецФункции     

Функция СчетУчета(стр) экспорт
	спр = Справочники.ПлатежиВБюджет.НайтиПоКоду(стр);
	Если спр<>Справочники.ПлатежиВБюджет.ПустаяСсылка() Тогда
		Возврат спр.СчетУчета;
	Иначе
		Сообщить("Не найден платеж с кодом "+стр+"!");
		Возврат 0;
	КонецЕсли;
КонецФункции

Процедура Начислить(Платеж,ДатаНачисления,Сумма) Экспорт
							
	Если Сумма=0 Тогда
		Сообщить("Сумма к начислению равна 0!",СтатусСообщения.Внимание);  
		Возврат;
	КонецЕсли;  
	
	Если ДатаНачисления=Дата(1,1,1) Тогда
		Сообщить("Не задана дата начисления!",СтатусСообщения.Информация);  
		Возврат;
	КонецЕсли;  
	
	Если Строка(Платеж)="" Тогда
		Сообщить("Не задан вид платежа!",СтатусСообщения.Внимание);  
		Возврат;
	КонецЕсли;  
	
	Если Платеж.СчетЗатрат.Пустая() Тогда
		Сообщить("Не выбран счет затрат по начислению! "+Платеж.Код+" "+Платеж.Наименование,СтатусСообщения.Внимание);  
		Возврат;
	КонецЕсли;  
	
	Если Платеж.СчетУчета.Пустая() Тогда
		Сообщить("Не выбран счет учета платежа! "+Платеж.Код+" "+Платеж.Наименование,СтатусСообщения.Внимание);  
		Возврат;
	КонецЕсли;           
	
	Док=Документы.НачислениеНалогов.Выбрать(ДатаНачисления,ДатаНачисления);  
	
	Пока Док.Следующий() Цикл    
		Если Док.Платеж<>Платеж Тогда
			Продолжить;
		КонецЕсли;
		ДокСсылка = Док.ПолучитьОбъект();
		ДокСсылка.Удалить();
	КонецЦикла;       
	Док = Документы.НачислениеНалогов.СоздатьДокумент();
	Док.Организация=ОсновнаяОрганизация;
	Док.Ответственный=глТекущийПользователь;
	Док.Дата=ДатаНачисления;
	Док.УстановитьНовыйНомер(); 
	Док.Платеж=Платеж;
	Док.Сумма=Сумма;
	Док.Содержание="";
	Док.Записать(РежимЗаписиДокумента.Проведение);
	
	Предупреждение("Проводка выполнена: документ № "+Док.Номер+" от "+Формат(Док.Дата,"ДФ=dd.MM.yyyy")+"!");
	
КонецПроцедуры
			   
Функция СтатьяЗатрат(стр) Экспорт
	если не Справочники.СтатьиЗатрат.НайтиПоКоду(стр).Пустая() тогда
		Возврат Справочники.СтатьиЗатрат.НайтиПоКоду(стр);
	Иначе
		Возврат ПустоеЗначениеТипа("Справочники.СтатьиЗатрат");
	КонецЕсли;
КонецФункции

Функция Платеж(стр) Экспорт
	Плат = Справочники.Платеживбюджет;
	если плат.НайтиПоКоду(стр)<>неопределено тогда
		Возврат плат.НайтиПоКоду(стр);
	Иначе
		Сообщить("Не найден платеж с кодом "+стр);
		Возврат ПустоеЗначениеТипа("Справочники.ПлатежиВБюджет");
	КонецЕсли;
КонецФункции

Функция СобратьМассивСчетов(РодительскиеСчета) Экспорт
	МассивРодСчетов = Новый Массив;
	Если Найти(РодительскиеСчета,",")=0 Тогда
		МассивРодСчетов.Добавить(РодительскиеСчета);
	Иначе
		Пока Найти(РодительскиеСчета,",")<>0 Цикл
			МассивРодСчетов.Добавить(Лев(РодительскиеСчета,Найти(РодительскиеСчета,",")-1));
			РодительскиеСчета = Прав(РодительскиеСчета,СтрДлина(РодительскиеСчета)-Найти(РодительскиеСчета,","));
		КонецЦикла;
		МассивРодСчетов.Добавить(РодительскиеСчета);
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Хозрасчетный.Ссылка
	               |ИЗ
	               |	ПланСчетов.Хозрасчетный КАК Хозрасчетный";

	Возврат МассивРодСчетов;
КонецФункции

Функция ОборотыМеждуСчетами(Организация,НачДата,КонДата,Сч1,Сч2) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	               |			&НачДата,
	               |			&КонДата,
	               |			,
	               |			СчетДт В (&СчетДт)
	               |				ИЛИ СчетДт В ИЕРАРХИИ (&СчетДт),
	               |			,
	               |			СчетКт В (&СчетКт)
	               |				ИЛИ СчетКт В ИЕРАРХИИ (&СчетКт),
	               |			,
	               |			Организация = &Организация) КАК ХозрасчетныйОборотыДтКт";
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("НачДата",НачалоМесяца(НачДата));
	Запрос.УстановитьПараметр("КонДата",КонецМесяца(КонДата));
	Запрос.УстановитьПараметр("СчетДт",ПланыСчетов.Хозрасчетный.НайтиПоКоду(Сч1));
	Запрос.УстановитьПараметр("СчетКт",ПланыСчетов.Хозрасчетный.НайтиПоКоду(Сч2));
	
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	Возврат ?(Результат.СуммаОборот=null,0,Результат.СуммаОборот);
	
КонецФункции

Функция ЧислоВОтчет(Значение,ВТысячахСум,БезКопеек=Истина) Экспорт
	
	Если ВТысячахСум Тогда
		Если БезКопеек Тогда
			Возврат Формат(Значение,"ЧДЦ=0; ЧС=3");
		Иначе
			Возврат Формат(Значение,"ЧДЦ=1; ЧС=3");
		КонецЕсли; 
	Иначе
		Если БезКопеек Тогда
			Возврат Формат(Значение,"ЧДЦ=0");
		Иначе
			Возврат Формат(Значение,"ЧДЦ=2");
		КонецЕсли; 
	КонецЕсли; 
	
КонецФункции

Функция Периодичность(Организация) Экспорт
	
	Если Организация.СтатусОрганизации=Перечисления.СтатусОрганизации.КрупноеПредприятие Тогда
		Возврат 1;
	Иначе
		Возврат 3;
	КонецЕсли; 

КонецФункции // ()
 
Процедура ВывестиВОтчет(Область,ПараметрыРасчета,ВТысячахСум=Ложь,БезКопеек=Истина) Экспорт
		
	Для Каждого Параметр из ПараметрыРасчета Цикл
		Область.Параметры[Параметр.Ключ]=ЧислоВОтчет(Параметр.Значение,ВТысячахСум,БезКопеек);
	КонецЦикла;
	
КонецПроцедуры	

Процедура ДобавитьЗначенияПараметровОтчетностиДляКонсолидации(ПараметрыОтчетности,ПараметрыРасчета,НачалоПериода,КонецПериода) Экспорт
	
	Запрос=новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ЗначенияПараметровОтчетностиДляКонсолидацииОбороты.ИмяПараметра,
	|	ЗначенияПараметровОтчетностиДляКонсолидацииОбороты.ЗначениеОборот КАК Значение
	|ИЗ
	|	РегистрНакопления.ЗначенияПараметровОтчетностиДляКонсолидации.Обороты(&НачалоПериода, &КонецПериода, , ПараметрыОтчетности = &ПараметрыОтчетности) КАК ЗначенияПараметровОтчетностиДляКонсолидацииОбороты";
	
	Запрос.УстановитьПараметр("НачалоПериода",НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	Запрос.УстановитьПараметр("ПараметрыОтчетности",ПараметрыОтчетности);
	
	Параметры=Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строка из ПараметрыРасчета Цикл
		Параметр=Параметры.Найти(Строка.Ключ);
		Если Параметр<>Неопределено Тогда
			ПараметрыРасчета[Строка.Ключ]=ПараметрыРасчета[Строка.Ключ]+Параметр.Значение;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

// Расчет НДС

Функция РасчетНДС_Получить(ПолучитьСтроку = Ложь, Стр = "") Экспорт
	
	а010 = 0;	а020 = 0;	а030 = 0;	а040 = 0;	а050 = 0;
	
	Строки = Новый Структура;
	Строки.Вставить("а010", а010);
	Строки.Вставить("а020", а020);
	Строки.Вставить("а030", а030);
	Строки.Вставить("а040", а040);
	Строки.Вставить("а050", а050);
	Возврат ?(ПолучитьСтроку, Строки[Стр], Строки);
	
КонецФункции // РасчетНДС_Получить()
