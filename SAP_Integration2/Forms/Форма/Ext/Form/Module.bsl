
&НаСервере
Процедура ZFI_011_RFC_OZBEKISTAN2НаСервере()
	РеквизитФормыВЗначение("Объект").ZFI_011_RFC_OZBEKISTAN(Объект.ZFI_011_FG_1CF);
КонецПроцедуры

&НаКлиенте
Процедура ZFI_011_RFC_OZBEKISTAN2(Команда)
	ZFI_011_RFC_OZBEKISTAN2НаСервере();
КонецПроцедуры

&НаСервере
Функция ZFI_011_RFC_OZBEKISTAN_RTRNНаСервере()
	Возврат РеквизитФормыВЗначение("Объект").ZFI_011_RFC_OZBEKISTAN_RTRN_TEST();
КонецФункции

&НаКлиенте
Процедура ZFI_011_RFC_OZBEKISTAN_RTRN(Команда)
	Ответ	= ZFI_011_RFC_OZBEKISTAN_RTRNНаСервере();
КонецПроцедуры

&НаСервере
Процедура ZFI_011_RFC_OZBEKISTANНаСервере()
	РеквизитФормыВЗначение("Объект").ZFI_011_RFC_OZBEKISTAN(Объект.ZFI_011_S_DATA);
КонецПроцедуры

&НаКлиенте
Процедура ZFI_011_RFC_OZBEKISTAN(Команда)
	ZFI_011_RFC_OZBEKISTANНаСервере();
КонецПроцедуры

&НаСервере
Функция КомандаПодтвердитьНаСервере(Знач ВыделенныеСтроки)
	НаСервере	= РеквизитФормыВЗначение("Объект");
	Если НаСервере.ZFI_011_RFC_OZBEKISTAN_RTRN(ВыделенныеСтроки) Тогда
		Объект.ZFI_011_S_DATA.Загрузить(НаСервере.ZFI_011_RFC_OZBEKISTAN());
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура КомандаПодтвердить(Команда)
	Если Элементы.ZFI_011_S_DATA.ВыделенныеСтроки.Количество() > 0 Тогда
		МассивСтрок = Новый Массив;
		Для Каждого ТекущаяСтрока Из Элементы.ZFI_011_S_DATA.ВыделенныеСтроки Цикл
			СтрокаТаблицы = Объект.ZFI_011_S_DATA.НайтиПоИдентификатору(ТекущаяСтрока);
			Если СтрокаТаблицы <> Неопределено Тогда
				МассивСтрок.Добавить(СтрокаТаблицы);
			КонецЕсли;
		КонецЦикла;
		Если МассивСтрок.Количество() > 0
		И КомандаПодтвердитьНаСервере(МассивСтрок)
		Тогда
			ОбновитьИнтерфейс();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ZSD_010_RFC_OZB_IADE_TESНаСервере()
	РеквизитФормыВЗначение("Объект").ZSD_010_RFC_OZB_IADE_TES(Объект.ZSD_010_S_DATA);
КонецПроцедуры

&НаКлиенте
Процедура ZSD_010_RFC_OZB_IADE_TES(Команда)
	ZSD_010_RFC_OZB_IADE_TESНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ZSD_010_RFC_OZB_FAT_IA_DEKONT(Команда)
	ZSD_010_RFC_OZB_FAT_IA_DEKONTНаСервере();
КонецПроцедуры

&НаСервере
Процедура ZSD_010_RFC_OZB_FAT_IA_DEKONTНаСервере()
	РеквизитФормыВЗначение("Объект").ZSD_010_RFC_OZB_FAT_IA_DEKONT(Объект.ZSD_011_S_DATA);
КонецПроцедуры

&НаКлиенте
Процедура ZMM_000_FM_1C_FATURA_LISTESI(Команда)
	ZMM_000_FM_1C_FATURA_LISTESIНаСервере();
КонецПроцедуры

&НаСервере
Процедура ZMM_000_FM_1C_FATURA_LISTESIНаСервере()
	РеквизитФормыВЗначение("Объект").ZMM_000_FM_1C_FATURA_LISTESI(Объект.ZMM_000_S_1C_ENTEGRASYON_LIST);
КонецПроцедуры

&НаСервере
Процедура ZMM_000_FM_1C_MAL_HAREKETIНаСервере()
	РеквизитФормыВЗначение("Объект").ZMM_000_FM_1C_MAL_HAREKETI(Объект.ZMM_000_S_1C_ILAC_ALIM);
КонецПроцедуры

&НаКлиенте
Процедура ZMM_000_FM_1C_MAL_HAREKETI(Команда)
	ZMM_000_FM_1C_MAL_HAREKETIНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТекстЗапросаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	КомандаФайлЗагрузить();
КонецПроцедуры

&НаКлиенте
Процедура КомандаФайлЗагрузить(Команда=Неопределено)
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.МножественныйВыбор	= Ложь;
	ДиалогОткрытияФайла.Фильтр				= "Текстовый документ (*.xml)|*.xml|Текстовый документ (*.txt)|*.txt";
	ДиалогОткрытияФайла.Показать(Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныеФайлы, Контекст) Экспорт
	Если ТипЗнч(ВыбранныеФайлы) = Тип("Массив") Тогда
		Для Каждого ПолноеИмяФайла Из ВыбранныеФайлы Цикл
		Попытка
			//НачатьПомещениеФайла(Новый ОписаниеОповещения("ВыполнитьЗагрузку", ЭтаФорма),, ПолноеИмяФайла, Ложь, УникальныйИдентификатор); 
			Конвертировать(ПолноеИмяФайла);
			ТекстЗапроса	= "file:///" + СтрЗаменить(ПолноеИмяФайла, "\", "/");
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузку(Результат, Адрес, ПолноеИмяФайла, ДополнительныеПараметры) Экспорт
	Если Результат Тогда
		Конвертировать(ПолноеИмяФайла);
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция Конвертировать(ПолноеИмяФайла)
	ШалостьУдалась	= Ложь;
	portType		= "";
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(ПолноеИмяФайла);
	ПостроительDOM		= Новый ПостроительDOM;
	ДокументDOM			= ПостроительDOM.Прочитать(ЧтениеXML);
	ЧтениеXML.Закрыть();
	Виктимз	= Новый Массив;
	Для Каждого Дом2 Из ДокументDOM.ДочерниеУзлы Цикл
		Виктимз.Очистить();
		Для Каждого Виктим Из Дом2.ДочерниеУзлы Цикл
			Если СтрСравнить(Виктим.ИмяУзла, "wsp:Policy") = 0
			Или СтрСравнить(Виктим.ИмяУзла, "wsp:UsingPolicy") = 0
			Или СтрСравнить(Виктим.ИмяУзла, "wsdl:documentation") = 0
			Тогда
				Виктимз.Добавить(Виктим);
				ШалостьУдалась = Истина;
			Иначе
				УдалитьДочерний(Виктим, ШалостьУдалась);
				Если ПустаяСтрока(portType) И СтрСравнить(Виктим.ИмяУзла, "wsdl:portType") = 0 Тогда
					Для Каждого Атрибут Из Виктим.Атрибуты Цикл
						Если СтрСравнить(Атрибут.Имя, "name") = 0 Тогда
							portType	= Атрибут.Значение;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Для Каждого Виктим Из Виктимз Цикл
			Дом2.УдалитьДочерний(Виктим);
			ШалостьУдалась = Истина;
		КонецЦикла;
	КонецЦикла;
	Если ШалостьУдалась Тогда
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(ПолноеИмяФайла);
		ЗаписьDOM = Новый ЗаписьDOM;
		ЗаписьDOM.Записать(ДокументDOM, ЗаписьXML);
		ЗаписьXML.Закрыть();
	КонецЕсли;
	Возврат ШалостьУдалась;
КонецФункции

&НаКлиенте
Процедура УдалитьДочерний(Узел, ШалостьУдалась)
	Виктимз	= Новый Массив;
	Для Каждого Виктим Из Узел.ДочерниеУзлы Цикл
		Если СтрСравнить(Виктим.ИмяУзла, "wsp:Policy") = 0 Тогда
			Виктимз.Добавить(Виктим);
		Иначе
			 УдалитьДочерний(Виктим, ШалостьУдалась);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Виктим Из Виктимз Цикл
		Узел.УдалитьДочерний(Виктим);
		ШалостьУдалась = Истина;
	КонецЦикла;
КонецПроцедуры

//	file:///D:/s1/apt/2.xml
