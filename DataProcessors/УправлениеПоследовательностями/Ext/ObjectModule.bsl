
Перем ИмяПоследовательности Экспорт;
Перем ПоследнийДокумент Экспорт;

Функция ПроверитьПоследовательность(Организация, Дата, ЗначениеГраницы) Экспорт
	
	Если НЕ (ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(Дата)) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗначениеГраницы = Последовательности.ПартионныйУчет.ПолучитьГраницу(Новый Структура("Организация", Организация));
	
	Если ЗначениеГраницы.Дата >= КонецДня(Дата) Тогда
		Возврат Истина;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПартионныйУчет.Период
		|ИЗ
		|	Последовательность.ПартионныйУчет КАК ПартионныйУчет
		|ГДЕ
		|	ПартионныйУчет.Организация = &Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПартионныйУчет.МоментВремени УБЫВ";
		
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			ПоследнийДокумент = Результат.Период;
			Возврат (Результат.Период <= ЗначениеГраницы.Дата);
		Иначе
			ПоследнийДокумент = ЗначениеГраницы.Дата;
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
		
КонецФункции

Процедура ВосстановитьПоследовательность(Организация, Дата, Момент = Неопределено) Экспорт
	
	Если НЕ (ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(Дата)) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаОтбора = Новый ТаблицаЗначений;
	ТаблицаОтбора.Колонки.Добавить("Организация");
	ТаблицаОтбора.Добавить().Организация = Организация;
	
	Попытка
		Если ЗначениеЗаполнено(Момент) Тогда
			Последовательности.ПартионныйУчет.Восстановить(Момент, ТаблицаОтбора);
		Иначе
			Последовательности.ПартионныйУчет.Восстановить(	,ТаблицаОтбора);
		КонецЕсли;
	Исключение
		ЗначениеГраницы = Последовательности.ПартионныйУчет.ПолучитьГраницу(Новый Структура("Организация", Организация));
		Если НЕ ЗначениеГраницы.Дата >= КонецДня(Дата) Тогда
			
			Запрос = Новый Запрос();
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ПартионныйУчет.Период
			|ИЗ
			|	Последовательность.ПартионныйУчет КАК ПартионныйУчет
			|ГДЕ
			|	ПартионныйУчет.Организация = &Организация
			|	И ПартионныйУчет.МоментВремени > &МоментВремени
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПартионныйУчет.МоментВремени";
			
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("МоментВремени", ЗначениеГраницы);
			
			Результат = Запрос.Выполнить().Выбрать();
			Если Результат.Следующий() Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не проводится документ " + Результат.Регистратор,,"Автоматическое восстановление последовательности прервано.",СтатусСообщения.Обычное);
			КонецЕсли;
		КонецЕсли;
	КонецПопытки;
                 	
КонецПроцедуры
