#Если Клиент Тогда

Процедура ЗаполнитьНачальныеНастройки(НачальноеЗаполнение = Истина) Экспорт
	
	// структура представлений полей
	СтруктураПредставлениеПолей = Новый Структура();
	СтруктураФорматаПолей = Новый Структура();
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РаботникиОрганизации.Физлицо КАК ФизЛицо,
	|	РаботникиОрганизации.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния";
	//Если ВыбиратьМестоРаботы Тогда
		ТекстЗапроса = ТекстЗапроса	+ ",
	|	РаботникиОрганизации.ТабельныйНомер КАК ТабельныйНомер,
	|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
	|	РаботникиОрганизации.Должность КАК Должность,
	|	РаботникиОрганизации.Приказ КАК Приказ,
	|	РаботникиОрганизации.ПодразделениеОрганизации КАК Подразделение";
	//КонецЕсли;
	ТекстЗапроса = ТекстЗапроса	+ "
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизации
	|		{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДатыПоследнихДвиженийРаботников.Период,
	|			ДатыПоследнихДвиженийРаботников.Организация КАК Организация,
	|			ДатыПоследнихДвиженийРаботников.ФизЛицо КАК ФизЛицо,
	|			ДатыПоследнихДвиженийРаботников.Приказ КАК ПриказИзмерение,
	|			ДанныеПоРаботникуПриНазначении.Регистратор КАК Приказ,
	|			ДанныеПоРаботникуПриНазначении.Регистратор.ВидЗанятости КАК ВидЗанятости
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТЧРаботникиОрганизации.Организация КАК Организация,
	|				МАКСИМУМ(Работники.Период) КАК Период,
	|				ТЧРаботникиОрганизации.Физлицо КАК ФизЛицо,
	|				ТЧРаботникиОрганизации.Приказ КАК Приказ
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК ТЧРаботникиОрганизации
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|					ПО ТЧРаботникиОрганизации.Физлицо = Работники.Физлицо
	|						И ТЧРаботникиОрганизации.Организация = Работники.Организация
	|						И ТЧРаботникиОрганизации.Приказ = Работники.Приказ
	|						И Работники.Период <= ТЧРаботникиОрганизации.Период
	|						И (Работники.ПричинаИзмененияСостояния = &Прием)
	|			{ГДЕ
	|				ТЧРаботникиОрганизации.Должность КАК Должность,
	|				ТЧРаботникиОрганизации.ТабельныйНомер КАК ТабельныйНомер,
	|				ТЧРаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
	|				ТЧРаботникиОрганизации.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|				ТЧРаботникиОрганизации.ПодразделениеОрганизации КАК Подразделение}
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТЧРаботникиОрганизации.Организация,
	|				ТЧРаботникиОрганизации.Физлицо,
	|				ТЧРаботникиОрганизации.Приказ) КАК ДатыПоследнихДвиженийРаботников
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеПоРаботникуПриНазначении
	|				ПО ДанныеПоРаботникуПриНазначении.Период = ДатыПоследнихДвиженийРаботников.Период
	|					И ДатыПоследнихДвиженийРаботников.ФизЛицо = ДанныеПоРаботникуПриНазначении.Физлицо
	|					И ДатыПоследнихДвиженийРаботников.Приказ = ДанныеПоРаботникуПриНазначении.Приказ
	|					И ДатыПоследнихДвиженийРаботников.Организация = ДанныеПоРаботникуПриНазначении.Организация) КАК ПриказыОПриеме
	|		ПО ПриказыОПриеме.Организация = РаботникиОрганизации.Организация
	|			И ПриказыОПриеме.ФизЛицо = РаботникиОрганизации.Физлицо
	|			И ПриказыОПриеме.ПриказИзмерение = РаботникиОрганизации.Приказ}
	|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ";
	
	Если Не ВключатьУволенных Тогда 
		ТекстЗапроса = ТекстЗапроса	+ "
		|ГДЕ
		|	РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен
		|"
	ИначеЕсли Не ЗначениеНеЗаполнено(ДатаУволенных) Тогда
		ТекстЗапроса = ТекстЗапроса	+ "
		|ГДЕ
		|	(РаботникиОрганизации.ПричинаИзмененияСостояния <> &Уволен) или (РаботникиОрганизации.Период > &ДатаУволенных)
		|"
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса	+ "
	|
	|{ГДЕ
	|	РаботникиОрганизации.ФизЛицо КАК Работник,
	|	РаботникиОрганизации.ФизЛицо.Родитель КАК Группа,
	|	РаботникиОрганизации.Должность.* КАК Должность,
	|	РаботникиОрганизации.ТабельныйНомер КАК ТабельныйНомер,
	|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
	|	ПриказыОПриеме.Период КАК ДатаПриема,
	|	ПриказыОПриеме.ВидЗанятости КАК ВидЗанятости,
	|	РаботникиОрганизации.ПодразделениеОрганизации КАК Подразделение,
	|	РаботникиОрганизации.ОбособленноеПодразделение КАК ОбособленноеПодразделение
	| 	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
	|}
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаботникиОрганизации.ФизЛицо.Наименование
	|
	|";

	// Преобразуем текст запроса для получения полной информации о физлице
	УправлениеОтчетами.ДобавитьВТекстПостроителяДанныеОФизлице(ТекстЗапроса, СтруктураПредставлениеПолей, СтруктураФорматаПолей, "РаботникиОрганизации");	
	
	ПостроительОтчета.Текст = ТекстЗапроса;							  
	ПостроительОтчета.Параметры.Вставить("Уволен", Перечисления.ПричиныИзмененияСостояния.Увольнение);
	ПостроительОтчета.Параметры.Вставить("Прием", Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
							  
	//представление полей запроса
	СтруктураПредставлениеПолей.Вставить("Группа", "Группа физ.лиц");
	СтруктураПредставлениеПолей.Вставить("ОбособленноеПодразделение", "Организация");
	СтруктураПредставлениеПолей.Вставить("ВидЗанятости", "Вид занятости");
	СтруктураПредставлениеПолей.Вставить("ДатаПриема", "Дата приема");
	СтруктураПредставлениеПолей.Вставить("ТабельныйНомер", "Табельный номер");
	СтруктураПредставлениеПолей.Вставить("ЗанимаемыхСтавок", "Занимаемых ставок");
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	// отборы по умолчанию
	Если НачальноеЗаполнение Тогда
		МассивОтбора = Новый Массив;
		МассивОтбора.Добавить("ОбособленноеПодразделение");
		МассивОтбора.Добавить("Подразделение");
		МассивОтбора.Добавить("Должность");
		МассивОтбора.Добавить("Работник");
		УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
		ПостроительОтчета.Отбор.Работник.ВидСравнения = ВидСравнения.ВСписке;
	КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьСписокРаботников() Экспорт
	
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности", ДатаАктуальности);
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_Год", Год(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_Месяц", Месяц(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_День", День(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаУволенных", ДатаУволенных);
	
	Если ИсполнятьЗапрос Тогда 
		ПостроительОтчета.Выполнить();
		РезультатОтбора = ПостроительОтчета.Результат;
		Если РезультатОтбора.Пустой() Тогда
			СообщитьОбОшибке("Не обнаружено работников, удовлетворяющих указанным условиям!");
		КонецЕсли;
		
		Возврат Новый Структура("Команда,Данные","ЗаполнитьСписокРаботников",РезультатОтбора)
	Иначе
		ПостроительЗапроса = Новый ПостроительЗапроса(ПостроительОтчета.Текст);
		Для каждого Параметр Из ПостроительОтчета.Параметры Цикл
			ПостроительЗапроса.Параметры.Вставить(Параметр.Ключ,Параметр.Значение);
		КонецЦикла; 
		Для каждого ЭлементОтбора Из ПостроительОтчета.Отбор Цикл
			Если ЭлементОтбора.Использование Тогда
				НовыйОтбор = ПостроительЗапроса.Отбор.Добавить(ЭлементОтбора.ПутьКДанным,ЭлементОтбора.Имя,ЭлементОтбора.Представление);
				НовыйОтбор.ВидСравнения = ЭлементОтбора.ВидСравнения;
				НовыйОтбор.Значение = ЭлементОтбора.Значение;
				НовыйОтбор.ЗначениеПо = ЭлементОтбора.ЗначениеПо;
				НовыйОтбор.ЗначениеС = ЭлементОтбора.ЗначениеС;
				НовыйОтбор.Использование = Истина;
			КонецЕсли;
		КонецЦикла; 
		Возврат Новый Структура("Команда,ПостроительЗапроса","ЗаполнитьПостроительЗапроса",ПостроительЗапроса)
	КонецЕсли;
	
КонецФункции

#КонецЕсли

