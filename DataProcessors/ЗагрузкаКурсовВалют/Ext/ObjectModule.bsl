Перем ИмяФайла;

Перем СерверИсточник;
Перем СтрокаПараметраПолучения;
Перем ИмяВходящегоФайла;

Перем ОшибкаКодаСервера;

#Если Клиент Тогда

// Выделяет из переданной строки первое значение
 //  до символа "TAB"
 //
 // Параметры: 
 //  ИсходнаяСтрока - Строка - строка для разбора
 //
 // Возвращаемое значение:
 //  подстроку до символа "TAB"
 //
Функция ВыделитьПодСтроку(ИсходнаяСтрока)

	Перем ПодСтрока;
	
    Поз = Найти(ИсходнаяСтрока,Символы.Таб);
	Если Поз > 0 Тогда
		ПодСтрока = Лев(ИсходнаяСтрока,Поз-1);
		ИсходнаяСтрока = Сред(ИсходнаяСтрока,Поз+1);
	Иначе
		ПодСтрока = ИсходнаяСтрока;
		ИсходнаяСтрока = "";
	КонецЕсли;
	
	Возврат ПодСтрока;
 
 КонецФункции // ВыделитьПодСтроку()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Производит загрузку курсов и кратностей валют с сайта cbunew.dst.uz
//
// Параметры:
//  ИндикаторФормы     - ЭлементыФормы типа Индикатор - для отработки индикатора формы
//  НадписьВалютыФормы - ЭлементыФормы типа Надпись  - Для отработки надписи 
//													   загружаемой валюты
//
Процедура ЗагрузитьКурсы(ИндикаторФормы = Неопределено ,НадписьВалютыФормы = Неопределено, ВыводитьСообщения = Ложь,ДатаПолученияКурса=Неопределено) Экспорт
	
	Перем HTTP;
	
	Если (ИндикаторФормы = Неопределено) И (НадписьВалютыФормы = Неопределено) Тогда
		
		Настройки = ХранилищеОбщихНастроек.Загрузить("Обработка.ЗагрузкаКурсовВалют","Настройки",,"Все");
		Если Настройки<>неопределено Тогда
			
			Расписание = Настройки.Расписание;
			ДеньНедели = ДеньНедели(КонДата);
			Если Не Расписание.Получить(ДеньНедели-1).Пометка Тогда
				Возврат;
			КонецЕсли;
			Валюты = Настройки.СписокВалют;
			СписокВалют.Очистить();
			Для сч=0 По Валюты.Количество()-1 Цикл
				Вал = СписокВалют.Добавить();
				Вал.Валюта = Валюты[сч];
				Вал.Пометка = Истина;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	РегистрКурсыВалют = РегистрыСведений.КурсыВалют;
	ЗаписьКурсовВалют = РегистрКурсыВалют.СоздатьМенеджерЗаписи();

	ЧтениеXML = Новый ЧтениеXML();

	СерверИсточник = "cbu.uz"; 
	//СерверИсточник = "cbunew.dst.uz";

	//Адрес = "/section/rates/widget/xml/";  // на определенный день
	Адрес = "/ru/arkhiv-kursov-valyut/xml/";  // на определенный день
	
	ВремКаталог = КаталогВременныхФайлов() + "tempKurs";
	СоздатьКаталог(ВремКаталог);
	УдалитьФайлы(ВремКаталог,"*.*");
	
	КоличествоЗагружаемыхВалют = 0;
	Для каждого СтрокаСпВалют из СписокВалют Цикл
		КоличествоЗагружаемыхВалют = КоличествоЗагружаемыхВалют + Число(СтрокаСпВалют.Пометка);
	КонецЦикла;
	
	Инд = 1;
	Для каждого СтрокаСпВалют из СписокВалют Цикл

		Если Не СтрокаСпВалют.Пометка Тогда
			продолжить;
		КонецЕсли;
		ТекВалюта = СтрокаСпВалют.Валюта;
		Стр = "";
		
		Если ВыводитьСообщения Тогда 
			Сообщить(НСтр("ru='Загружается курс для "+СокрЛП(ТекВалюта.Наименование)+" (код "+ТекВалюта.Код+").';uz=''"));
		КонецЕсли;
		
		ИмяВходящегоФайла = "" + ВремКаталог + "\" + ИмяФайла;
		СтрокаПараметраПолучения = Адрес+СокрЛП(ТекВалюта.Наименование)+"/"+Формат(?(ДатаПолученияКурса=Неопределено,ТекущаяДата(),ДатаПолученияКурса),"ДФ=yyyy-MM-dd")+"/";
		Если ЗапроситьФайлыССервера(СерверИсточник, СтрокаПараметраПолучения, ИмяВходящегоФайла, HTTP) <> Истина Тогда
			Сообщить(НСтр("ru='Не удалось получить ресурс для валюты "+СокрЛП(ТекВалюта.Наименование)+" (код "+ТекВалюта.Код+"). Курс для валюты не загружен.';uz=''"));
			Если ОшибкаКодаСервера Тогда
				Прервать;
			КОнецЕсли;
			Продолжить;
		КонецЕсли; 

		ВходящийФайл = Новый Файл(ИмяВходящегоФайла);
		Если НЕ ВходящийФайл.Существует() Тогда
			Сообщить(НСтр("ru='Не удалось получить ресурс для валюты "+СокрЛП(ТекВалюта.Наименование)+" (код "+ТекВалюта.Код+"). Курс для валюты не загружен.';uz=''"));
			Продолжить;
		КонецЕсли;	

		ЧтениеXML.ОткрытьФайл(ИмяВходящегоФайла,,,"UTF-8");
				
		Попытка
			Пока ЧтениеXML.Прочитать() Цикл
				Если ЧтениеXML.Имя="Ccy" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
					ЧтениеXML.Прочитать();
					Валюта = ЧтениеXML.Значение;
				ИначеЕсли ЧтениеXML.Имя="date" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
					ЧтениеXML.Прочитать();
					ДатаКурса = ЧтениеXML.Значение;
				ИначеЕсли ЧтениеXML.Имя="Rate" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 
					ЧтениеXML.Прочитать();
					Курс = ЧтениеXML.Значение;				
				ИначеЕсли ЧтениеXML.Имя="Nominal" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда 			
					ЧтениеXML.Прочитать();
					Кратность = ЧтениеXML.Значение;				
				КонецЕсли;
			КонецЦикла;
			
			ЧтениеXML.Закрыть();
		Исключение
			Сообщить("Ошибка загрузки файла, возможно адрес сервера поменялся: "+СерверИсточник);
			Возврат;
		КонецПопытки;
		
		НадписьВалютыФормы = СокрЛП(ТекВалюта.Наименование);
		
		ИндикаторФормы = Инд/КоличествоЗагружаемыхВалют * 100;
		Инд = Инд + 1;
		
		Если Валюта <> неопределено Тогда
			
			ДатаКурса = СтрЗаменить(ДатаКурса,".",Символы.ПС);
			ДатаКурса = Дата(СтрПолучитьСтроку(ДатаКурса,3),СтрПолучитьСтроку(ДатаКурса,2),СтрПолучитьСтроку(ДатаКурса,1));
			
			ЗаписьКурсовВалют.Валюта = ТекВалюта;
			ЗаписьКурсовВалют.Период = ДатаКурса;
			ЗаписьКурсовВалют.Прочитать();
			ЗаписьКурсовВалют.Валюта    = ТекВалюта;
			ЗаписьКурсовВалют.Период    = Дата(ДатаКурса);
			ЗаписьКурсовВалют.Курс      = Курс;
			ЗаписьКурсовВалют.Кратность = Кратность;
			ЗаписьКурсовВалют.Записать();
			
			Если ВыводитьСообщения Тогда 
				Сообщить(НСтр("ru='Курс для "+СокрЛП(ТекВалюта.Наименование)+" (код "+ТекВалюта.Код+") загружен.';uz=''"));
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	УдалитьФайлы(ВремКаталог,"*.*");

КонецПроцедуры // ЗагрузитьКурсы()

////////////////////////////////////////////////////////////////////////////////

// Функция пытается создать HTTP осединение используя параметры
// Прокси-сервера, вводимые пользователем
//
// Параметры
//  СерверИсточник - Строка, адрес источника получения данных из сети
//
// Возвращаемое значение:
//   HTTPСоединение
//
Функция СоздатьСосединениеЧерезПрокси()

	Перем HTTP;
	Перем ПроксиСервер;
	
	// Восстановим сохраненные значения
	Восстановлено_ЗапомнитьИмяИПароль = ВосстановитьЗначение("ЗапомнитьИмяИПарольПрокси");
	Если ТипЗнч(Восстановлено_ЗапомнитьИмяИПароль) = Тип("Булево") Тогда
		ЗапомнитьИмяИПароль = Восстановлено_ЗапомнитьИмяИПароль;
	КонецЕсли; 
	Восстановлено_ИмяПользователя     = ВосстановитьЗначение("ИмяПользователяПрокси");
	Если ТипЗнч(Восстановлено_ИмяПользователя) = Тип("Строка") Тогда
		ИмяПользователя = Восстановлено_ИмяПользователя;
	КонецЕсли; 
	Восстановлено_ПарольПользователя  = ВосстановитьЗначение("ПарольПользователяПрокси");
	Если ТипЗнч(Восстановлено_ПарольПользователя) = Тип("Строка") Тогда
		ПарольПользователя = Восстановлено_ПарольПользователя;
	КонецЕсли; 
	
	Если ЗапомнитьИмяИПароль ИЛИ НЕ ЗначениеНеЗаполнено(ИмяПользователя) Тогда
		ПроксиСервер = Новый ИнтернетПрокси();
		ПроксиСервер.Пользователь = ИмяПользователя;
		ПроксиСервер.Пароль       = ПарольПользователя;
		Попытка
			HTTP = Новый HTTPСоединение(СерверИсточник,,,, ПроксиСервер);
			HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);
		Исключение
			HTTP = Неопределено;
		КонецПопытки;
	КонецЕсли;
	
	Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
	
		ФормаАвторизацииПрокси = ЭтотОбъект.ПолучитьФорму("ФормаПараметрыПрокси");
		ФормаАвторизацииПрокси.ПризнакОткрытияФормыИзЯзыка = Истина;
		Если ЗапомнитьИмяИПароль = Истина ИЛИ НЕ ЗначениеНеЗаполнено(ИмяПользователя) Тогда
			Если ТипЗнч(ЗапомнитьИмяИПароль) = Тип("Булево") Тогда
				ФормаАвторизацииПрокси.ЗапомнитьИмяИПароль = ЗапомнитьИмяИПароль;
			КонецЕсли;
			Если ТипЗнч(ИмяПользователя) = Тип("Строка") Тогда
				ФормаАвторизацииПрокси.ИмяПользователя = ИмяПользователя;
			КонецЕсли;
			Если ТипЗнч(ПарольПользователя) = Тип("Строка") Тогда
				ФормаАвторизацииПрокси.ПарольПользователя = ПарольПользователя;
			КонецЕсли;
		КонецЕсли;
		HTTP = ФормаАвторизацииПрокси.ОткрытьМодально();
		
	КонецЕсли; 

	Возврат HTTP;
	
КонецФункции

// Функция получает файлы с сервера с указанными параметрами и сохраняет на диск
//
// Параметры:
//  HTTP - HTTPСоединение, если приходится использовать данную функцию в цикле, то тут передается
//         переменная с созданным в предыдущей итерации цикла HTTPСоединением
// СерверИсточникПараметр - Строка, сервер, с которого необходимо получить файлы
// СтрокаПараметраПолученияПараметр - Строка, адрес ресурса на сервере.
// ИмяВходящегоФайлаПараметр - Имя файла, в который помещаются данные полученного ресурса.
//
// Возвращаемое значение:
//  Булево - Успешно получены файлы или нет.
//
Функция ЗапроситьФайлыССервера(СерверИсточникПараметр, СтрокаПараметраПолученияПараметр, ИмяВходящегоФайлаПараметр, HTTP = Неопределено)
	
	СерверИсточник           = СерверИсточникПараметр;
	СтрокаПараметраПолучения = СтрокаПараметраПолученияПараметр;
	ИмяВходящегоФайла        = ИмяВходящегоФайлаПараметр;
	
	ФормаОшибки = ЭтотОбъект.ПолучитьФорму("ФормаОшибки"); 
	
	Если ИспользоватьПрокси Тогда
		ПроксиСервер = Новый ИнтернетПрокси;
		ПроксиСервер.НеИспользоватьПроксиДляЛокальныхАдресов = Истина;
		ПроксиСервер.Пользователь = ПользовательПрокси;
		ПроксиСервер.Пароль = ПарольПрокси;
		ПроксиСервер.Установить(ПротоколПрокси, СерверПрокси, ПортПрокси);
		Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
			HTTP = Новый HTTPСоединение(СерверИсточник,,,, ПроксиСервер)
		КонецЕсли;
	Иначе
		Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
			HTTP = Новый HTTPСоединение(СерверИсточник)
		КонецЕсли;
	КонецЕсли;
	
	
	Попытка
		HTTP.Получить(СтрокаПараметраПолучения, ИмяВходящегоФайла);
		Возврат Истина;
	Исключение
		Если Найти(ОписаниеОшибки(), "407") <> 0 И Найти(НРег(ОписаниеОшибки()), "authentication") <> 0 Тогда
			// Скорее всего соединяемся через прокси
			HTTP = СоздатьСосединениеЧерезПрокси();
			Если ТипЗнч(HTTP) <> Тип("HTTPСоединение") Тогда
				Сообщить(НСтр("ru='Соединение с сервером не установлено.';uz=''"));
				Возврат Ложь;
			Иначе
				Возврат Истина;
			КонецЕсли; 
		ИначеЕсли Найти(ОписаниеОшибки(), "402") <> 0 Тогда
			ФормаОшибки.Панель.ТекущаяСтраница = ФормаОшибки.Панель.Страницы.Страница402;
			ОшибкаКодаСервера = Истина;
			ФормаОшибки.ОткрытьМодально();
		ИначеЕсли Найти(ОписаниеОшибки(), "403") <> 0 Тогда
			ФормаОшибки.Панель.ТекущаяСтраница = ФормаОшибки.Панель.Страницы.Страница403;
			ОшибкаКодаСервера = Истина;
			ФормаОшибки.ОткрытьМодально();
		ИначеЕсли Найти(ОписаниеОшибки(), "500") <> 0 Тогда
			ФормаОшибки.Панель.ТекущаяСтраница = ФормаОшибки.Панель.Страницы.Страница500;
			ОшибкаКодаСервера = Истина;
			ФормаОшибки.ОткрытьМодально();
		Иначе
			Возврат Ложь;
		КонецЕсли;
	КонецПопытки;
	

КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ИмяФайла = "Curses.xml"; 
ОшибкаКодаСервера = Ложь;
КонДата = ТекущаяДата();

#КонецЕсли
