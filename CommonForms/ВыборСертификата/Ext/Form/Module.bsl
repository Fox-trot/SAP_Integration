////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтруктурСертификатов = Параметры.МассивСтруктурСертификатов;
	
	Для Каждого СтруктураСертификата Из МассивСтруктурСертификатов Цикл
		НоваяСтрока = СертификатыЭЦП.Добавить();
		СтруктураНеобходимыхРеквизитовСертификата = ОбработчикиDidoxEImzoСервер.ПолучитьНеобходимыеРеквизитыИзСтруктурыСертификата(СтруктураСертификата, "КомуВыдан, ДействителенДо");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураНеобходимыхРеквизитовСертификата, "КомуВыдан, ДействителенДо");
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураСертификата);
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ФОРМЫ СертификатыЭЦП

&НаКлиенте
Процедура СертификатыЭЦПВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура СертификатыЭЦПВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбратьИЗакрыть();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ВыбратьИЗакрыть()
	
	ТекущиеДанные = Элементы.СертификатыЭЦП.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	РезультатВыбора = Новый Структура("plugin, alias, serialNumber, disk, path, name, file_name");
	ЗаполнитьЗначенияСвойств(РезультатВыбора, ТекущиеДанные);
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры


